# Problemes especialment complexos de la desambiguació
#	- son: pos o vbser o nom
#	- a: vbhaver o prep
#	- an: vbhaver o nom
#	- se: prn.pro.ref o cnjadv
#	- es: det (aran) o vbser
#	- o: cnjcoo o prn.pro
#	- que: enon, rel, cnjsub
#	- ne: enon, cnjcoo, prn.pro
#	- e: enon o cnjcoo
#	- ne: enon, adv o prn.pro
#	- cap: n.m, n.mf, det, prn, adv, pr, vblex (!)
#	- mai: n, cnjcoo, adv

DELIMITERS = "<.>" "<!>" "<?>" "<...>" "<¶>" "<:>";
SOFT-DELIMITERS = "<,>" "<;>";
SUBREADINGS = LTR ; # Alternate, left-to-right (main reading on the left)

LIST BOS = >>> sent ;
LIST EOS = <<< sent ;

#Categorias
LIST V = vblex vbser vbhaver vbmod ;
LIST Verb = vblex ;
LIST Ser = vbser ;
LIST Haver = vbhaver ;
LIST Aver = "aver" "auer" ;
LIST VBaux = vbser vbhaver ;
SET VVmod = ("voler") OR ("faler") OR ("dever") OR ("déuer") OR ("dever") OR ("soler") OR ("sòler") OR ("saber") OR ("sàber") ;
SET Vmod = (vbmod) OR (vblex) + VVmod ;
LIST Conjco = cnjcoo ;
LIST Conjsub = cnjsub ;
LIST Conjadv = cnjadv ;
LIST Enon = enon ;
LIST Rel = rel ;
LIST N = n ;
LIST NP = np ;
LIST AJ = adj ;
LIST N_AJ = n adj ;
LIST N_AJ_PP = n adj pp ;
LIST AJ_PP = adj pp ;
LIST DET = det ;
LIST NUM = num ;
LIST PREP = pr ;
LIST PRON = prn ;
LIST PERS = pers ;
SET AV = (adv) - (enon) ;
LIST AVexcl = (adv excl) ;
LIST PREAV = preadv ;
LIST PRONPers = (prn p1) (prn p2) (prn p3);
LIST PRONRef = "me" "te" "se" "nos" "vos" ;
LIST IJ = ij ;
LIST PREDET = predet ;
LIST Pos = pos ;
LIST SENT = sent ;
#Jos=categorias
LIST VBger = ger ;
LIST VBinf = inf ;
LIST VBinfger = inf ger ;
LIST VBimp = imp ;
LIST Pro = pro ;
LIST Tn = tn ;
LIST Ref = ref ;
LIST PRencl = enc ;
LIST VBpp = pp ;
LIST Npl = (n pl);
LIST AJpl = (adj pl);
LIST Ns = (n s);
LIST AJs = (adj s);
LIST Nm = (n m);
LIST AJm = (adj m);
LIST Nf = (n f);
LIST AJf = (adj f);
LIST Vconj = pri prs pii ifi pis imp fti cni ;
LIST Vconj_non_Imp = pri prs pii ifi pis fti cni ;
LIST Vconj_indic = pri pii ifi fti cni ;
LIST PRI = pri ;
LIST PRS = prs ;
LIST PIS = pis ;
LIST PII = pii ;
LIST IFI = ifi ;
LIST Itg = itg ;
LIST Excl = excl ;
LIST DETdef = (det def);
LIST DETind = (det ind);
LIST DETpos = (det pos);
LIST DETdem = (det dem);

SET Ant = (np ant) ;
SET Cog = (np cog) ;
SET Ant_Cog = Ant OR Cog ;
SET Top = (np top) ;
SET Al = (al) ;
SET Acr = (acr) ;
SET AVG = AV - Enon ;

#Listas
SET intrprop = Conjco OR Itg ; #cnjcoo cnjsub rel itg "," ";" sent adv;
LIST motsdetpl = (det pl) (pr pl);
LIST motsdetsg = (det sg) (pr sg);
LIST motsdetf = (det f) (pr f);
LIST motsdetm = (det m) (pr m);

LIST Gen = m f mf nt ;
LIST Masc = m mf ;
LIST Fem = f mf ;
LIST Masc_strict = m ;
LIST Fem_strict = f ;

LIST Nbr = sg pl sp ;
LIST Sg = sg sp;
LIST Pl = pl sp;
LIST Sg_strict = sg ;
LIST Pl_strict = pl ;


SET MascSg = (m sg) OR (m sp) OR (mf sg) OR (mf sp) ;
SET MascPl = (m pl) OR (m sp) OR (mf pl) OR (mf sp) ;
SET FemSg = (f sg) OR (f sp) OR (mf sg) OR (mf sp) ;
SET FemPl = (f pl) OR (f sp) OR (mf pl) OR (mf sp) ;

SET AcordSN = MascSg OR MascPl OR FemSg OR FemPl ;

SET AcordSP = Sg OR Pl ;

LIST P1 = p1 ;
LIST P2 = p2 ;
LIST P3 = p3 ;
LIST Pers = p1 p2 p3 ;

SET Sg1 = (p1 sg) OR (p1 m sg) OR (p1 f sg) OR (p1 mf sg) ;
SET Sg2 = (p2 sg) OR (p2 m sg) OR (p2 f sg) OR (p2 mf sg) ;
SET Sg3 = (p3 sg) OR (p3 m sg) OR (p3 f sg) OR (p3 mf sg) ;
SET Pl1 = (p1 pl) OR (p1 m pl) OR (p1 f pl) OR (p1 mf pl) ;
SET Pl2 = (p2 pl) OR (p2 m pl) OR (p2 f pl) OR (p2 mf pl) ;
SET Pl3 = (p3 pl) OR (p3 m pl) OR (p3 f pl) OR (p3 mf pl) ;
LIST VSg1 = (vblex p1 sg) (vbser p1 sg) (vbhaver p1 sg) (vbmod p1 sg) ;
LIST VSg2 = (vblex p2 sg) (vbser p2 sg) (vbhaver p2 sg) (vbmod p2 sg) ;
LIST VSg3 = (vblex p3 sg) (vbser p3 sg) (vbhaver p3 sg) (vbmod p3 sg) ;
LIST VPl1 = (vblex p1 pl) (vbser p1 pl) (vbhaver p1 pl) (vbmod p1 pl) ;
LIST VPl2 = (vblex p2 pl) (vbser p2 pl) (vbhaver p2 pl) (vbmod p2 pl) ;
LIST VPl3 = (vblex p3 pl) (vbser p3 pl) (vbhaver p3 pl) (vbmod p3 pl) ;

SET AcordSV = Sg1 OR Sg2 OR Sg3 OR Pl1 OR Pl2 OR Pl3 ;

LIST PriSg1 = (pri p1 sg) ;
LIST PriSg2 = (pri p2 sg) ;
LIST PriSg3 = (pri p3 sg) ;
LIST PriPl1 = (pri p1 pl) ;
LIST PriPl2 = (pri p2 pl) ;
LIST PriPl3 = (pri p3 pl) ;
LIST PiiSg1 = (pii p1 sg) ;
LIST PiiSg2 = (pii p2 sg) ;
LIST PiiSg3 = (pii p3 sg) ;
LIST PiiPl1 = (pii p1 pl) ;
LIST PiiPl2 = (pii p2 pl) ;
LIST PiiPl3 = (pii p3 pl) ;
LIST IfiSg1 = (ifi p1 sg) ;
LIST IfiSg2 = (ifi p2 sg) ;
LIST IfiSg3 = (ifi p3 sg) ;
LIST IfiPl1 = (ifi p1 pl) ;
LIST IfiPl2 = (ifi p2 pl) ;
LIST IfiPl3 = (ifi p3 pl) ;
LIST FtiSg1 = (fti p1 sg) ;
LIST FtiSg2 = (fti p2 sg) ;
LIST FtiSg3 = (fti p3 sg) ;
LIST FtiPl1 = (fti p1 pl) ;
LIST FtiPl2 = (fti p2 pl) ;
LIST FtiPl3 = (fti p3 pl) ;
LIST CniSg1 = (cni p1 sg) ;
LIST CniSg2 = (cni p2 sg) ;
LIST CniSg3 = (cni p3 sg) ;
LIST CniPl1 = (cni p1 pl) ;
LIST CniPl2 = (cni p2 pl) ;
LIST CniPl3 = (cni p3 pl) ;
LIST PrsSg1 = (prs p1 sg) ;
LIST PrsSg2 = (prs p2 sg) ;
LIST PrsSg3 = (prs p3 sg) ;
LIST PrsPl1 = (prs p1 pl) ;
LIST PrsPl2 = (prs p2 pl) ;
LIST PrsPl3 = (prs p3 pl) ;
LIST PisSg1 = (pis p1 sg) ;
LIST PisSg2 = (pis p2 sg) ;
LIST PisSg3 = (pis p3 sg) ;
LIST PisPl1 = (pis p1 pl) ;
LIST PisPl2 = (pis p2 pl) ;
LIST PisPl3 = (pis p3 pl) ;
LIST ImpSg2 = (imp p2 sg) ;
LIST ImpPl1 = (imp p1 pl) ;
LIST ImpPl2 = (imp p2 pl) ;

SET AcordTempsPers = PriSg1 OR PriSg2 OR PriSg3 OR PriPl1 OR PriPl2 OR PriPl3
	OR PiiSg1 OR PiiSg2 OR PiiSg3 OR PiiPl1 OR PiiPl2 OR PiiPl3
	OR IfiSg1 OR IfiSg2 OR IfiSg3 OR IfiPl1 OR IfiPl2 OR IfiPl3
	OR FtiSg1 OR FtiSg2 OR FtiSg3 OR FtiPl1 OR FtiPl2 OR FtiPl3
	OR CniSg1 OR CniSg2 OR CniSg3 OR CniPl1 OR CniPl2 OR CniPl3
	OR PrsSg1 OR PrsSg2 OR PrsSg3 OR PrsPl1 OR PrsPl2 OR PrsPl3
	OR PisSg1 OR PisSg2 OR PisSg3 OR PisPl1 OR PisPl2 OR PisPl3
	OR ImpSg2 OR ImpPl1 OR ImpPl2 ;


SET CM = (cm) OR (lpar) OR (rpar) OR ("<;>") ;
SET CM_strict = (cm) OR (lpar) - ("«") OR (rpar) - ("»") OR ("<;>") ;
LIST Lpar = lpar ;
LIST Rpar = rpar ;
LIST ExclMark = "!" ;

SET Cnj_Rel_End = BOS OR Conjco OR Conjsub OR Conjadv OR Rel OR VBinf ;
SET SN_End = EOS OR PREP OR Conjsub OR Conjadv OR Rel OR V ;


LIST unknown = ("\\*.*"r) ;
LIST unknownMajIni = ("\\*[A-ZÀÁÈÉíÒÓÚÜÇ].*"r) ;
LIST unknownMinIni = ("\\*[a-zàáäâèéëêíïîòóöôúüûç].*"r) ;
LIST MajIni = ("\\<[A-ZÀÁÄÂÈÉËÊÍÏÎÒÓÖÔÚÜÛÇ].*\\>"r) ;
LIST Majusc = ("\\<[A-ZÉÈÊ][A-ZÂÉÈÊÎÔÛ]*>"r) ;
LIST MinIni = ("\\<[a-zàáäâèéëêíïîòóöôúüûç].*\\>"r) ;
LIST VocIni = ("\\<[aeiouàáäâèéëêíïîòóöôúüû].*\\>"r) ;
LIST siecles_nom_romains = ("[IVX][IVX]*"r) ;
LIST An4 = ("[1-2][0-9][0-9][0-9]"r) ;	# an (4 chiffres)
LIST An3 = ("[1-9][0-9][0-9]"r) ;	# an (3 chiffres): atencion a "700 000" !
LIST An2 = ("[1-9][0-9]"r) ;	# an (2 chiffres)
LIST NumOrd = ("[1-9][0-9]en"r) ("[1-9][0-9]au"r) ;


#Mots
LIST A = "a";
SET En = ("en") - ("<en .*>"ri) ;
LIST De = "de";
LIST Ne_pron = ("ne" prn) ("en" prn) ;
LIST Ne_conj = ("ne" cnjcoo);
LIST Ne_enon = ("ne" enon);
LIST Ne_adv = ("ne" adv);
LIST E_enon = ("e" enon);
LIST Dins = "dins" "dens" "hens";
LIST Jos = "jos";
LIST Pendent = "pendent";
LIST Un = "un" ;
LIST An = "an" ;
LIST Eth = "<eth>i" ;
LIST Nostre = "nòstre" "nòste" ;
LIST Vostre = "vòstre" "vòste" ;
LIST Pas = "pas" ;
LIST AV_Pas_Neg = "pas" "jamai" "jamei" "jamèi" "jamès" "jamés" "jamai pus" "mei jamei" "tanpauc" "tampòc" "tanpòc" "aintanpauc" "atanpauc" "enlòc" "enluòc" "ges" "cap" "briga" "brica" "veta" "gota" "cap mai" "cap mei" "cap pus" "cap mès" "nullament" "aucunament" "alcunament" "degunament" "gaire" "guaire" ;
LIST PRON_Pas_Neg = "cap" "nat" "minga" "narma" "degun" "arrés" "arrís" "digun" "digús" "persona" "res" "arren" "arrens" "ren" "res pus" ;
LIST DET_Pas_Neg = "cap" "cap de" "nat" "brica de" "briga de" "ges de" ;
LIST Cap = ("<cap>"i) ;
LIST Caps = ("<caps>"i) ;
LIST Cap_de = ("<cap de>"i) ("<cap d'>"i) ("<cap d’>"i) ;
LIST Caps_de = ("<caps de>"i) ("<caps d'>"i) ("<caps d’>"i) ;
LIST Cap_de_del = ("<cap de>"i) ("<cap d'>"i) ("<cap d’>"i) ("<cap del>"i) ("<cap dels>"i) ("<cap deu>"i) ("<cap deus>"i) ;
LIST Caps_de_del = ("<caps de>"i) ("<caps d'>"i) ("<caps d’>"i) ("<caps del>"i) ("<caps dels>"i) ("<caps deu>"i) ("<caps deus>"i) ;
LIST A_de = ("<a de>"i) ("<a d'>"i) ("<a d’>"i) ;
LIST Mai = ("mai" adv) ("mei" adv) ("mès" adv) ("mes" adv) ("fòrça mai" adv) ("un pauc mai" adv) "un chic mai" "un bricon mai" "plan mai" ;
LIST Pus = ("pus" adv) ;
LIST Mens = "mens" "mensh" ;
LIST Melhor = "melhor" "mielhor" "mélher" "miélher" ;
LIST Peger = "péger" "piéger" ;
LIST AdvComp = ("mai" adv) ("mei" adv) ("mès" adv) ("mes" adv) ("pus" adv) ("fòrça mai" adv) ("un pauc mai" adv) "un pè mes" "drin mei" "un chic mai" "un chic mei" "un bricon mei" "plan mai" "hèra mei" "fòrt mei" "mens" "mensh" "fòrça mens" "plan mens" "hèra mensh" "fòrt mensh" "drin mensh" "un chic mens" "un bricon mens" "un chic mensh" ;
LIST Donc = "donc" "doncas" "dongas" "pasmes" "totun" "çaquelà" "ça que la" "emès" "pr'aquò" ;
LIST Res = "res" "arren" "arrens" "ren" ;
LIST Pel = "pel" "peu" ;
LIST Deu = "deu" ;
LIST ACausaDe = "a causa de" "en causa de" "pr'amor de" "per'mor de";
LIST Que = "que" ("<que>"i) ;
LIST Qui = "qui" ;
LIST Quin = "quin" ;
LIST Que_Itg = ("qué" itg) ;
LIST Se = "se" ;
LIST Si = "si" ;
LIST Las = "las" ;
LIST Mai_bon = "mai bon" "mai plan" "mei bon" "mei plan" ;
LIST Mas_cnjcoo = ("mas" cnjcoo) ("mes" cnjcoo) ("mès" cnjcoo) ("mai" cnjcoo) ;
LIST O_cnjcoo = ("o" cnjcoo) ("ò" cnjcoo) ;
LIST Semblar_Pareisser = "semblar" "paréisser" "paréisher" ;
LIST Devenir = "devenir" "venir" "vàder" "vénguer" "viéner" "vier" ;
LIST Demandar = "demandar" "demanar" "interrogar" "questionar" "qüestionar" "saber" "sàber" "estudiar" "cercar" "investigar" ;
LIST VNonPron = "demorar" "abitar" "trabalhar" "tribalhar" "manjar" "beure" "béver" ;	# vèrbs non pronominals
LIST Far = "far" "har" "hèr" ;
LIST Estat = "estat" ;
LIST Clau = "clau" ;
LIST Calar = "calar" ;
LIST Caler = "caler" ;
LIST Volar = "volar" ;
LIST Voler = "voler" ;
LIST Podar = "podar" ;
LIST Poder = "poder" ;
LIST Seire = "sèire" ;
LIST Saber = "saber" "sàber" "assaber" "assàber" ;
LIST Vengar = "vengar" ;
LIST Vener = "véner" "vénder" "vendre";
LIST Venir = "venir" "vier" "viéner" "vénguer" ;
LIST Pareisser = "paréisser" "paréisher" ;
LIST Parir = "parir" ;
LIST Parer = "pàrer" ;
LIST Gausir = "gausir" ;
LIST Gausar = "gausar" ;
LIST Estar = "estar" ;
LIST Estavanir = "estavanir" ;
LIST Serar = "serar" ;
LIST DetDe = ("fòrça de" det) ("bravament de" det) ("brica de" det) ("briga de" det) ("cap de" det) ("chic de" det) ("drin de" det) ("de bisçantenas de" det) ("ges de" det) ("hèra de" det) ("mai de" det) ("milantas de" det) ("pas cap de" det) ("pauc de" det) ("plan de" det) ("tant de" det) ("tròp de" det) ("ua balada de" det) ("ua horrèra de" det) ("ua parrabastèra de" det) ("ua pièla de" det) ("ua sarabantena de" det)  ("ua sòrta de" det) ("ua tropa de" det) ("ua troperada de" det) ("ua ahoalh de" det) ("un arramat de" det) ("un beròi tropèth de" det) ("un bricon de" det) ("un chic de" det) ("un chiquet de" det) ("un drin de" det) ("un escag de" det) ("un frami de" det) ("un fum de" det) ("un grand nombre de" det) ("un hardèu de" det) ("un hèish de" det) ("un hum de" det) ("un molon de" det) ("un mont de" det) ("un pauc de" det) ("un sarròt de" det) ("un tropèth de" det) ("una brica de" det) ("una brina de" det) ("una idèa de" det) ("quant de" det) ("pro de" det) ;
LIST Ple = "ple" ;
LIST Brau = "brau" ;
LIST Entorn = "entorn" ;
LIST Drech = ("drech") ("dret") ("dreit") ;
LIST Drecha = ("drecha") ("dreta") ("dreita") ;
LIST Esquerra = ("esquèrra") ("quèrra") ("gaucha") ;

LIST FinFr = "<.>" "<!>" "<?>" "<...>" "<¶>" "<:>";

#List Artcontrpl = "<als>" "<aus>" "<aths>" "<as>" "<dels>" "<deus>" "<dals>" "<deths>" "<des>" "<suls>" "<suus>" "<taus>" "<taths>" "<entaus>" "<entaths>" "<entàs>" "<pels>" "<peus>" "<peths>" "<preus>" "<vèls>" "<jols>" "<enquiaths>" "<ens>" "<enes>" "<endeus>" "<dambeus>" ;
List Artcontrpl = "<als>"i "<aus>"i "<aths>"i "<dels>"i "<deus>"i "<dals>"i "<deths>"i "<des>"i "<suls>"i "<suus>"i "<taus>"i "<taths>"i "<entaus>"i "<entaths>"i "<entàs>"i "<pels>"i "<peus>"i "<peths>"i "<preus>"i "<vèls>"i "<jols>"i "<enquiaths>"i "<ens>"i "<enes>"i "<endeus>"i "<dambeus>"i ;
#List Artcontrsg = "<al>" "<au>" "<ath>" "<del>" "<deu>" "<dal>" "<deth>" "<sul>" "<suu>" "<tau>" "<tath>" "<entau>" "<entath>" "<pel>" "<peu>" "<peth>" "<preu>" "<vèl>" "<jol>" "<enquiath>" "<en>" "<ene>" "<endeu>" "<dambeu>" ;
List Artcontrsg = "<al>"i "<au>"i "<ath>"i "<del>"i "<deu>"i "<dal>"i "<deth>"i "<sul>"i "<suu>"i "<tau>"i "<tath>"i "<entau>"i "<entath>"i "<pel>"i "<peu>"i "<peth>"i "<preu>"i "<vèl>"i "<jol>"i "<enquiath>"i "<ene>"i "<endeu>"i "<dambeu>"i ;
LIST Jorns = "diluns" "dimars" "dimècres" "dimèrcs" "dijòus" "dijaus" "divés" "divendres" "dissabte" "dimenge" ;

List Nummois = "1" "1èr" "1ièr" "2" "3" "4" "5" "6" "7" "8" "9" "10" "11" "12" "13" "14" "15" "16" "17" "18" "19" "20" "21" "22" "23" "24" "25" "26" "27" "28" "29" "30" "31" "<purmèr>" "<prumèr>" "<prumièr>" "<primièr>" "<primèr>" "<dos>" "<dus>" "<tres>" "<quatre>" "<quate>" "<cinc>" "<sièis>" "<sèis>" "<sies>" "<siés>" "<siès>" "<sheis>" "<sèt>" "<uèit>" "<ueit>" "<uòch>" "<uèch>" "<nòu>" "<nau>" "<dètz>" "<onze>" "<dotze>" "<tretze>" "<catòrze>" "<catorze>" "<quatòrze>" "<quatorze>" "<quinze>" "<setze>" "<dètz-e-sèt>" "<dètz-e-uèit>" "<dètz-e-ueit>" "<dètz-e-uèch>" "<dètz-e-uòch>" "<dètz-e-nòu>" "<dètz-e-nau>" "<vint>" "<vingt>" "<vint-e-un>" "<vingt-e-un>" "<vint-e-dos>" "<vint-e-dus>" "<vingt-e-dos>" "<vingt-e-dus>"  "<vint-e-tres>" "<vingt-e-tres>" "<vint-e-quatre>" "<vingt-e-quatre>" "<vint-e-quate>" "<vingt-e-quate>" "<vint-e-cinc>" "<vingt-e-cinc>" "<vint-e-sèis>" "<vingt-e-sèis>" "<vint-e-sièis>" "<vingt-e-sièis>" "<vint-e-sies>" "<vingt-e-sies>" "<vint-e-siès>" "<vingt-e-siès>" "<vint-e-siés>" "<vingt-e-siés>" "<vint-e-sheis>" "<vingt-e-sheis>" "<vint-e-sèt>" "<vingt-e-sèt>" "<vint-e-uèit>" "<vingt-e-uèit>" "<vint-e-ueit>" "<vingt-e-ueit>" "<vint-e-uèch>" "<vingt-e-uèch>" "<vint-e-uòch>" "<vingt-e-uòch>" "<vint-e-nòu>" "<vingt-e-nòu>" "<vint-e-nau>" "<vingt-e-nau>" "<trenta>" "<trenta-e-un>" "<trenta-un>" "<dètz e uèch>" "<dètz e uòch>" "<dètz e nòu>" "<dètz e nau>" "<vingt>" "<vint e un>" "<vingt e un>" "<vint e dos>" "<vint e dus>" "<vingt e dos>" "<vingt e dus>"  "<vint e tres>" "<vingt e tres>" "<vint e quatre>" "<vingt e quatre>" "<vint e quate>" "<vingt e quate>" "<vint e cinc>" "<vingt e cinc>" "<vint e sèis>" "<vingt e sèis>" "<vint e sièis>" "<vingt e sièis>" "<vint e sies>" "<vingt e sies>" "<vint e siès>" "<vingt e siès>" "<vint e siés>" "<vingt e siés>" "<vint e sheis>" "<vingt e sheis>" "<vint e sèt>" "<vingt e sèt>" "<vint e uèit>" "<vingt e uèit>" "<vint e ueit>" "<vingt e ueit>" "<vint e uèch>" "<vingt e uèch>" "<vint e uòch>" "<vingt e uòch>" "<vint e nòu>" "<vingt e nòu>" "<vint e nau>" "<vingt e nau>" "<trenta>" "<trenta e un>" "<trenta un>" ;

LIST Nommois = "genèr" "genièr" "janvièr" "genoier" "genier" "gèr" "janvièir" "janvier" "genovier" "febrièr" "feurèir" "heurèr" "herevèr" "hrevèr" "hervèr" "feurier" "febrier" "hiurèr" "març" "abriu" "abril" "abrial" "abriau" "abrieu" "mai" "junh" "juin" "gulh" "julh" "julhet" "gulhet" "junhsèga" "agost" "aost" "avost" "ost" "seteme" "setembre" "octobre" "octòbre" "noveme" "novembre" "deceme" "decembre" "desembre" ;

LIST Vdire = "dire" "díser" "respóner" "respondre" "cridar" "confessar" "con·hessar" "declarar" "afirmar" "reafirmar" "manifestar" "contar" "raportar" "expausar" "desvelar" "informar" "explicar" "ensenhar" "enonciar" "anonciar" "comunicar" "precisar" "avançar" "afortir" "ahortir" "allegar" "explicitar" "indicar" "signalar" "significar" "escriure" "escríver" "léger" "legir" "assegurar" "jurar" "certificar" "predire" "predíser" "pensar" "enténer" "ausir" "audir" "entiéner" "entendre" "ajustar" "comentar" "denonciar" "rapelar" "raperar" "brembar" "rebrembar" "remembrar" "remombrar" "rampelar" "recordar" "rementar" "remembrar" "remembrar" "har" "far" "hèr" "concedir" "replicar" "respostir" "rebecar" "assegurar" "garantir" "guarantir" "prometre" "prométer" "insistir" "nuançar" "matisar" "pavonar" "ajustar" "apondre" "híger" "ahíger" "acusar" "reprene" "ramoncinar" "increpar" "semonsar" "conclure" "concludir" ;

LIST Adjpos = "mieu" "mèn" "men" "mèn" "mieu" "tieu" "ton" "tòn" "tieu" "tòn" "sieu" "sòn" "son" "sòn" "sieu" "nòstre" "noste" "nòste" "nòste" "nòstre" "nòstre" "vòstre" "voste" "vòste" "vòste" "vòstre" "vòstre" "vòste" "lor" ;

SET AdjOrd = ("primièr") OR ("primèr") OR  ("prumièr") OR ("prumèr") OR ("purmèr")
OR ("segond") OR ("dusau")
OR ("tresen") OR ("tresau")
OR ("quatren") OR ("quatrau")
OR ("cinquen") OR ("cinquau")
OR ("seisen") OR ("sheisau")
OR ("seten") OR ("setau")
OR ("ochen") OR ("ueitau")
OR ("noven") OR ("navau")
OR ("desen") OR ("detzau")
OR ("onzen") OR ("onzau")
OR ("dotzen") OR ("dotzau")
OR ("tretzen") OR ("tretzau")
OR ("catorzen") OR ("catorzau")
OR ("quinzen") OR ("quinzau")
OR ("setzen") OR ("setzau")
OR ("dètz e seten") OR ("dètz-setau")
OR ("dètz e ochen") OR ("dètz-ueitau")
OR ("dètz e noven") OR ("dètz-navau")
OR ("vinten") OR ("vintau")
OR ("trenten") OR ("trentau")
OR ("quaranten") OR ("quarantau")
OR ("cinquanten") OR ("cinquantau")
OR ("seissanteu") OR ("seishantau")
OR ("setanten") OR ("setantau")
OR ("ochanten") OR ("uietantau")
OR ("nonanten") OR ("navantau")
OR ("centen") OR ("centau")
OR ("milen") OR ("milau")
OR ("milionen") OR ("milionau")
OR ("dernier") OR ("darnièr") OR ("darrièr") OR ("darrèr")
OR NumOrd ;

# adjectifs qui souvent vont devant le nom
SET AdjPre = ("ancian") OR ("nòu") OR ("nau") OR ("novèl") OR ("navèth") OR ("futur") OR ("grand") OR ("gran") OR ("màger") OR ("petit") OR ("pichon") OR ("pichòt") OR ("bon") OR ("mal") OR ("mau") OR ("marrit") OR ("naut") OR ("haut") OR ("bas") OR ("baish") OR ("altre") OR ("autre") OR ("aute") OR ("meteis") OR ("medish") OR ("medeish") OR ("madeish") OR ("quite") OR ("quiti") OR ("mièg") OR ("miei") OR AdjOrd;


LIST Dignitat = "papa" "patriarca" "avesque" "arcavesque" "archavesque" "archevesque" "arquevesque" "sant" "sant" "apòstol" "apostòl" "emperador" "emperaire" "rei" "tsar" "vicerei" "regent" "prince" "infant" "dalfin" "comte" "comtessa" "vescomte" "vescomtessa" "duc" "grand-duc" "arcaduc" "archiduc" "marqués" "baron" "cònsol" "cònsol màger" "sénher-cònsol" "mera" "cònse" "conse" "mèra" "alcalde" ;

LIST Carrera = "carrièra" "carrèra" "baloard" "avenguda" "avienguda" "plaça" "alèa" "alea" ;

LIST Construccion = "glèisa" "catedrala" "catedrau" "monastèri" "monastièr" "mostièr" "mongia" "abadiá" "abadia" "priorat" "chartrosa" "parròquia" "parròpia" "castèl" "castèu" "castèth" "fortalesa" "hortalessa" "casteràs" "comuna" "mairia" "ostal# de la comuna" "ostau# de la comuna" "pont" ;

LIST Comuna = "comuna" "vila" "citat" "ciutat" "borg" "vilatge" ;

LIST Fiera = "fièra" "fiera" "fièira" "hèira" "fira" ;

LIST Lenga = "occitan" "francés" "anglés" "alemand" "espanhòl" "espanhòu" "italian" "rus" "chinés" "japonés" "catalan" "basc" "basco" "breton" "còrse" "arpitan" "francoprovençal" "alsacian" "flamenc" ;
LIST Gentilici = "occitan" "francés" "anglés" "alemand" "espanhòl" "espanhòu" "italian" "rus" "chinés" "japonés" "catalan" "basc" "basco" "breton" "còrse" "arpitan" "francoprovençal" "alsacian" "flamenc" "american" "canadian" "canadenc" "quebequés" "cuban" "occidental" "oriental" ;

LIST Grade = "soldat" "caporal" "caporau" "sergent" "lòctenent" "capitani" "capitan" "coronèl" "coronèu" "general" "generau" "amiral" "amirau" "contra-amiral" "contra-amirau" "vice-amiral" "vice-amirau" "majoral" "majorau" ;

LIST Bestiar = "bestiar" "pol" "pret" "poleton" "poric" "gal" "gau" "galina" "garia" "piòta" "polòja" "rit" "guit" "polalha" "poralha" "feda" "aulha" "cabra" "craba" "moton" "vaca" "buòu" "bueu" "vedèl" "vedèth" "taur" "caval" "chivau" "cavala" "polin" "porin" "ase" ;

LIST Animal_non_bestiar = "animal" "animau" "bèstia" "peis" "peish" "can" "gat" "conilh" "lèbre" "lèbe" "cèrvi" "mirga" "soritz" "rat" "arrat" "rainal" "vop" "lop" "leon" "elefant" "girafa" "tigre" ;

LIST Enfant = "enfant" "dròlle" "mainatge" "gojat" "escolan" "eslhève" "alumne" "aprenent" "licean" ;

LIST Familha = "marit" "molhèr" "pair" "paire" "mair" "maire" "maira" "mairastra" "papà" "mamà" "mamair" "maiòta" "mairastra" "filh" "hilh" "fraire" "hrair" "sòr" "sòrre" "seror" "sorastra" "sorrastra" "oncle" "onco" "oncon" "tanta" "nebot" "cosin" "cosina" "cosia" "bigal" "moissau" "grand" "gran-pair" "gran-mair" "pairan" "pairbon" "mairbona" "papet" "papeta" "pepin" "mamet" "mameta" "menina" "mairegrand" "rèiregrand" "arrèrpairan" "arrèrpairan" "rèirepepin" "rèiremenina" "repepin" "felen" "rèire-filh" "rèirefilh" "rèrhilh" "rèire-felen" "rèirefelen" ;

LIST VerbMoviment = "anar" "tornar" "arribar" "partir" "viatjar" ;

SECTION

SELECT Acr IF (0 ("<A>")) (1 ("<.>")) (2>>> Cog OR unknownMajIni) ;	# A. Dupont
SELECT N + (m) + (sp) IF (0 ("\\<[B-Z]\\>"r)) (1 ("<.>")) (2 Cog OR unknownMajIni) ;	# E. Dupont

SELECT Acr IF (-1 N + MinIni) (0 ("<A>")) ;	# la letra A ; la linha A
SELECT N + (m) + (sp) IF (-1 N + MinIni) (0 ("\\<[B-Z]\\>"r)) ;	# la letra B ; la linha B
REMOVE N + (sp) IF (0 ("<e>")) ;
REMOVE N + (sp) IF (0 ("\\<[io]\\>"r)) (1 Pro OR V) ;	# se la dreta i ganhèt
SELECT N + (m) + (sp) IF (-1 ("letra") OR ("linha") OR ("ponch") OR ("punt") OR ("drecha") OR ("dreita") OR ("dreta")) (0 ("\\<[b-z]\\>"r) LINK NOT 0 Conjco) ;	# la letra b ; la linha b
SELECT N IF (0 ("letra") OR ("linha") OR ("ponch") OR ("punt") OR ("drecha") OR ("dreita") OR ("dreta")) (1 ("\\<[b-z]\\>"ir) LINK NOT 0 Conjco) ;	# la drecha b
SELECT Acr IF (0 ("<A>")) (1 Conjco + MinIni) (2 ("<B>")) ;
SELECT Acr IF (0 ("<A>")) (1 CM) (2 ("<B>")) ;
SELECT Acr IF (-1 PREP) (0 ("<A>")) (1 PREP + MinIni) (2 ("<B>")) ;
REMOVE N + (sp) IF (0 ("\\<[eiou]\\>"r)) ;
REMOVE N + (sp) IF (0 ("\\<[EIOU]\\>"r)) ;

REMOVE DET IF (0 ("<tant>"));

REMOVE V IF (0 ("<minuta>"i)) (-1 DET + FemSg or AJ + FemSg);
REMOVE V IF (0 ("<minutas>"i)) (-1 DET + FemPl or AJ + FemPl or NUM);

REMOVE AV IF (0 ("que")) (NOT 0 Enon) ;	# patch
REMOVE Tn IF (0 ("qui")) ;	# patch
REMOVE Tn IF (0 ("qual")) ;	# patch
REMOVE (mf) IF (0 ("qual")) ;	# patch
REMOVE N IF (0 ("<a>"i)) (NOT 1 (")")) ;		# patch
SELECT PREP IF (0 ("<per>"i)) ;		# patch
SELECT PREP IF (0 ("<pel>"i)) (1 N + MascSg) ;		# patch
SELECT PREP IF (0 ("<pel>"i)) (1 NP + MascSg) ;		# patch
SELECT PREP IF (0 ("<de>"i)) ;		# patch
REMOVE N IF (0 ("<coma>"i)) ;		# patch
REMOVE N IF (0 ("<arren>"i)) ;		# patch
REMOVE V IF (0 ("<arren>"i)) ;		# patch
REMOVE N IF (0 ("<ren>"i)) (1 De) ;		# patch
REMOVE N IF (0 ("<e>"i)) ;		# patch
REMOVE N IF (0 ("<o>"i)) ;		# patch
REMOVE N IF (NOT -1/* DET) (0 ("<res>"i)) ;		# patch
REMOVE N IF (NOT -1/* DET) (0 ("<tròp>"i)) ;		# patch
REMOVE DET IF (0 ("<tròp>"i)) ;		# patch
REMOVE N IF (0 ("<la>"i)) ;		# patch
REMOVE N IF (0 ("<las>"i)) ;		# patch
SELECT DET IF (0 ("<las>"i)) (1C N_AJ + FemPl) ;		# patch
REMOVE N IF (0 ("una")) ;		# patch
REMOVE N IF (0 ("<fa>"i)) (NOT 1 ("major") OR ("menor") OR ("minor")) ;		# patch
REMOVE N IF (0 ("fa")) (NOT 0 ("<fa>"i)) ;	# patch
REMOVE N IF (0 ("<si>"i)) (NOT 1 ("major") OR ("menor") OR ("minor")) ;		# patch
REMOVE N IF (0 ("si")) (NOT 0 ("<si>"i)) ;	# patch
REMOVE N + ("tau") IF (0 ("tau")) ;		# patch
SELECT PREP IF (-1 ("anar") OR ("viatjar") OR ("arribar") OR ("partir") OR ("sortir") OR ("gésser")) (0 ("tau")) ;
SELECT PREP IF (-2 ("anar") OR ("viatjar") OR ("arribar") OR ("partir") OR ("sortir") OR ("gésser")) (-1 AV) (0 ("tau")) ;
SELECT PREP IF (-3 ("anar") OR ("viatjar") OR ("arribar") OR ("partir") OR ("sortir") OR ("gésser")) (-2 AV) (-1 AV) (0 ("tau")) ;
REMOVE SUB:1 DET IF (0 ("<en>"i)) ;		# patch
REMOVE ("taus") IF (-2 DET + MascPl) (-1 N + MascPl) (0 ("taus")) (1 ("com")) ;		# los fèits taus com s’èran passats
REMOVE N IF (NOT -1 DET + MascSg) (0 ("<com>"i)) ;		# patch
SELECT VBinf IF (-1C PREP OR V) (0 ("<far>"i)) ;		# patch
SELECT VBinf IF (-2C PREP OR V) (-1 Pro OR AV) (0 ("<far>"i)) ;		# patch
SELECT VBinf IF (-3C PREP OR V) (-2 Pro OR AV) (-1 Pro OR AV) (0 ("<far>"i)) ;		# patch
SELECT VBinf IF (NOT 0 DET + MascSg) (0 ("<far>"i)) ;		# patch
SELECT V IF (-1 ("<se>"i)) (NOT 0 DET OR PRON OR NP) ;		# se practica # patch
SELECT PRON IF (0 ("<se>"i)) (1 Ser + &&AcordSP) (2 VBpp + &&AcordSP) ;		# se son formats # patch
SELECT Ser + &&AcordSP IF (-1 ("<se>"i)) (0 Ser + &&AcordSP) (1 VBpp + &&AcordSP) ;		# patch
SELECT VBpp + &&AcordSP IF (-2 ("<se>"i)) (-1 Ser + &&AcordSP) (0 VBpp + &&AcordSP) ;		# patch
SELECT PRON IF (0 ("<se>"i)) (1 Ser + &&AcordSP) (2 AV) (3 VBpp + &&AcordSP) ;		# patch
SELECT Ser + &&AcordSP IF (-1 ("<se>"i)) (0 Ser + &&AcordSP) (1 AV) (2 VBpp + &&AcordSP) ;		# patch
SELECT VBpp + &&AcordSP IF (-3 ("<se>"i)) (-2 Ser + &&AcordSP) (-1 AV) (0 VBpp + &&AcordSP) ;		# patch
SELECT PRON IF (0 ("<se>"i)) (1 Ser + &&AcordSP) (2 AV) (3 AV) (4 VBpp + &&AcordSP) ;		# patch
SELECT Ser + &&AcordSP IF (-1 ("<se>"i)) (0 Ser + &&AcordSP) (1 AV) (2 AV) (3 VBpp + &&AcordSP) ;		# patch
SELECT VBpp + &&AcordSP IF (-4 ("<se>"i)) (-3 Ser + &&AcordSP) (-2 AV) (-1 AV) (0 VBpp + &&AcordSP) ;		# patch
SELECT PRON IF (0 ("<se>"i)) (1 VBger) (-1 ("<en>")) ;		# patch
SELECT V IF (0 ("<son>"i)) (1 ("<pas>"i)) ;		# patch
SELECT V IF (0 ("<son>"i)) (1 ("<solide>"i)) (2 ("<pas>"i)) ;		# patch
SELECT V IF (0 ("<son>"i)) (1C AV OR PREAV) (2 ("<pas>"i)) ;		# patch
SELECT N IF (-1 DET + MascSg) (0 ("<pas>"i)) ;		# un pas # patch
SELECT DET + MascSg IF (0 DET + MascSg) (1 ("<pas>"i)) ;		# un pas # patch
SELECT N IF (-2 DET + MascSg) (-1 AJ + MascSg) (0 ("<pas>"i)) ;		# un important pas # patch
SELECT AJ + MascSg IF (-1 DET + MascSg) (0 AJ + MascSg) (1 ("<pas>"i)) ;		# un important pas # patch
SELECT AV IF (-1 V) (0 ("<pas>"i)) ;		# patch
SELECT V OR ("mes") + Conjco IF (1 ("<pas>"i)) ;		# patch
REMOVE ("d'unes") IF (-1C N_AJ) ;
SELECT ("d'unes") + PRON IF (1C Que OR Rel) ;
SELECT ("d'unes") IF (-1C BOS OR Que OR Conjadv OR Rel OR PREP) ;	# patch
SELECT ("d'unes") IF (-1 CM) ;	# patch
SELECT ("d'unes") IF (-2 BOS OR CM) (-1 PREP) ;	# patch
SELECT PREAV IF (0 ("<plan>"i)) (1C AJ OR AV) ;		# patch
REMOVE N IF (-1C V) (0 ("<plan>"i)) ;		# patch
SELECT AV IF (-1 Ser + &&AcordSP) (0 AV OR PREAV) (1 ("escàder") OR ("mauescàder")) ;	# s'i es plan escadut
SELECT AV IF (-2 Ser + &&AcordSP) (-1 AV OR PREAV) (0 AV OR PREAV) (1 ("escàder") OR ("mauescàder")) ;	# s'i es pas plan escadut
SELECT PREAV IF (-1 Ser + &&AcordSP) (0 ("<plan>"i)) (1 AJ + &&AcordSP) ;		# patch
SELECT PREAV IF (-2 Ser + &&AcordSP) (-1 AV) (0 ("<plan>"i)) (1 AJ + &&AcordSP) ;		# patch
SELECT PREAV IF (-1C N + &&AcordSP) (0 ("<plan>"i)) (1 AJ + &&AcordSP) ;
SELECT PREAV IF (-2C N + &&AcordSP) (-1 AJ + &&AcordSP) (0 ("<plan>"i)) (1 AJ + &&AcordSP) ;
SELECT AJ IF (-1C N + &&AcordSP) (0 ("<plan>"i) + &&AcordSP) ;		# patch
SELECT AV IF (0 ("<mai>"i)) (1 De) ;		# patch
REMOVE N IF (-1C PREP) (0 ("<veire>"i)) ;		# patch
SELECT PREP IF (-1 N OR AJ) (0 ("<de mai>"i)) ;		# patch
REMOVE N IF (NOT -1 ("mes") OR ("jorn") OR ("jornada") OR ("fèsta") OR ("hèsta")) (0 ("<de mai>"i)) ;		# patch
REMOVE N IF (NOT -1 DET + FemSg) (0 ("<èra>"i)) ;		# patch
REMOVE ("sèir") IF (0 ("èsser")) ;	# patch
REMOVE ("poirir") IF (0 ("poder")) ;	# patch
REMOVE ("sabar") IF (0 ("saber")) ;	# patch
SELECT PREAV IF (0 ("tant")) (1 AJ OR VBpp OR AV) (2 ("coma")) ;
SELECT AJ OR VBpp OR AV IF (-1 ("tant")) (0 AJ OR VBpp OR AV) (1 ("coma")) ;
SELECT Conjadv IF (-2 ("tant")) (-1 AJ OR VBpp OR AV) (0 ("coma")) ;
SELECT PREAV IF (0 ("tant")) (1 AJ OR VBpp OR AV) (2 Conjco) (3 AJ OR VBpp OR AV) (4 ("coma")) ;
SELECT AJ OR VBpp OR AV IF (-1 ("tant")) (0 AJ OR VBpp OR AV) (1 Conjco) (2 AJ OR VBpp OR AV) (3 ("coma")) ;
SELECT AJ OR VBpp OR AV IF (-3 ("tant")) (-2 AJ OR VBpp OR AV) (-1 Conjco) (0 AJ OR VBpp OR AV) (1 ("coma")) ;
SELECT Conjadv IF (-4 ("tant")) (-3 AJ OR VBpp OR AV) (-2 Conjco) (-1 AJ OR VBpp OR AV) (0 ("coma")) ;
SELECT PREAV IF (0 ("autant")) (1 AJ OR VBpp OR AV) (2 ("com")) ;
SELECT AJ OR VBpp OR AV IF (-1 ("autant")) (0 AJ OR VBpp OR AV) (1 ("com")) ;
SELECT Conjadv IF (-2 ("autant")) (-1 AJ OR VBpp OR AV) (0 ("com")) ;
SELECT PREAV IF (0 ("autant")) (1 AJ OR VBpp OR AV) (2 Conjco) (3 AJ OR VBpp OR AV) (4 ("com")) ;
SELECT AJ OR VBpp OR AV IF (-1 ("autant")) (0 AJ OR VBpp OR AV) (1 Conjco) (2 AJ OR VBpp OR AV) (3 ("com")) ;
SELECT AJ OR VBpp OR AV IF (-3 ("autant")) (-2 AJ OR VBpp OR AV) (-1 Conjco) (0 AJ OR VBpp OR AV) (1 ("com")) ;
SELECT Conjadv IF (-4 ("autant")) (-3 AJ OR VBpp OR AV) (-2 Conjco) (-1 AJ OR VBpp OR AV) (0 ("com")) ;
SELECT PREAV IF (0 ("tant")) (1 VBpp) (2 De) (3* ("coma") LINK 1 De) ;	# seràn tan preocupats de lors electors-clients coma de bastir
SELECT VBpp IF (-1 ("tant")) (0 VBpp) (1 De) ;
SELECT PREAV IF (0 ("autant")) (1 VBpp) (2 De) (3* ("com") LINK 1 De) ;
SELECT VBpp IF (-1 ("autant")) (0 VBpp) (1 De) ;
SELECT PREP IF (0 ("coma")) (1 ("en")) ;
SELECT PREP IF (-1 ("<son>"i)) (0 ("coma") OR ("com")) ;
SELECT PREP IF (-2 ("<son>"i)) (-1C AV OR PREAV OR ("pas")) (0 ("coma") OR ("com")) ;
SELECT PREP IF (-3 ("<son>"i)) (-1C AV OR PREAV OR ("pas")) (1C AV OR PREAV) (0 ("coma") OR ("com")) ;
REMOVE N IF (NOT -1 DET) (0 ("<son>"i)) ;	# patch
REMOVE N IF (NOT -1 DET OR NUM) (0 ("<endavant>"i)) ;	# patch
REMOVE AV IF (-1 DET OR NUM) (0 ("<endavant>"i)) ;	# patch
REMOVE DET + Sg IF (-1 NUM LINK NOT 0 ("1")) (0 ("<son>"i)) ;	# patch
REMOVE Sg IF (NOT -1 DET) (0 ("<son>"i)) (1C Pl_strict) ;	# son conegudas
REMOVE Sg IF (NOT -1 DET) (0 ("<son>"i)) (1 AV OR PREAV) (2C Pl_strict) ;	# son plan conegudas
SELECT PREP IF (0 ("sens")) (1C VBinf OR VBger) ;
SELECT PREP IF (0 ("sens")) (1 Pro) (2C VBinf) ;
SELECT PREP IF (0 ("sens")) (1 Pro) (2 Pro) (3C VBinf) ;
SELECT PREP IF (0 ("sens")) (1 Pro LINK NOT 0 ("en")) (2C VBinf OR VBger) ;
SELECT PREP IF (0 ("sens")) (1 Pro LINK NOT 0 ("en")) (2 Pro) (3C VBinf OR VBger) ;
SELECT PREP IF (0 ("sens")) (1 AV OR Enon) (2C VBinf OR VBger) ;	# sens ne tirar
SELECT PREP IF (0 ("sens")) (1 AV OR Enon) (2 Pro) (3C VBinf) ;
SELECT PREP IF (0 ("sens")) (1 AV OR Enon) (2 Pro) (3 Pro) (4C VBinf) ;
SELECT PREP IF (NOT -1 DET + &&AcordSN) (0 ("sens") + &&AcordSN) (1 Que) ;
SELECT Conjsub IF (-1C ("sens") + PREP) (0 Que) ;
SELECT N IF (-1 MinIni) (0 ("sap") + MajIni) ;
SELECT N IF (0 ("sap")) (1C V + Pers) ;
SELECT N IF (0 ("sap")) (1C AV) (2C V + Pers) ;
SELECT N + &&AcordSN IF (-2C V + Pers) (-1 DET + &&AcordSN) (0 ("sap") + &&AcordSN) ;
SELECT N + MascPl IF (-2C V + Pers) (-1 De) (0 ("sap") + MascPl) ;
SELECT N + &&AcordSN IF (-1/* DET + &&AcordSN) (0 ("sap") + &&AcordSN) (1 De) ;
REMOVE N + ("sap");
REMOVE ("un tal") IF (0 ("un")) ;
REMOVE V IF (0 ("aqueth")) ;	# patch (aquera, aqueras)
SELECT NUM IF (0 ("set")) (1C N_AJ + Pl) ;
REMOVE ("mesa") IF (0 ("<meses>"i)) ;	# patch
REMOVE N + ("prim") IF (0 ("prima")) ;	# patch
SELECT N (-1 ("far") + P3 + Sg OR ("har") + P3 + Sg) (0 ("<meses>"i)) ;
SELECT PREP IF (NOT -1/* DET) (0 ("fins")) (1 ("en")) (2 NUM OR NP) ;	# fins en 1999
SELECT PREP IF (-1C ("fins") + PREP) (0 ("en")) ;	# fins en 1999
SELECT N IF (-1 ("en")) (0 ("fin")) (1 De) ;
SELECT N IF (0 ("fin")) (1 De) (2 ("jornada") OR ("serada") OR ("vesprada") OR ("vrespada") OR ("setmana") OR ("mes") OR ("annada")) ;
SELECT N IF (-1C DET + &&AcordSN) (0 ("lei") + &&AcordSN) ;
SELECT N IF (-1 DET + &&AcordSN) (0 ("lei") + MajIni + &&AcordSN) ;
SELECT N IF (-1C DET + &&AcordSN) (0 ("partit") + &&AcordSN) ;
SELECT N IF (-1 DET + &&AcordSN) (0 ("partit") + MajIni + &&AcordSN) ;
SELECT DET IF (NOT -1/* DET) (0 ("lei")) (1C N + Pl_strict) ;
SELECT N IF (0 ("lei") + &&AcordSN) (1 Cog OR unknownMajIni) ;	# lei Deixonne
REMOVE N IF (0 ("<estar>"i)) (-1 PREP) ;	# patch
REMOVE N IF (0 ("<estar>"i) OR Ser + VBinf) (-1 ("har") OR ("far") OR ("hèr")) ;

SELECT Itg IF (1 Que) (2 Ser + PRS + P3) ;	# on que sian
SELECT Conjsub IF (-1 Itg) (0 Que) (1 Ser + PRS + P3) ;	# on que sian
SELECT Ser + PRS + P3 IF (-2 Itg) (-1 Que) (0 Ser + PRS + P3) ;	# on que sian

SELECT Conjco (0 ("sia")) (1 V + Pers) (2* ("sia") LINK 1 V + Pers) ;
SELECT Conjco (0 ("sia")) (1 V + Pers) (-2* ("sia") LINK 1 V + Pers) ;
SELECT Conjco (0 ("sia")) (1 Que) (2 V + Pers) (3* ("sia") LINK 1 Que LINK 1 V + Pers) ;
SELECT Conjco (0 ("sia")) (1 Que) (2 V + Pers) (-3* ("sia") LINK 1 Que LINK 1 V + Pers) ;

SELECT PREP IF (0 ("entre")) (1C N_AJ OR NP) ;
SELECT PREP IF (0 ("entre")) (0 (META:/-/r)) ;
SELECT PREP IF (0 ("entre")) (1 unknown) ;

SELECT SUB:2 AJ (0 ("<au darrèr>"i)) (1C N + MascSg) ;
SELECT SUB:2 AJ (0 ("<au darrèr>"i)) (1C VBpp + MascSg) ;	# au darrèr arribat
SELECT SUB:2 AJ (0 ("<au darrèr>"i)) (1C N_AJ + MascSg) (NOT 2 AJ + MascSg) ;
SELECT SUB:2 N (0 ("<au darrèr>"i)) (1C AJ_PP + MascSg) ;

REMOVE ("desen") + N_AJ IF (0 ("desena")) (-1 ("un") OR NUM OR DETind) ;
REMOVE ("desen") + N IF (0 ("desena") + N + Pl) ;
REMOVE ("desen") + N IF (0 ("desena") + N) (-1 DET + FemSg) (1 De) (2 N) ;
REMOVE ("dotzen") + N_AJ IF (0 ("dotzena")) (-1 ("un") OR NUM OR DETind) ;
REMOVE ("dotzen") + N IF (0 ("dotzena") + N + Pl) ;
REMOVE ("dotzen") + N IF (0 ("dotzena") + N) (-1 DET + FemSg) (1 De) (2 N) ;
REMOVE ("vinten") + N_AJ IF (0 ("vintena")) (-1 ("un") OR NUM OR DETind) ;
REMOVE ("vinten") + N IF (0 ("vintena") + N + Pl) ;
REMOVE ("vinten") + N IF (0 ("vintena") + N) (-1 DET + FemSg) (1 De) (2 N) ;
REMOVE ("trenten") + N_AJ IF (0 ("trentena")) (-1 ("un") OR NUM OR DETind) ;
REMOVE ("trenten") + N IF (0 ("trentena") + N + Pl) ;
REMOVE ("trenten") + N IF (0 ("trentena") + N) (-1 DET + FemSg) (1 De) (2 N) ;
REMOVE ("quaranten") + N_AJ IF (0 ("quarantena")) (-1 ("un") OR NUM OR DETind) ;
REMOVE ("quaranten") + N IF (0 ("quarantena") + N + Pl) ;
REMOVE ("quaranten") + N IF (0 ("quarantena") + N) ;
REMOVE ("quaranten") + N_AJ IF (0 ("quarantena")) (-1 ("un") OR NUM OR DETind) ;
REMOVE ("cinquanten") + N IF (0 ("cinquantena") + N + Pl) ;
REMOVE ("cinquanten") + N IF (0 ("cinquantena") + N) (-1 DET + FemSg) (1 De) (2 N) ;
REMOVE ("centen") + N_AJ IF (0 ("centena")) (-1 ("un") OR NUM OR DETind) ;
REMOVE ("centen") + N IF (0 ("centena") + N + Pl) ;
REMOVE ("centen") + N IF (0 ("centena") + N) (-1 DET + FemSg) (1 De) (2 N) ;

REMOVE ("aviar") IF (0 Aver) ;	# patch
REMOVE ("averar") IF (0 Aver) ;	# patch

REMOVE ("camèl") IF (0 ("camèra")) ;	# patch

REMOVE ("un còp") IF (0 ("un còp")) ;
REMOVE AJ IF (-1 ("<un còp>"i)) (0 VBpp) ;
REMOVE AJ IF (-2 ("un")) (-1 ("còp")) (0 VBpp) ;
SELECT VBpp IF (-1 ("<un còp>"i)) (0 VBpp) (1 CM OR EOS) ;
SELECT VBpp IF (-2 ("un")) (-1 ("còp")) (0 VBpp) (1 CM OR EOS) ;

SELECT N IF (-1 DET + MascSg OR Artcontrsg) (0 ("<ton>"i)) ;
SELECT N IF (-2 DET + MascSg OR Artcontrsg) (-1 AdjOrd + MascSg) (0 ("<ton>"i)) ;
SELECT N IF (-2 DET + MascSg OR Artcontrsg) (-1 AdjPre + MascSg) (0 ("<ton>"i)) ;
SELECT N IF (-2 DET + MascSg OR Artcontrsg) (-1 AJ + MascSg) (0 ("<ton>"i)) (NOT 1 N_AJ + MascSg OR ("«")) ;
REMOVE N IF (0 ("<ton>"i)) (1 ("<sus>"i)) (2 ("<ton>"i)) ;
REMOVE N IF (-2 ("<ton>"i)) (-1 ("<sus>"i)) (0 ("<ton>"i)) ;
REMOVE N IF (0 ("<ton>"i)) ;

SELECT Ser + Pl IF (-1C N + Pl + &&AcordSN) (0 ("<son>"i)) (1 N_AJ + Pl + &&AcordSN) ;
SELECT Ser + Pl IF (-2 DET + Pl + &&AcordSN) (-1 N_AJ + Pl + &&AcordSN) (0 ("<son>"i)) (1 N_AJ + Pl + &&AcordSN) ;
SELECT Ser + Pl IF (-2 N_AJ + Pl + &&AcordSN) (-1 N_AJ + Pl + &&AcordSN) (0 ("<son>"i)) (1 N_AJ + Pl + &&AcordSN) ;
SELECT Ser + Pl IF (-2 ("<de>"i)) (-1 N + Pl + &&AcordSN) (0 ("<son>"i)) (1 N_AJ + Pl + &&AcordSN) ;
REMOVE Ser + Pl IF (0 ("son") + Sg) (1C N_AJ + Sg_strict) ;

LIST DeMatin = "<de matin>"i "<de ser>" i"<de sera>"i "<de nuèch>"i "<de nuòch>"i "<de jorn>"i "<de dia>"i ;
SELECT N IF (-1 Jorns) (0 ("<matin>"i)) ;
SELECT AV IF (NOT -1/* DET) (0 Jorns) (1 DeMatin) ;
SELECT AV IF (-1 Jorns) (0 DeMatin) ;
SELECT AV IF (-3 NUM) (-2 De) (-1 Nommois) (0 DeMatin) ;
SELECT AV IF (-2 NUM) (-1 Nommois) (0 DeMatin) ;

REMOVE AV (0 Conjadv) (-1 CM) (NOT 1 EOS) ;
REMOVE V (0 ("<lavetz>"i)) (0 AV OR Conjadv) (-1 CM) ;

SELECT PREP IF (0 ("<de cap>"i)) (1C DET) ;
SELECT PREP IF (0 ("<de cap>"i)) (1 DET + &&AcordSN) (2 N_AJ + &&AcordSN) ;
REMOVE PREP IF (0 ("<de cap>"i)) ;
SELECT N IF (-1/* DET + MascSg OR ("<del>"i) OR ("<al>"i)) (0 Cap) ;
SELECT N + (mf) IF (-1 ("ex") OR ("<ex>"i)) (0 Cap) ;
SELECT N + (mf) IF (-1 ("ex") OR ("<ex>"i)) (0 Cap_de_del) ;
SELECT N + (mf) IF (-1 ("ex") OR ("<ex>"i)) (0 ("<caps>"i)) ;
SELECT N + (mf) IF (-1/* DET) (0 ("cap")) (1 De) (2 Al OR Acr) ;	# lo cap d'ERC
SELECT N + (mf) IF (-1/* DET) (0 Cap_de_del) (1 Al OR Acr) ;
SELECT N + (mf) IF (-1/* DET) (0 Caps_de_del) (1 Al OR Acr) ;
SELECT N IF (-2 DET + MascSg OR Artcontrsg) (-1 AdjPre + MascSg) (0 Cap_de_del) ;
SELECT N IF (-2 DET + MascPl OR Artcontrpl) (-1 AdjPre + MascPl) (0 Caps_de_del) ;
SELECT N + (mf) IF (-1 BOS) (0 Cap_de_del) (1 Estat OR ("govèrn") OR ("conselh") OR ("ministèri") OR ("comission") OR ("partit") OR ("sindicat") OR ("oposicion") OR ("union") OR ("cauma") OR ("armada") OR ("marina") OR ("crosada")) ;
SELECT N + (mf) IF (-1 BOS) (0 Caps_de_del) (1 Estat OR ("govèrn") OR ("conselh") OR ("ministèri") OR ("comission") OR ("partit") OR ("sindicat") OR ("oposicion") OR ("union") OR ("cauma") OR ("armada") OR ("marina") OR ("crosada")) ;
REMOVE PRON IF (-1 DET OR Artcontrsg) (0 ("cap")) ;
REMOVE PRON IF (0 Cap_de_del) (1C DET OR N OR AJ OR PREDET) (NOT 1 Pl) ;
REMOVE PRON IF (0 Cap_de_del) (1C V + Pers) ;
SELECT PRON IF (NOT -1/* DET) (0 Cap_de) (1 Tn) ;	# cap d'elas
#SELECT PRON IF (NOT -1/* DET OR CM) (0 Cap_de) (1 DET + Pl) ;
#SELECT PRON IF (NOT -1/* DET OR CM) (0 ("<cap dels>"i)) ;
SELECT PRON IF (-1 EOS OR Conjsub OR Conjadv) (0 Cap) ;
SELECT PRON IF (-2 EOS OR Conjsub) (-1 AV OR Conjadv) (0 Cap) ;
SELECT PRON IF (-1 Pas) (0 Cap OR ("ren")) ;	# ai pas cap
SELECT PRON IF (-2 Pas) (-1 VBpp) (0 Cap OR ("ren")) ;	# ai agut pas cap
SELECT PRON IF (-3 Pas) (-2 AV) (-1 VBpp) (0 Cap OR ("ren")) ;	# ai agut pas totjorn cap
SELECT PRON IF (-3 Vmod) (-2 Pas) (-1 VBinf) (0 Cap OR ("ren")) ;	# vòli pas manjar cap
SELECT PRON IF (-4 Vmod) (-3 Pas) (-2 AV OR Pro) (-1 VBinf) (0 Cap OR ("ren")) ;	# vòli pas ne manjar cap
SELECT PRON IF (-5 Vmod) (-4 Pas) (-3 AV OR Pro) (-2 AV OR Pro) (-1 VBinf) (0 Cap OR ("ren")) ;	# vòli pas li'n dire cap
SELECT N IF (0 Cap) (1 NP OR unknownMajIni) ;	# cap Canaveral
SELECT N + (m) IF (0 Cap) (1 NP OR unknownMajIni) ;	# cap Canaveral
SELECT N + (m) IF (0 Cap) (1 ("alt")) ;
REMOVE N + (mf) IF (0 Cap) (1 ("bas") OR ("baish")) ;
SELECT DET IF (-2 ("membre")) (-1 De) (0 Cap_de) (1 ("partit") OR ("sindicat")) ;
SELECT SUB:1 DET IF (-1 ("membre")) (0 ("<de cap>"i)) (1 De) (2 ("partit") OR ("sindicat")) ;
SELECT DET IF (-2 ("afiliat")) (-1 A) (0 Cap_de) (1 ("partit") OR ("sindicat")) ;
SELECT N + (m) IF (0 ("cap")) (1 De) (2 ("pont") OR ("pònt") OR ("lista")) ;
SELECT N + (m) IF (0 Cap_de) (1 ("pont") OR ("pònt") OR ("lista")) ;
SELECT SUB:1 N + (m) IF (0 ("<de cap>"i)) (1 De) (2 ("pònt") OR ("lista")) ;
SELECT N + (m) IF (0 Caps_de) (1 ("pont") OR ("pònt") OR ("lista")) ;
SELECT N + (m) IF (0 Cap_de) (1 Top) ;
SELECT SUB:1 N + (m) IF (0 ("<de cap>"i)) (1 De) (2 Top) ;
LIST Lista_Cap_de_del = "estat" "govèrn" "conselh" "ministèri" "comission" "secretariat" "departament" "departement" "grop" "partit" "sindicat" "oposicion" "fila" "union" "politica" "cauma" "caumaire" "entrepresa" "enterpresa" "armada" "marina" "estat major" "crosada" "crosat" "cultura" "sanitat" "politica" ".*ista"r ".*isme"r Gentilici ;
SELECT N + (mf) IF (NOT -1 BOS) (0 Cap_de_del) (1 Lista_Cap_de_del OR Al OR Acr) ;
SELECT N + (mf) IF (NOT -1 BOS) (0 Caps_de_del) (1 Lista_Cap_de_del OR Al OR Acr) ;
SELECT N + (mf) IF (NOT -1 BOS) (0 Cap_de) (1 DET) (2 Lista_Cap_de_del OR Al OR Acr) ;
SELECT N + (mf) IF (NOT -1 BOS) (0 Caps_de) (1 DET) (2 Lista_Cap_de_del OR Al OR Acr) ;
SELECT N + (mf) IF (NOT -1 BOS) (0 Cap) (1 De) (2 Lista_Cap_de_del OR Al OR Acr) ;
SELECT N + (mf) IF (NOT -1 BOS) (0 Caps) (1 De) (2 Lista_Cap_de_del OR Al OR Acr) ;
SELECT N + (mf) IF (NOT -1 BOS) (0 ("cap")) (1 De) (2 Lista_Cap_de_del OR Al OR Acr) ;
SELECT N + (mf) IF (NOT -1 BOS) (0 ("cap")) (1 De) (2 DET) (3 Lista_Cap_de_del OR Al OR Acr) ;
SELECT SUB:1 N + (mf) IF (0 ("<de cap>"i)) (1 De) (2 Lista_Cap_de_del OR Al OR Acr) ;
SELECT SUB:1 N + (mf) IF (0 ("<de cap>"i)) (1 De) (2 DET) (3 Lista_Cap_de_del OR Al OR Acr) ;
SELECT N + (mf) IF (NOT -1 BOS) (0 Cap_de_del) (1 AJ) (2 Lista_Cap_de_del OR Al OR Acr) ;
SELECT N + (mf) IF (NOT -1 BOS) (0 Caps_de_del) (1 AJ) (2 Lista_Cap_de_del OR Al OR Acr) ;
SELECT N + (mf) IF (NOT -1 BOS) (0 Cap) (1 De) (2 AJ) (3 Lista_Cap_de_del OR Al OR Acr) ;
SELECT N + (mf) IF (NOT -1 BOS) (0 Caps) (1 De) (2 AJ) (3 Lista_Cap_de_del OR Al OR Acr) ;
SELECT N + (mf) IF (NOT -1 BOS) (0 ("cap")) (1 De) (2 AJ) (3 Lista_Cap_de_del OR Al OR Acr) ;
SELECT N + (mf) IF (NOT -1 BOS) (0 ("cap")) (1 De) (2 DET) (3 AJ) (4 Lista_Cap_de_del OR Al OR Acr) ;
SELECT SUB:1 N + (mf) IF (0 ("<de cap>"i)) (1 De) (3 AJ) (4 Lista_Cap_de_del OR Al OR Acr) ;
SELECT SUB:1 N + (mf) IF (0 ("<de cap>"i)) (1 De) (2 DET) (3 AJ) (4 Lista_Cap_de_del OR Al OR Acr) ;
SELECT N + (m) IF (0 ("cap")) (1 De) (2 Bestiar OR Animal_non_bestiar OR Enfant) ;
SELECT N + (m) IF (0 ("cap")) (1 De) (2 DET OR NUM OR AJ) (3 Bestiar OR Animal_non_bestiar OR Enfant) ;
SELECT N + (m) IF (0 ("cap")) (1 De) (2 DET OR NUM) (3 AJ) (4 Bestiar OR Animal_non_bestiar OR Enfant) ;
SELECT N + (m) IF (0 Cap_de_del) (1 Bestiar OR Animal_non_bestiar OR Enfant) ;
SELECT N + (m) IF (0 Caps_de_del) (1 Bestiar OR Animal_non_bestiar OR Enfant) ;
SELECT N + (m) IF (0 Cap_de) (1 DET OR NUM OR AJ) (2 Bestiar OR Animal_non_bestiar OR Enfant) ;
SELECT N + (m) IF (0 Caps_de) (1 DET OR NUM OR AJ) (2 Bestiar OR Animal_non_bestiar OR Enfant) ;
SELECT N + (m) IF (0 Cap_de) (1 DET OR NUM) (2 AJ) (3 Bestiar OR Animal_non_bestiar OR Enfant) ;
SELECT N + (m) IF (0 Caps_de) (1 DET OR NUM) (2 AJ) (3 Bestiar OR Animal_non_bestiar OR Enfant) ;
SELECT SUB:1 N + (m) IF (0 ("<de cap>"i)) (1 De) (2 Bestiar OR Animal_non_bestiar OR Enfant) ;
SELECT SUB:1 N + (m) IF (0 ("<de cap>"i)) (1 De) (2 DET OR NUM OR AJ) (3 Bestiar OR Animal_non_bestiar OR Enfant) ;
SELECT SUB:1 N + (m) IF (0 ("<de cap>"i)) (1 De) (2 DET OR NUM) (3 AJ) (4 Bestiar OR Animal_non_bestiar OR Enfant) ;

SELECT N + (mf) IF (NOT -1 BOS) (0 Cap_de_del) (1 Al) ;
SELECT N + (mf) IF (NOT -1 BOS) (0 Cap_de_del) (1 Ant_Cog) ;
SELECT SUB:1 N + (mf) IF (0 ("<de cap>"i)) (1 De) (2 Al) ;
SELECT SUB:1 N + (mf) IF (0 ("<de cap>"i)) (1 De) (2 Ant_Cog) ;
SELECT SUB:1 N + (mf) IF (0 ("<de cap>"i)) (1 De) (2 DET + &&AcordSN) (3 Al + &&AcordSN) ;
SELECT SUB:1 N + (mf) IF (0 ("<de cap>"i)) (1 De) (2 DET + &&AcordSN) (3 Ant_Cog + &&AcordSN) ;
SELECT N + (mf) IF (-1 ("<pel>"i) OR ("<pels>"i)) (0 Cap_de_del) ;
SELECT N + (mf) IF (-1 ("<pel>"i) OR ("<pels>"i)) (0 ("cap")) (1 De) ;
SELECT N + (mf) IF (-2 ("per")) (-1 DET + &&AcordSN) (0 Cap_de_del + &&AcordSN) ;
SELECT N + (mf) IF (-2 ("per")) (-1 DET + &&AcordSN) (0 ("cap") + &&AcordSN) (1 De) ;
SELECT N + (m) IF (-1 ("<al>"i) OR ("<au>"i)) (0 Cap_de) ;
SELECT N + (m) IF (0 ("cap")) (-1 En) (NOT 1 N OR De) ;

SELECT V IF (0 ("a costat")) (1 NUM OR ("desenat") OR ("detzenat") OR ("centena") OR ("milion") OR ("miliard")) ;
SELECT V IF (0 ("a costat")) (1 DET) (2 ("desenat") OR ("detzenat") OR ("centena") OR ("milion") OR ("miliard")) ;
REMOVE V IF (0 ("a costat")) ;
SELECT V IF (0 ("a costat de")) (1 ("desenat") OR ("detzenat") OR ("centena") OR ("milion") OR ("miliard")) ;
REMOVE V IF (0 ("a costat de")) ;
REMOVE V IF (0 ("a pena")) ;
REMOVE V IF (0 ("a penas")) ;
SELECT AV IF (-1 Verb LINK NOT 0 VBpp OR Vmod) (0 ("a cobèrt") OR ("a descobèrt")) ;
SELECT AV IF (-2 Verb LINK NOT 0 VBpp OR Vmod) (-1 AV) (0 ("a cobèrt") OR ("a descobèrt")) ;
SELECT AV IF (-2 VBaux) (-1 Verb LINK 0 VBpp) (0 ("a cobèrt") OR ("a descobèrt")) ;
SELECT AV IF (-3 VBaux) (-2 Verb LINK 0 VBpp) (-1 AV) (0 ("a cobèrt") OR ("a descobèrt")) ;
SELECT AV IF (-3 VBaux) (-2 AV) (-1 Verb LINK 0 VBpp) (0 ("a cobèrt") OR ("a descobèrt")) ;
SELECT AV IF (-4 VBaux) (-3 AV) (-2 Verb LINK 0 VBpp) (-1 AV) (0 ("a cobèrt") OR ("a descobèrt")) ;
REMOVE AV IF (0 ("a cobèrt") OR ("a descobèrt")) ;

REMOVE PREP IF (0 A_de) (NOT 1 N_AJ OR AV OR PREAV) ;	# path
REMOVE PREP IF (0 A_de) (1 AV OR PREAV) (NOT 2 N_AJ) ;	# path
REMOVE PREP IF (0 A_de) (-1 Pro) ;	# path
REMOVE PREP IF (0 A_de) (-1 BOS OR CM) ;	# path

REMOVE NP IF (-1 BOS) (0 ("Quan")) ;	# path
REMOVE Itg IF (-1 BOS) (0 ("quan")) (NOT 1* ("?")) ;	# path

REMOVE AV IF (-1C PREP) (0 Cap) (1C EOS OR CM OR Conjsub OR Conjadv OR Conjco) ;
REMOVE SUB:1 AV IF (0 ("<de cap>"i)) (1C EOS OR CM OR Conjsub OR Conjadv OR Conjco) ;

REMOVE DET IF (0 ("hèra")) ;
SELECT AV IF (0 ("hèra") OR ("plan") OR ("brin")) (1 Mai OR Pus OR Mens OR Melhor) ;
REMOVE DET IF (-2 DETdef + &&AcordSN) (-1 Mai OR Pus OR Mens) (0 AJ + &&AcordSN) (1 N + &&AcordSN) ;	# la mès bèra avenguda
SELECT AV IF (0 Mens) (1 De) ;
SELECT PREAV IF (-1 Ser + &&AcordSP OR Ser + VBinf OR Ser + VBger OR Ser + VBpp) (0 ("hèra")) (1 AJ + &&AcordSP OR VBpp + &&AcordSP) ;
SELECT PREAV IF (-2 Ser + &&AcordSP OR Ser + VBinf OR Ser + VBger OR Ser + VBpp) (-1 AV OR Tn) (0 ("hèra")) (1 AJ + &&AcordSP OR VBpp + &&AcordSP) ;	# estón tots hèra urós
SELECT PREAV IF (-3 Ser + &&AcordSP OR Ser + VBinf OR Ser + VBger OR Ser + VBpp) (-2 AV OR Tn) (-1 AV OR Tn) (0 ("hèra")) (1 AJ + &&AcordSP OR VBpp + &&AcordSP) ;
SELECT AV IF (-1 Ser + &&AcordSP OR Ser + VBinf OR Ser + VBger OR Ser + VBpp) (0 ("plan")) (1 AJ + &&AcordSP OR VBpp + &&AcordSP) ;
SELECT AV IF (-2 Ser + &&AcordSP OR Ser + VBinf OR Ser + VBger OR Ser + VBpp) (-1 AV OR Tn) (0 ("plan")) (1 AJ + &&AcordSP OR VBpp + &&AcordSP) ;
SELECT AV IF (-3 Ser + &&AcordSP OR Ser + VBinf OR Ser + VBger OR Ser + VBpp) (-2 AV OR Tn) (-1 AV OR Tn) (0 ("plan")) (1 AJ + &&AcordSP OR VBpp + &&AcordSP) ;
SELECT PREAV IF (-1 Aver) (0 ("hèra") OR ("plan") OR ("força")) (1 ("besonh") OR ("enveja")) ;
SELECT PREAV IF (-2 Aver) (-1 AV OR Tn) (0 ("hèra") OR ("plan") OR ("força")) (1 ("besonh") OR ("enveja")) ;
SELECT PREAV IF (-3 Aver) (-2 AV OR Tn) (-1 AV OR Tn) (0 ("hèra") OR ("plan") OR ("força")) (1 ("besonh") OR ("enveja")) ;
SELECT PREAV IF (0 ("hèra")) (1 ("plan")) ;
SELECT PREAV IF (0 ("hèra")) (1 AJ OR VBpp OR AV LINK NOT 0 Itg OR Excl) (NOT 1 N OR DET OR Que OR ("com") OR ("coma")) ;
SELECT PREAV IF (0 ("plan")) (1C AJ OR VBpp OR AV LINK NOT 0 Itg OR Excl) (NOT 1 Que OR ("com") OR ("coma")) ;
REMOVE PREAV IF (0 ("hèra") OR ("plan")) (1C DET OR N OR Que OR ("com") OR ("coma")) ;
REMOVE PREAV IF (0 ("plan")) (-1 Haver) (1 VBpp);

SELECT AV IF (-1 Pas) (0 Mai OR Pus) ;	# ai pas pus
SELECT AV IF (-2 Pas) (-1 VBpp) (0 Mai OR Pus) ;	# ai agut pas pus
SELECT AV IF (-3 Pas) (-2 AV) (-1 VBpp) (0 Mai OR Pus) ;	# ai agut pas totjorn pus
SELECT AV IF (-2 ("non")) (-1 V) (0 Mai OR Pus) ;	# non pòden mes
SELECT AV IF (-3 ("non")) (-2 Pro) (-1 V) (0 Mai OR Pus) ;	# non li pòden mes
SELECT AV IF (-4 ("non")) (-3 Pro) (-2 Pro) (-1 V) (0 Mai OR Pus) ;	# non li o pòden mes
SELECT AV IF (-3 ("non")) (-2 Haver) (-1 VBpp) (0 Mai OR Pus) ;	# non an podut mes
SELECT AV IF (-4 ("non")) (-3 Pro) (-2 Haver) (-1 VBpp) (0 Mai OR Pus) ;	# non li an podut mes
SELECT AV IF (-5 ("non")) (-4 Pro) (-3 Pro) (-2 Haver) (-1 VBpp) (0 Mai OR Pus) ;	# non li o an podut mes
SELECT AV IF (-3 Vmod) (-2 Pas) (-1 VBinf) (0 Mai OR Pus) ;	# vòli pas manjar pus
SELECT AV IF (-4 Vmod) (-3 Pas) (-2 AV OR Pro) (-1 VBinf) (0 Mai OR Pus) ;	# vòli pas ne manjar pus
SELECT AV IF (-5 Vmod) (-4 Pas) (-3 AV OR Pro) (-2 AV OR Pro) (-1 VBinf) (0 Mai OR Pus) ;	# vòli pas li'n dire pus
SELECT Conjco IF (-1 EOS) (0 Mai) ;
SELECT Conjco IF (-1 CM) (0 Mai) (NOT 1 AJ) ;
SELECT Conjco IF (-2* V + Pers BARRIER BOS OR Conjadv OR Conjsub OR Rel) (-1C N) (0 Mai LINK NOT 0 ("<.* .*>"r)) (1C Enon OR V + Pers) ;
SELECT Conjco IF (-1C N_AJ) (0 ("mes")) (1C Enon OR V + Pers) ;
SELECT AV IF (-1 N + MascSg) (0 Mai) (1 AJ + MascSg) ;
SELECT AV IF (-1 N + MascPl) (0 Mai) (1 AJ + MascPl) ;
SELECT AV IF (-1 N + FemSg) (0 Mai) (1 AJ + FemSg) ;
SELECT AV IF (-1 N + FemPl) (0 Mai) (1 AJ + FemPl) ;
SELECT AV IF (-1 Ser + &&AcordSP) (0 Mai) (1 AJ + &&AcordSP) ;	# es mai calme
REMOVE AJ IF (0 AJ) (0 VBpp) (1 ("per")) ;
SELECT VBpp IF (-2 Ser + &&AcordSP) (-1 AV OR PREAV) (0 ("escàder") OR ("mauescàder")) ;	# s'i es pas escadut
SELECT VBpp IF (-3 Ser + &&AcordSP) (-2 AV OR PREAV) (-1 AV OR PREAV) (0 ("escàder") OR ("mauescàder")) ;	# s'i es pas totjorn escadut
SELECT AJ OR AV IF (NOT -3 Pro + Ref) (-2C Ser + P3 + &&AcordSP) (-1 AV OR PREAV) (0 AJ + &&AcordSP) (NOT 1 AJ + &&AcordSP) ;	# es mai calme ; s'es pas engatjat
SELECT AJ OR AV IF (NOT -3 ("me")) (-2C Ser + P1 + Sg + &&AcordSP) (-1 AV OR PREAV) (0 AJ + &&AcordSP) (NOT 1 AJ + &&AcordSP) ;
SELECT AJ OR AV IF (NOT -3 ("te")) (-2C Ser + P2 + Sg + &&AcordSP) (-1 AV OR PREAV) (0 AJ + &&AcordSP) (NOT 1 AJ + &&AcordSP) ;
SELECT AJ OR AV IF (NOT -3 ("nos") OR ("mos")) (-2C Ser + P1 + Pl + &&AcordSP) (-1 AV OR PREAV) (0 AJ + &&AcordSP) (NOT 1 AJ + &&AcordSP) ;
SELECT AJ OR AV IF (NOT -3 ("vos")) (-2C Ser + P2 + Pl + &&AcordSP) (-1 AV OR PREAV) (0 AJ + &&AcordSP) (NOT 1 AJ + &&AcordSP) ;
SELECT AJ OR AV IF (NOT -4 Pro + Ref) (-3 Ser + P3 + &&AcordSP) (-2 AV) (-1 AV OR PREAV) (0 AJ + &&AcordSP) (NOT 1 AJ + &&AcordSP) ;	# es pas mai calme
SELECT AJ OR AV IF (NOT -4 ("me")) (-3C Ser + P1 + Sg + &&AcordSP) (-2 AV) (-1 AV OR PREAV) (0 AJ + &&AcordSP) (NOT 1 AJ + &&AcordSP) ;
SELECT AJ OR AV IF (NOT -4 ("te")) (-3C Ser + P2 + Sg + &&AcordSP) (-2 AV) (-1 AV OR PREAV) (0 AJ + &&AcordSP) (NOT 1 AJ + &&AcordSP) ;
SELECT AJ OR AV IF (NOT -4 ("nos") OR ("mos")) (-3C Ser + P1 + Pl + &&AcordSP) (-2 AV) (-1 AV OR PREAV) (0 AJ + &&AcordSP) (NOT 1 AJ + &&AcordSP) ;
SELECT AJ OR AV IF (NOT -4 ("vos")) (-3C Ser + P2 + Pl + &&AcordSP) (-2 AV) (-1 AV OR PREAV) (0 AJ + &&AcordSP) (NOT 1 AJ + &&AcordSP) ;
SELECT AJ OR AV IF (NOT -4 ("me")) (-3C Ser + P1 + Sg + &&AcordSP) (-2 AV) (-1 AV OR PREAV) (0 AJ + &&AcordSP) (NOT 1 AJ + &&AcordSP) ;
SELECT VBpp IF (-3 Ser + &&AcordSP) (-2 AV) (-1 AV OR PREAV) (0 VBpp + &&AcordSP) (NOT 0 N + &&AcordSP) ;
SELECT PREAV IF (-1 Ser + &&AcordSP) (0 AV OR PREAV) (1 AJ + &&AcordSP) ;
SELECT PREAV IF (-2 Ser + &&AcordSP) (-1 AV) (0 AV OR PREAV) (1 AJ + &&AcordSP) ;
SELECT PREAV IF (-1 Ser + &&AcordSP OR Semblar_Pareisser + &&AcordSP OR Devenir + &&AcordSP) (0 ("tant") OR ("autant") OR ("talament")) (1 AJ + &&AcordSP OR VBpp + &&AcordSP) (2 Que) ;
SELECT Conjsub IF (-3 Ser + &&AcordSP OR Semblar_Pareisser + &&AcordSP OR Devenir + &&AcordSP) (-2 ("tant") OR ("autant") OR ("talament")) (-1 AJ + &&AcordSP OR VBpp + &&AcordSP) (0 Que) ;
SELECT PREAV IF (-2 Ser + &&AcordSP OR Semblar_Pareisser + &&AcordSP OR Devenir + &&AcordSP) (-1 AV) (0 ("tant") OR ("autant") OR ("talament")) (1 AJ + &&AcordSP OR VBpp + &&AcordSP) (2 Que) ;
SELECT Conjsub IF (-4 Ser + &&AcordSP OR Semblar_Pareisser + &&AcordSP OR Devenir + &&AcordSP) (-3 AV) (-2 ("tant") OR ("autant") OR ("talament")) (-1 AJ + &&AcordSP OR VBpp + &&AcordSP) (0 Que) ;
SELECT PREAV IF (-3 Ser + &&AcordSP OR Semblar_Pareisser + &&AcordSP OR Devenir + &&AcordSP) (-2 AV) (-1 AV) (0 ("tant") OR ("autant") OR ("talament")) (1 AJ + &&AcordSP OR VBpp + &&AcordSP) (2 Que) ;
SELECT Conjsub IF (-5 Ser + &&AcordSP OR Semblar_Pareisser + &&AcordSP OR Devenir + &&AcordSP) (-4 AV) (-3 AV) (-2 ("tant") OR ("autant") OR ("talament")) (-1 AJ + &&AcordSP OR VBpp + &&AcordSP) (0 Que) ;
SELECT PREAV IF (0 ("tant") OR ("autant") OR ("talament")) (1 AJ + &&AcordSN OR VBpp + &&AcordSN) (2 N + &&AcordSN) ;
SELECT PREAV IF (-1 Ser + &&AcordSP OR Semblar_Pareisser + &&AcordSP OR Devenir + &&AcordSP) (0 ("tant") OR ("autant") OR ("talament")) (1 AJ + &&AcordSP + &&AcordSN OR VBpp + &&AcordSP + &&AcordSN) (2 N + &&AcordSN) (3 Que) ;
SELECT Conjsub IF (-4 Ser + &&AcordSP OR Semblar_Pareisser + &&AcordSP OR Devenir + &&AcordSP) (-3 ("tant") OR ("autant") OR ("talament")) (-2 AJ + &&AcordSP + &&AcordSN OR VBpp + &&AcordSP + &&AcordSN) (-1 N + &&AcordSN) (0 Que) ;
SELECT PREAV IF (-2 Ser + &&AcordSP OR Semblar_Pareisser + &&AcordSP OR Devenir + &&AcordSP) (-1 AV) (0 ("tant") OR ("autant") OR ("talament")) (1 AJ + &&AcordSP + &&AcordSN OR VBpp + &&AcordSP + &&AcordSN) (2 N + &&AcordSN) (3 Que) ;
SELECT Conjsub IF (-5 Ser + &&AcordSP OR Semblar_Pareisser + &&AcordSP OR Devenir + &&AcordSP) (-4 AV) (-3 ("tant") OR ("autant") OR ("talament")) (-2 AJ + &&AcordSP + &&AcordSN OR VBpp + &&AcordSP + &&AcordSN) (-1 N + &&AcordSN) (0 Que) ;
SELECT PREAV IF (-3 Ser + &&AcordSP OR Semblar_Pareisser + &&AcordSP OR Devenir + &&AcordSP) (-2 AV) (-1 AV) (0 ("tant") OR ("autant") OR ("talament")) (1 AJ + &&AcordSP + &&AcordSN OR VBpp + &&AcordSP + &&AcordSN) (2 N + &&AcordSN) (3 Que) ;
SELECT Conjsub IF (-6 Ser + &&AcordSP OR Semblar_Pareisser + &&AcordSP OR Devenir + &&AcordSP) (-5 AV) (-4 AV) (-3 ("tant") OR ("autant") OR ("talament")) (-2 AJ + &&AcordSP + &&AcordSN OR VBpp + &&AcordSP + &&AcordSN) (-1 N + &&AcordSN) (0 Que) ;
SELECT Conjsub IF (-3 CM) (-2 ("tant") OR ("autant") OR ("talament")) (-1 AJ OR VBpp) (0 Que) ;
SELECT Conjsub IF (-4 CM) (-3 ("tant") OR ("autant") OR ("talament")) (-2 AJ + &&AcordSP OR VBpp + &&AcordSP) (-1 N + &&AcordSP) (0 Que) ;

SELECT Conjsub IF (-3 ("non")) (-2 Ser) (-1 Pas) (0 Que) ;
SELECT Conjsub IF (-2 ("non")) (-1 Ser) (0 Que) ;
SELECT Conjsub IF (-3 ("non")) (-2 Ser) (-1 Pas) (0 Que) ;
SELECT Conjsub IF (-2 ("non")) (-1 Ser) (0 Que) ;
REMOVE V + Pers IF (-4 ("non")) (-3 Ser + &&AcordSP) (-2 Pas) (-1 Que) (0 N + &&AcordSP) ;
REMOVE V + Pers IF (-3 ("non")) (-2 Ser + &&AcordSP) (-1 Que) (0 N + &&AcordSP) ;


SELECT AV (-1C V) (0 Melhor) ;		# parlar melhor
SELECT AV (-2C V) (-1 AV) (0 Melhor) ;
SELECT AV (-2 Haver) (-1 VBpp) (0 Melhor) ;	# a parlat melhor
SELECT AV (-3 Haver) (-2 AV) (-1 VBpp) (0 Melhor) ;	# a parlat melhor
SELECT AV (-3 Haver) (-2 AV) (-1 VBpp) (0 Melhor) ;	# a pas parlat melhor
SELECT AV (-3 Haver) (-2 VBpp) (-1 AV) (0 Melhor) ;

REMOVE N IF (-1 CM OR BOS) (0 ("<tè>"i)) (1 CM OR EOS)  ;		# guess
SELECT VBimp IF (0 ("<vejatz>"i) OR ("<vedetz>"i)) (1 (":")) ;
REMOVE VBimp IF (NOT 1* ExclMark) (NOT 0 ("tiéner") OR ("tiénguer") OR ("tier")) ;
REMOVE VBimp IF (NOT 1* ExclMark) (NOT -1 CM OR BOS) (0 ("tiéner") OR ("tiénguer") OR ("tier")) (NOT 1 CM OR EOS) ;
REMOVE VBimp IF (-1 Ant OR Cog OR unknown) (0 P3) ;
REMOVE VBimp IF (-2 Ant OR Cog OR unknown) (-1 AV OR Pro) (0 P3) ;
REMOVE VBimp IF (-3 Ant OR Cog OR unknown) (-2 AV) (-1 Pro) (0 P3) ;
SELECT VBimp IF (-1 BOS) (1 ExclMark) ;
SELECT VBimp IF (-1 BOS) (1 AV) (2 ExclMark) ;
SELECT VBimp IF (-2 BOS) (-1 ("be") OR ("que")) (1 ExclMark) ;
SELECT VBimp IF (-2 BOS) (-1 ("be") OR ("que")) (1 AV) (2 ExclMark) ;
REMOVE VBimp IF (-1 BOS) (0 ("un")) ;
SELECT VBimp IF (-1 BOS) (0 P2 LINK NOT 0 ("París")) (1* ExclMark) ;		# guess
SELECT VBimp IF (-1 CM) (1 ExclMark) ;		# guess
REMOVE VBimp IF (-2 BOS) (-1 ("be") OR ("que")) (0 ("un")) ;
SELECT VBimp IF (-2 BOS) (-1 ("be") OR ("que")) (0 P2) (1* ExclMark) ;	# guess

REMOVE NP IF (-1 BOS) (0 ("París")) (1C Conjsub) ;
REMOVE NP IF (-1 BOS) (0 ("París")) (1 AV) (2C Conjsub) ;
REMOVE NP IF (-1 BOS) (0 ("París")) (1 AV) (2 AV) (3C Conjsub) ;
SELECT NP IF (-1 BOS) (0 ("París")) ;

SELECT VBger (-3 De) (-2 DETdef + &&AcordSN) (-1 N + &&AcordSN) (0 ("<estant>"i)) ;
SELECT VBger (-2 De) (-1 NP + &&AcordSN) (0 ("<estant>"i)) ;
SELECT VBger (-3 De) (-2 DETdef + &&AcordSN) (-1 NP + &&AcordSN) (0 ("<estant>"i)) ;

REMOVE VBger IF (NOT -1 ("en") OR ("en bèth") OR ("en tot") OR Pro OR N_AJ OR CM) ;
REMOVE VBger IF (NOT -2 ("en") OR ("en bèth") OR ("en tot") OR Pro OR CM) (-1C Pro) ;

#Un pronom proclitic est totjorn davant un vèrb o un autre pronom
REMOVE Pro IF (NOT 1 unknownMinIni OR Pro OR V - VBpp OR VBimp) (NOT -1 PRencl or VBimp or VBinf or VBger) ;
REMOVE DET IF (1C V OR Pro) (NOT 1 VBpp) ;
SELECT V OR Pro IF (-1C Pro) (NOT -1/* V) ;	# i a un ; i aviá un
SELECT V OR Pro IF (-1C/* Pro) (NOT -1/* V) ;	# se'n sap

#enclitics
SELECT PRencl IF (0 ("nos") OR ("ve")) (-1 PRencl);

REMOVE V IF (0 ("<ve>"i)) (-1 V);
REMOVE V IF (0 ("<ve>"i)) (1 V);
REMOVE V IF (0 ("<ve>"i)) (1 Pro) (2 V);
REMOVE V IF (0 ("<ve>"i)) (1 Pro) (2 Pro) (3 V);
REMOVE V IF (0 ("<ve>"i)) (-1 Pro) (-2 V);
REMOVE V IF (0 ("<ve>"i)) (-1 Pro) (-2 Pro) (-3 V);

REMOVE PREP IF (0 ("<ara que>"i) OR ("<ara qu'>"i) OR ("<ara qu’>"i) OR ("<ara qui>")) (NOT -1 V + Pers OR VBinf OR VBger) ;
REMOVE PREP IF (0 ("<ara que>"i) OR ("<ara qu'>"i) OR ("<ara qu’>"i) OR ("<ara qui>")) (NOT -1 ("balhar") OR ("baliar") OR ("dar") OR ("donar")) ;	# guess
SELECT PREP IF (0 ("a")) (1C Pro) ;	# a lo parlar
SELECT PREP IF (0 ("a")) (1C Top OR Ant OR Cog OR Al) ;	# a Niça
REMOVE PREP IF (0 ("a")) (-1C Rel OR Conjsub) ;
SELECT PREP IF (-1 ("quant")) (0 ("a")) (1 DET + Pl_strict) ;
SELECT PREP IF (0 ("quant a")) (1 DET + Pl_strict) ;
REMOVE PREP IF (0 ("a")) (-1C Itg LINK NOT 0 ("quant")) ;

SELECT PREP IF (-2 De) (-1 NUM OR ("un")) (0 ("a")) (1 NUM) ;
SELECT NUM IF (-1 De) (0 ("un")) (1 ("a")) (2 NUM) ;
SELECT PREP IF (-3 De) (-2 NUM OR ("un")) (-1 N_AJ) (0 ("a")) (1 NUM) ;
SELECT PREP IF (-4 De) (-3 NUM OR ("un")) (-2 N_AJ + &&AcordSN) (-1 N_AJ + &&AcordSN) (0 ("a")) (1 NUM) ;

SELECT SUB:1 N IF (-1 Nommois) (0 ("<e mai>"i)) ;
SELECT SUB:1 N IF (-2 Nommois) (-1 NUM) (0 ("<e mai>"i)) ;
REMOVE SUB:1 N IF (0 ("<e mai>"i)) ;
SELECT SUB:1 AV IF (0 ("<e mai>"i)) (1 EOS OR Rpar) ;
SELECT SUB:1 AV IF (-2 ("mai")) (-1 AJ OR VBpp) (0 ("<e mai>"i)) ;
SELECT SUB:1 AV IF (0 ("<e mai>"i)) (1C AJ OR VBpp) ;
SELECT SUB:1 AV IF (-1 AJ) (0 ("<e mai>"i)) (1 AJ OR VBpp) ;
SELECT SUB:1 AV IF (0 ("<e mai>"i)) (1 ("jamai")) ;
SELECT Conjco IF (0 ("<e mai>"i)) (1 De) (2 N OR NUM) (-1* ("mai") OR ("<mai de>"i) OR ("<en mai de>"i) OR ("mens")) ;
SELECT SUB:1 AV IF (0 ("<e mai>"i)) (1 De) (2 N OR NUM) (-1* ("mai") OR ("<mai de>"i) OR ("<en mai de>"i) OR ("mens")) ;
SELECT Conjco IF (0 ("<e mai>"i)) (1 De) (2 AJ + &&AcordSN) (3 N + &&AcordSN) (-1* ("mai") OR ("<mai de>"i) OR ("<en mai de>"i) OR ("mens")) ;
SELECT SUB:1 AV IF (0 ("<e mai>"i)) (1 De) (2 AJ + &&AcordSN) (3 N + &&AcordSN) (-1* ("mai") OR ("<mai de>"i) OR ("<en mai de>"i) OR ("mens")) ;
REMOVE SUB:1 AV IF (0 ("<e mai>"i)) ;

SELECT DET + &&AcordSN IF (0 Quin + &&AcordSN + &&AcordSP) (1 N + &&AcordSN) (2 V + P3 + &&AcordSP) ;
SELECT DET + &&AcordSN IF (0 Quin + &&AcordSN + &&AcordSP) (1 N_AJ + &&AcordSN) (2 N_AJ + &&AcordSN OR AV OR E_enon OR Pro) (3 V + P3 + &&AcordSP) ;
SELECT DET + &&AcordSN IF (0 Quin + &&AcordSN + &&AcordSP) (1 N_AJ + &&AcordSN) (2 N_AJ + &&AcordSN OR AV OR E_enon OR Pro) (3 AV OR Pro) (4 V + P3 + &&AcordSP) ;
SELECT N_AJ IF (-1C Quin + &&AcordSN + &&AcordSP) (0 N_AJ + &&AcordSN) ;
SELECT N_AJ IF (-2C Quin + &&AcordSN + &&AcordSP) (-1 N_AJ + &&AcordSN) (0 N_AJ + &&AcordSN) ;

SELECT E_enon IF (-1 Itg OR Rel) (1 Pro OR V OR unknownMinIni) ;
SELECT E_enon IF (-2 Itg OR Rel) (-1 AV) (1 Pro OR V OR unknownMinIni) ;
SELECT E_enon IF (-1* Itg OR Rel BARRIER V LINK NOT 0 VBpp) (1C Pro OR V OR unknownMinIni) ;
SELECT Conjadv IF (0 ("si") LINK -1 Demandar) ;
SELECT E_enon IF (-1 ("si") LINK -1 Demandar) (1 Pro OR V OR unknownMinIni) ;
SELECT E_enon IF (-2 ("si") LINK -1 Demandar) (-1 AV) (1 Pro OR V OR unknownMinIni) ;
SELECT E_enon IF (-1* ("si") BARRIER V LINK NOT 0 VBpp) (-1* ("si") LINK -1 Demandar) (1C Pro OR V OR unknownMinIni) ;
SELECT Conjadv IF (0 ("si") LINK -1 AV LINK -1 Demandar) ;
SELECT E_enon IF (-1 ("si") LINK -1 AV LINK -1 Demandar) (1 Pro OR V OR unknownMinIni) ;
SELECT E_enon IF (-2 ("si") LINK -1 AV LINK -1 Demandar) (-1 AV) (1 Pro OR V OR unknownMinIni) ;
SELECT E_enon IF (-1* ("si") BARRIER V LINK NOT 0 VBpp) (-1* ("si") LINK -1 AV LINK -1 Demandar) (1C Pro OR V OR unknownMinIni) ;


SELECT Rel IF (-2 ("<n'i>"i) OR ("<n’i>"i)) (-1 ("aver") OR ("auer")) (0 Que OR Qui) ;
SELECT Rel IF (-3 ("<n'i>"i) OR ("<n’i>"i)) (-2 ("aver") OR ("auer")) (-1 DET OR N OR AJ OR NUM) (0 Que OR Qui) ;
SELECT Itg IF (-1 VBpp) (0 Qui) (1 Saber + PRI + P3 + Sg) ;	# es arribat qui sap d'on
SELECT Conjsub IF (-1C V) (0 Que OR Qui) ;	# vòli que
SELECT Conjsub IF (-2C V) (-1 AV) (NOT -1 ("e")) (0 Que OR Qui) ;	# vòli pas que
SELECT Conjsub IF (-3C V) (-2 AV) (-1 AV) (NOT -1 ("e")) (0 Que OR Qui) ;	# vòli pas totjorn que
SELECT Conjsub IF (-2 VBaux) (-1 VBpp) (0 Que OR Qui) ;	# ai pensat que
SELECT Conjsub IF (-3 VBaux) (-2 AV) (-1 VBpp) (NOT -1 ("e")) (0 Que OR Qui) ;	# ai pas pensat que
SELECT Conjsub IF (-4 VBaux) (-3 AV) (-2 AV) (-1 VBpp) (NOT -1 ("e")) (0 Que OR Qui) ;	# ai pas totjorn pensat que
SELECT Conjsub IF (-2C Ser) (-1 AJ OR ("vertat")) (0 Que OR Qui) ;	# es vertat que
SELECT Conjsub IF (-3C Ser) (-2 AV) (-1 AJ OR ("vertat")) (0 Que OR Qui) ;	# es pas vertat que
SELECT Conjsub IF (-4C Ser) (-3 AV) (-2 AV OR PREAV) (-1 AJ OR ("vertat")) (0 Que OR Qui) ;	# es pas totjorn vertat que
SELECT Rel IF (-2C Ser) (-1 NP) (0 Que OR Qui) ;	# es Aitana que
SELECT Rel IF (-3C Ser) (-2 AV) (-1 NP) (0 Que OR Qui) ;	# es pas Aitana que
SELECT Rel IF (-4C Ser) (-3 AV) (-2 AV) (-1 NP) (0 Que OR Qui) ;	# es pas totjorn Aitana que
SELECT Rel IF (-3C Ser) (-2 DETdef) (-1 NP) (0 Que OR Qui) ;	# es l'Aitana que
SELECT Rel IF (-4C Ser) (-3 DETdef) (-2 AV) (-1 NP) (0 Que OR Qui) ;	# es pas l'Aitana que
SELECT Rel IF (-5C Ser) (-4 DETdef) (-3 AV) (-2 AV) (-1 NP) (0 Que OR Qui) ;	# es pas totjorn l'Aitana que
SELECT Rel IF (-4C Ser) (-3 NP) (-2 Conjco) (-1 NP) (0 Que OR Qui) ;	# son Aitana e Anna que
SELECT Rel IF (-5C Ser) (-4 AV) (-3 NP) (-2 Conjco) (-1 NP) (0 Que OR Qui) ;	# son pas Aitana e Anna que
SELECT Rel IF (-6C Ser) (-5 AV) (-4 AV) (-3 NP) (-2 Conjco) (-1 NP) (0 Que OR Qui) ;	# son pas totjorn Aitana e Anna que
REMOVE Conjsub IF (-1C N_AJ) (0 Que OR Qui) (NOT -1* V + Pers LINK -1 Ne_enon) (NOT -1* V + Pers LINK 1 ("pas") + AV) ;
REMOVE Conjsub IF (0 Qui) ;
SELECT AV IF (0 AdvComp) (1 AJ OR VBpp OR AV) (2 Que) ;	# mei leugèr que jo

SELECT Conjsub (-3 Ser + P3 + Sg) (-2 ACausaDe OR ("per")) (-1 ("aquò")) (0 Que) (NOT 1* Que) ;
SELECT Conjsub (-4 Ser + P3 + Sg) (-3 AV) (-2 ACausaDe OR ("per")) (-1 ("aquò")) (0 Que) (NOT 1* Que) ;
SELECT Conjsub (-5 Ser + P3 + Sg) (-4 AV) (-3 AV) (-2 ACausaDe OR ("per")) (-1 ("aquò")) (0 Que) (NOT 1* Que) ;

REMOVE Vmod IF (0 ("aver# de") OR ("auer# de")) (NOT 1 VBinf OR Pro) ;
REMOVE Vmod IF (0 ("aver# de") OR ("auer# de")) (1 Pro) (NOT 2 VBinf OR Pro) ;
REMOVE Vmod IF (0 ("aver# de") OR ("auer# de")) (1 Pro) (2 Pro) (NOT 3 VBinf OR Pro) ;
SELECT Vmod IF (0 ("aver# de") OR ("auer# de")) (1 Pro) (2 Pro) (3C VBinf OR Pro) ;
SELECT Vmod IF (0 ("aver# de") OR ("auer# de")) (1 Pro) (2C VBinf OR Pro) ;
SELECT Vmod IF (0 ("aver# de") OR ("auer# de")) (1C VBinf OR Pro) ;
REMOVE Vmod IF (0 ("aver# de") OR ("auer# de")) (1 N_AJ OR AV OR PREAV) ;
REMOVE ("aver# de") OR ("auer# de") IF (0 ("aver# de") OR ("auer# de")) (1 N_AJ OR AV OR PREAV) ;
SELECT N + ("mal") IF (-1 ("aver")) (-1 ("<.* de>"ri)) (0 ("mal")) ;

SELECT SUB:1 AV IF (0 ("<los mens>"i)) (1C AJ + MascPl OR VBpp + MascPl) (NOT 1 AdjPre) ;	# los mens rapides
#SELECT AJ + MascPl OR VBpp + MascPl IF (-1 ("<los mens>"i)) (0 AJ + MascPl OR VBpp + MascPl) (NOT 1 AJ + MascPl) ;	# los mens rapides
REMOVE SUB:1 AV IF (0 ("<los mens>"i)) ;
SELECT SUB:2 AV IF (0 ("<deus mens>"i)) (1C AJ + MascPl OR VBpp + MascPl) (NOT 1 AdjPre) ;	# deus mens rapides
#SELECT AJ + MascPl OR VBpp + MascPl IF (-1 ("<deus mens>"i)) (0 AJ + MascPl OR VBpp + MascPl) (NOT 1 AJ + MascPl) ;	# deus mens rapides
REMOVE SUB:2 AV IF (0 ("<deus mens>"i)) ;
SELECT AV IF (-1/* DETdef + &&AcordSN) (0 AdvComp) (1 AJ + &&AcordSN OR VBpp + &&AcordSN OR N + &&AcordSN) ;	# lo mai rapide
SELECT AV IF (-2/* DETdef + &&AcordSN) (-1 N + &&AcordSN) (0 AdvComp) (1 AJ + &&AcordSN OR VBpp + &&AcordSN) ;	# lo mainatge mai rapide
SELECT AJ IF (-3/* DETdef + &&AcordSN) (-2 N + &&AcordSN) (-1 AdvComp) (0 AJ + &&AcordSN) ;	# los sons mai aguts
SELECT AV IF (-2 DET + &&AcordSN) (-1 N + &&AcordSN) (0 AdvComp) (1 AJ + &&AcordSN OR VBpp + &&AcordSN) ;	# un projècte mai grand
SELECT AJ IF (-3 DET + &&AcordSN) (-2 N + &&AcordSN) (-1 AdvComp) (0 AJ + &&AcordSN) ;	# un projècte mai grand
SELECT AV IF (-3/* DETdef + &&AcordSN) (-2 N + &&AcordSN) (-1 AJ + &&AcordSN) (0 AdvComp) (1 AJ + &&AcordSN OR VBpp + &&AcordSN) ;	# las comunitats autonòmas mai ricas
SELECT AJ IF (-4/* DETdef + &&AcordSN) (-2 N + &&AcordSN) (-1 AJ + &&AcordSN) (-1 AdvComp) (0 AJ + &&AcordSN) ;	# las comunitats autonòmas mai ricas
SELECT AV IF (-3 DET + &&AcordSN) (-2 N + &&AcordSN) (-1 AJ + &&AcordSN) (0 AdvComp) (1 AJ + &&AcordSN OR VBpp + &&AcordSN) ;
SELECT AJ IF (-4 DET + &&AcordSN) (-2 N + &&AcordSN) (-1 AJ + &&AcordSN) (-1 AdvComp) (0 AJ + &&AcordSN) ;
SELECT AV IF (-1/* DETdef) (0 AdvComp) (1 AV) ;
SELECT N IF (-1 ("en")) (0 ("contacte") + MascSg) ;
SELECT PREP IF (0 ("en")) (1 ("contacte") + MascSg) ;
SELECT N IF (-1 CM) (0 ("signe")) (1 De) ;
SELECT N IF (-1 ("en")) (0 ("nombre") + &&AcordSN) (1 AdvComp) (2 AJ + &&AcordSN) ;
SELECT N IF (0 ("nombre") + Sg) (1 De) (2C N_AJ + Pl) ;
SELECT AJ + MascSg IF (1 ("nombre") + Sg) (2 De) (3C N_AJ + Pl) ;
SELECT AJ OR VBpp OR AV IF (-1 AdvComp) (0 AJ OR VBpp OR AV) (1 Que) ;	# mei leugèr que jo
SELECT AJ OR AV IF (-1 AdvComp) (0 AJ OR VBpp OR AV) (1 Que) ;	# mei leugèr que jo
SELECT Rel IF (-2 AdvComp) (-1 AJ OR VBpp OR AV) (0 Que) (1 Ser + P3) ;	# lo mei leugèr que sia
SELECT Conjsub IF (-2 AdvComp) (-1 AJ OR VBpp OR AV) (0 Que) ;	# mei leugèr que jo
SELECT Conjsub IF (-1 ("mai bon") OR ("mei bon") OR ("mai plan") OR ("mei plan")) (0 Que) ;
SELECT Itg IF (0 Que) (1 Ser) (2 ("?")) ;
SELECT Itg IF (0 Que) (1 Ser) (2 ("aquò") OR ("çò")) (1* ("?")) ;
SELECT SUB:1 Itg IF (0 De) (1 Ser) (2 ("?")) ;
SELECT SUB:1 Itg IF (0 De) (1 Ser) (2 ("aquò") OR ("çò")) (1* ("?")) ;
SELECT Rel OR Enon IF (-1 ("aquò") OR ("çò")) (0 Que) ;
SELECT Rel IF (-1 ("aquò") OR ("çò")) (0 Qui) ;
REMOVE Itg IF (-1C N_AJ) (0 Que) ;
REMOVE Itg IF (-1C ("voler")) (0 Que) ;
REMOVE Itg IF (-1C Saber) (0 Que) ;	# patch
REMOVE Itg IF (-1C ("pensar")) (0 Que) ;	# patch
REMOVE Itg IF (-1C ("creire") OR ("créder") OR ("créser") OR ("creir")) (0 Que) ;	# patch
REMOVE Itg IF (-1C ("diser") OR ("díder")) (0 Que) ;	# patch
REMOVE Itg IF (-1C ("reconéisser") OR ("reconéisher")) (0 Que) ;	# patch
REMOVE Conjsub IF (-1 CM) (0 Que) ;
REMOVE Conjsub IF (-1 DET) (0 Que) ;
REMOVE Conjsub IF (-1C N) (0 Que) (NOT -1* Ne_enon OR Pas + AV) ;
REMOVE Conjsub IF (-1C N) (0 Que) (NOT -1* Ne_enon OR Pas + AV BARRIER De) ;	# a pas dobèrt de classa que siá bilingüa
REMOVE Conjsub IF (-1C AJ LINK -1 N_AJ) (0 Que) (NOT -1* Ne_enon OR Pas + AV BARRIER De) ;	# a pas dobèrt de classa suplementària que siá bilingüa
REMOVE Conjsub IF (-1C AJ LINK -1 AV OR PREAV LINK -1 N_AJ) (0 Que) (NOT -1* Ne_enon OR Pas + AV BARRIER De) ;
REMOVE Conjsub IF (-2C N) (-1 AJ) (0 Que) ;
REMOVE Conjsub IF (-3 N) (-2 AV OR PREAV) (-1 AJ) (0 Que) ;
REMOVE AVG IF (NOT -1 ("pas") OR ("solament")) (0 Que) ;

REMOVE Que_Itg IF (NOT -1 BOS OR CM OR PREP OR Conjadv OR Vconj OR VBinf OR VBger) ;
REMOVE Que_Itg IF (-1 CM) (NOT 1* ("?")) ;
REMOVE Que_Itg IF (-1C N_AJ OR VBpp OR NP) ;
REMOVE Que_Itg IF (-2C N_AJ OR VBpp OR NP) (-1 CM) ;
REMOVE Que_Itg IF (-2C N_AJ OR VBpp OR NP) (-1 PREP) ;
REMOVE Que_Itg IF (-3C N_AJ OR VBpp OR NP) (-2 CM) (-1 PREP) ;
#SELECT Que_Itg IF (-1 BOS) (1* ("?") BARRIER (".") OR (";")) ;
#SELECT Que_Itg IF (-2 BOS) (-1 Conjco OR IJ OR AV) (1* ("?") BARRIER (".") OR (";")) ;
#SELECT Que_Itg IF (-2 BOS) (-1 Ant_Cog OR unknownMajIni) (1* ("?") BARRIER (".") OR (";")) ;
#SELECT Que_Itg IF (-3 BOS) (-2 Conjco OR IJ OR AV) (-1 CM) (1* ("?") BARRIER (".") OR (";")) ;
#SELECT Que_Itg IF (-3 BOS) (-2 Ant_Cog OR unknownMajIni) (-1 CM) (1* ("?") BARRIER (".") OR (";")) ;
#SELECT Que_Itg IF (-2 BOS) (-1 PREP) (1* ("?") BARRIER (".") OR (";")) ;
#SELECT Que_Itg IF (-2 BOS) (-2 Conjco OR IJ OR AV) (-1 PREP) (1* ("?") BARRIER (".") OR (";")) ;
#SELECT Que_Itg IF (-2 BOS) (-2 Ant_Cog OR unknownMajIni) (-1 PREP) (1* ("?") BARRIER (".") OR (";")) ;
#SELECT Que_Itg IF (-3 BOS) (-3 Conjco OR IJ OR AV) (-2 CM) (-1 PREP) (1* ("?") BARRIER (".") OR (";")) ;
#SELECT Que_Itg IF (-3 BOS) (-3 Ant_Cog OR unknownMajIni) (-2 CM) (-1 PREP) (1* ("?") BARRIER (".") OR (";")) ;
#SELECT Rel OR Enon IF (-1C N_AJ OR NP) (0 Que OR Qui) (1 Vconj + P3) ;
SELECT Rel IF (-1C N_AJ OR NP) (0 Qui) (1 Vconj + P3) ;
SELECT Rel OR Enon IF (-2C N_AJ OR NP) (-1 CM) (0 Que OR Qui) (1 Vconj + P3) ;
SELECT Rel OR Enon IF (-1C N_AJ OR NP) (0 Que OR Qui) (1 AV) (2 Vconj + P3) ;
SELECT Rel OR Enon IF (-2C N_AJ OR NP) (-1 CM) (0 Que OR Qui) (1 AV) (2 Vconj + P3) ;
SELECT Rel IF (-2C N_AJ OR NP) (-1 PREP) (0 Que OR Qui) (1 Vconj + P3) ;
SELECT Rel IF (-3C N_AJ OR NP) (-2 CM) (-1 PREP) (0 Que OR Qui) (1 Vconj + P3) ;
SELECT Rel IF (-2C N_AJ OR NP) (-1 PREP) (0 Que OR Qui) (1 AV) (2 Vconj + P3) ;
SELECT Rel IF (-3C N_AJ OR NP) (-2 CM) (-1 PREP) (0 Que OR Qui) (1 AV) (2 Vconj + P3) ;
SELECT Conjsub IF (0 Que) (1 Ser + PRS) (1* ("o"));
SELECT Conjsub IF (0 Que) (1 Ser + PIS) (1* ("o"));
SELECT Conjsub IF (-1C ("pensar") OR ("créder") OR ("créser") OR ("díser") OR ("imaginar") OR ("ordenar") OR ("comandar") OR ("voler") OR ("demandar") OR ("respóner") OR ("assegurar"));

REMOVE N IF (NOT -1/* DET + Fem) (0 ("èra")) ;
REMOVE N IF (-1C Itg OR Excl) (0 ("èra")) ;		# quau èra

SELECT DET + &&AcordSN IF (0 ("un") + &&AcordSN) (1 N_AJ + &&AcordSN) ;	# guess (cal pels enonciatius)
SELECT DET + &&AcordSN IF (NOT -1 PREP) (0 ("un") + &&AcordSN) (1 Top + &&AcordSN) ;	# guess (cal pels enonciatius)
REMOVE V IF (0 ("un")) (1 Que OR Qui) ;

SELECT ("çò") + Enon IF (1 Vdire + Pers) ;
SELECT ("çò") + Enon IF (1 Pro OR AV) (2 Vdire + Pers) ;
SELECT ("çò") + Enon IF (1 Pro OR AV) (2 Pro) (3 Vdire + Pers) ;
SELECT ("çò") + Enon IF (1 Haver + Pers) (2 Vdire + VBpp) ;
SELECT ("çò") + Enon IF (1 Pro OR AV) (2 Haver + Pers) (3 Vdire + VBpp) ;
SELECT ("çò") + Enon IF (1 Pro OR AV) (2 Pro) (3 Haver + Pers) (4 Vdire + VBpp) ;
SELECT ("çò") + Enon IF (1 Haver + Pers) (2 AV) (3 Vdire + VBpp) ;
SELECT ("çò") + Enon IF (1 Pro OR AV) (2 Haver + Pers) (3 AV) (4 Vdire + VBpp) ;
SELECT ("çò") + Enon IF (1 Pro OR AV) (2 Pro) (3 Haver + Pers) (4 AV) (5 Vdire + VBpp) ;
SELECT ("çò") + Enon IF (1 Haver + Pers) (2 AV) (3 AV) (4 Vdire + VBpp) ;
SELECT ("çò") + Enon IF (1 Pro OR AV) (2 Haver + Pers) (3 AV) (4 AV) (5 Vdire + VBpp) ;
SELECT ("çò") + Enon IF (1 Pro OR AV) (2 Pro) (3 Haver + Pers) (4 AV) (5 AV) (6 Vdire + VBpp) ;
REMOVE ("çò") + Enon ;

SELECT AJ (0 ("mai bon") + &&AcordSN) (-1 DET + &&AcordSN) ;
SELECT AJ (0 ("mai bon") + &&AcordSN) (-1 N + &&AcordSN) ;
SELECT AJ (0 ("mai bon") + &&AcordSN) (1 N + &&AcordSN) ;
REMOVE AJ (0 ("mai bon")) ;

REMOVE VBpp IF (0 Conjadv OR PREP LINK 0 ("<.* que>"ri)) (NOT -1 Haver) (NOT -2 Haver) ;	# vist que lor manifestacion

SELECT PREP IF (-1C BOS OR Conjsub OR Conjadv OR Rel) (0 ("shens")) (1C VBinf OR N_AJ) ;	# shens díser
SELECT PREP IF (-1C BOS OR Conjsub OR Conjadv OR Rel) (0 ("shens")) (1 Pro OR AV) (2C VBinf) ;
SELECT PREP IF (-1C BOS OR Conjsub OR Conjadv OR Rel) (0 ("shens")) (1C Pro OR AV) (2 VBinf) ;	# shens li díser
SELECT PREP IF (-1C BOS OR Conjsub OR Conjadv OR Rel) (0 ("shens")) (1 Pro OR AV) (2 Pro OR AV) (3 VBinf) ;	# shens li'n díser

# eliminacion de l'enonciatiu 'que' en gascon sens enonciatius (cases particulars)
REMOVE ("que") + Enon OR ("be") + Enon OR ("non") + Enon IF (-1*C V + Vconj_non_Imp LINK -1 BOS) ;
REMOVE ("que") + Enon OR ("be") + Enon OR ("non") + Enon IF (-1*C V + Vconj_non_Imp LINK -1C Pro OR AV LINK -1 BOS) ;

REMOVE ("que") + Enon IF (-2 Ser + Vconj_non_Imp) (-1 ("aquò")) ;
REMOVE ("que") + Enon IF (-3 Ser + Vconj_non_Imp) (-2 AV) (-1 ("aquò")) ;
REMOVE ("que") + Enon IF (-3 Ser + Vconj_non_Imp) (-2 ("aquò")) (-1 AV) ;
REMOVE ("que") + Enon IF (-4 Ser + Vconj_non_Imp) (-3 AV) (-2 AV) (-1 ("aquò")) ;
REMOVE ("que") + Enon IF (-3 Ser + Vconj_non_Imp) (-2 DET + &&AcordSN) (-1 N + &&AcordSN) ;
REMOVE ("que") + Enon IF (-4 Ser + Vconj_non_Imp) (-3 AV) (-2 DET + &&AcordSN) (-1 N + &&AcordSN) ;
REMOVE ("que") + Enon IF (-5 Ser + Vconj_non_Imp) (-4 AV) (-3 AV) (-2 DET + &&AcordSN) (-1 N + &&AcordSN) ;
REMOVE ("que") + Enon IF (-2 Ser + Vconj_non_Imp + Pl) (-1 N_AJ + Pl) ;
REMOVE ("que") + Enon IF (-3 Ser + Vconj_non_Imp + Pl) (-2 AV) (-1 N_AJ + Pl) ;
REMOVE ("que") + Enon IF (-4 Ser + Vconj_non_Imp + Pl) (-3 AV) (-2 AV) (-1 N_AJ + Pl) ;
REMOVE ("que") + Enon IF (-3 Ser + Vconj_non_Imp) (-2 DET + &&AcordSN) (-1 N + &&AcordSN) (-1 AJ + &&AcordSN) ;
REMOVE ("que") + Enon IF (-4 Ser + Vconj_non_Imp) (-3 AV) (-2 DET + &&AcordSN) (-1 N + &&AcordSN) (-1 AJ + &&AcordSN) ;
REMOVE ("que") + Enon IF (-5 Ser + Vconj_non_Imp) (-4 AV) (-3 AV) (-2 DET + &&AcordSN) (-1 N + &&AcordSN) (-1 AJ + &&AcordSN) ;
REMOVE ("que") + Enon IF (-3 Ser + Vconj_non_Imp + Pl) (-2 N + Pl + &&AcordSN) (-1 AJ + &&AcordSN) ;
REMOVE ("que") + Enon IF (-4 Ser + Vconj_non_Imp + Pl) (-3 AV) (-2 N + Pl + &&AcordSN) (-1 AJ + &&AcordSN) ;
REMOVE ("que") + Enon IF (-5 Ser + Vconj_non_Imp + Pl) (-4 AV) (-2 AV) (-1 N + Pl + &&AcordSN) (-1 AJ + &&AcordSN) ;
REMOVE ("que") + Enon IF (-3 Ser + Vconj_non_Imp + Pl) (-2 De) (-1 N + Pl) ;
REMOVE ("que") + Enon IF (-4 Ser + Vconj_non_Imp + Pl) (-3 AV) (-2 De) (-1 N + Pl) ;
REMOVE ("que") + Enon IF (-5 Ser + Vconj_non_Imp + Pl) (-4 AV) (-3 AV) (-2 De) (-1 N + Pl) ;

SELECT Conjsub IF (-3 ("non")) (-2 V) (-1 Pas) (0 Que) (1C N OR VBinf) ;	# non fas que minjar
SELECT Conjsub IF (-2 ("non")) (-1 V) (0 Que) (1C N OR VBinf) ;
SELECT Conjsub IF (-4 ("non")) (-3 Haver) (-2 VBpp) (-1 Pas) (0 Que) (1C N OR VBinf) ;	# non as fèit que minjar
SELECT Conjsub IF (-3 ("non")) (-2 Haver) (-1 VBpp) (0 Que) (1C N OR VBinf) ;
SELECT Conjsub IF (-4 ("non")) (-3 Vmod) (-2 VBinf) (-1 Pas) (0 Que) (1C N OR VBinf) ;	# non vòls far que minjar
SELECT Conjsub IF (-3 ("non")) (-2 Vmod) (-1 VBinf) (0 Que) (1C N OR VBinf) ;

SELECT Conjsub IF (-1 Mai) (0 ("que")) (NOT -2 DET OR BOS) ;
REMOVE N_AJ IF (0 Mai) (1 ("que")) (NOT -1 DET) ;
SELECT Conjsub IF (-2 Mai) (-1 AJ OR AV) (0 ("que")) ;
SELECT AV IF (0 Mai) (1 AJ OR AV) (2 ("que")) ;
SELECT ("be") + Enon IF (-1 BOS) ;
SELECT ("be") + Enon IF (-3 BOS) (-2 AV OR Conjadv) (-1 CM) ;
SELECT ("que") + Enon IF (-1 BOS) ;
SELECT ("que") + Enon IF (-3 BOS) (-2 AV OR Conjadv) (-1 CM) ;
REMOVE ("e") + Enon IF (NOT 1* ("?")) ;
REMOVE ("be") + Enon IF (NOT 1* ("!")) ;
REMOVE ("que") + Enon IF (-1C DET) ;
REMOVE ("que") + Enon IF (-1 ("solide")) ;
SELECT ("que") + Conjsub IF (-1 ("mei")) ;
SELECT ("que") + Conjsub IF (-2 ("mei")) (-1 AJ OR AJ) ;
SELECT ("que") + Enon OR ("be") + Enon OR ("non") + Enon IF (NOT -1* V + Pers) (1C Pro OR V + Pers LINK NOT 0 VBimp) (NOT 2* V + Pers) (NOT 2* ("?")) ;
SELECT ("que") + Enon OR ("be") + Enon OR ("non") + Enon IF (NOT -1* V + Pers) (1C Pro OR V + Pers LINK NOT 0 VBimp) (NOT 2* V + Pers BARRIER Conjsub OR Conjadv OR Rel) (NOT 2* ("?")) ;
REMOVE ("que") + Enon IF (NOT -1* V + Pers) (-1* ("e") + Enon) (2* ("?")) ;
REMOVE ("que") + Enon IF (NOT -1* V + Pers) (-1* ("be") + Enon) (2* ("!")) ;
REMOVE ("que") + Enon IF (-1C V + Pers OR VBinf OR VBger) ;
REMOVE ("que") + Enon IF (-1 AV) (-2C V + Pers OR VBinf OR VBger) ;
REMOVE ("que") + Enon IF (-1C N_AJ OR VBpp OR NP OR unknownMajIni) (NOT 1 Pro) (2*C V + Pers LINK NOT -1 Rel OR Conjsub OR Conjadv OR AV OR Pro) ;	# los amics que son bons (enon) ; los amics que son bons que son bons (que1 = rel, que2 = enon) ; Marieta que torna e que serveish
#REMOVE ("que") + Enon IF (-1C N_AJ OR VBpp OR NP OR unknownMajIni) (NOT 1 Pro) (3*C V + Pers OR VBinf OR VBger LINK -1 Pro LINK NOT -1 Rel OR Conjsub OR Conjadv OR AV OR Pro) ;
#REMOVE ("que") + Enon IF (-1C N_AJ OR VBpp OR NP OR unknownMajIni) (NOT 1 Pro) (3*C V + Pers OR VBinf OR VBger LINK -1 AV LINK NOT -1 Rel OR Conjsub OR Conjadv) ;	# Marieta que tostemps torna e que serveish
REMOVE ("que") + Enon IF (-1C N_AJ OR VBpp OR NP OR unknownMajIni) (1 Pro) (NOT 2 Pro) (3*C V + Pers BARRIER EOS OR Conjsub OR Conjadv OR Rel) ;	# guess
REMOVE ("que") + Enon IF (-1C N_AJ OR VBpp OR NP OR unknownMajIni) (1 Pro) (2 Pro) (4*C V + Pers BARRIER EOS OR Conjsub OR Conjadv OR Rel) ;	# guess
REMOVE ("que") + Enon IF (-2C N_AJ OR VBpp OR NP OR unknownMajIni) (-1 CM) (NOT 2 Pro) (3*C V + Pers BARRIER EOS OR Conjsub OR Conjadv OR Rel) ;	# guess
REMOVE ("que") + Enon IF (-2C N_AJ OR VBpp OR NP OR unknownMajIni) (-1 CM) (2 Pro) (NOT 3 Pro) (4*C V + Pers BARRIER EOS OR Conjsub OR Conjadv OR Rel) ;	# guess
REMOVE ("que") + Enon IF (-2C N_AJ OR VBpp OR NP OR unknownMajIni) (-1 CM) (2 Pro) (3 Pro) (5*C V + Pers BARRIER EOS OR Conjsub OR Conjadv OR Rel) ;	# guess
REMOVE ("non") + Enon IF (NOT 1* ("pas")) ;
SELECT ("non") + Enon IF (1C Pro OR V + Pers LINK NOT 0 VBimp) ;
SELECT SUB:1 ("non") + Enon IF (1C Pro OR V + Pers LINK NOT 0 VBimp) ;
SELECT ("non") + Enon IF (1 Pro OR V + Pers) (NOT -1 DET + MascSg) ;
SELECT ("non") + Enon IF (1 Pro OR V + Pers) (-1 ("<nat>"i)) ;
SELECT PRON IF (0 ("<nat>"i)) (1 ("<non>"i)) ;
SELECT Ne_adv OR Ne_enon IF (0 ("ne")) (1 ("en") OR ("ne")) ;
SELECT Pro IF (-1 ("ne")) (0 ("en") OR ("ne")) ;
SELECT Ne_enon IF (-1 PRON + PRON_Pas_Neg) (1 V) ;	# nat ne manja
SELECT Ne_enon IF (1 V) (2 PRON + PRON_Pas_Neg OR DET + DET_Pas_Neg) ;	# ne manja nat
SELECT Ne_enon IF (-1 PRON + PRON_Pas_Neg) (1 Pro) (2 V) ;	# nat ne'n manja
SELECT Ne_enon IF (1 Pro) (2 V) (3 PRON + PRON_Pas_Neg OR DET + DET_Pas_Neg) ;	# ne'n manja nat
SELECT Ne_enon IF (-1 PRON + PRON_Pas_Neg) (1 Pro) (2 Pro) (3 V) ;	# nat n'i en manja
SELECT Ne_enon IF (1 Pro) (2 Pro) (3 V) (4 PRON + PRON_Pas_Neg OR DET + DET_Pas_Neg) ;	# n'i en manja nat
SELECT PRON IF (0 PRON + PRON_Pas_Neg) (1 ("ne")) (2 V) ;
SELECT PRON IF (0 PRON + PRON_Pas_Neg) (1 ("ne")) (2 Pro) (3 V) ;
SELECT PRON IF (0 PRON + PRON_Pas_Neg) (1 ("ne")) (2 Pro) (3 Pro) (3 V) ;
SELECT PRON + PRON_Pas_Neg OR DET + DET_Pas_Neg IF (-2 ("ne")) (-1 V) (0 PRON + PRON_Pas_Neg OR DET + DET_Pas_Neg) ;
SELECT PRON + PRON_Pas_Neg OR DET + DET_Pas_Neg IF (-2 ("ne")) (-2 V) (-1 AV) (0 PRON + PRON_Pas_Neg OR DET + DET_Pas_Neg) ;
REMOVE Enon IF (0 Que) (-1*C V + Pers LINK -1C ("ne") + Enon) ;		# n'è cap paur que
SELECT Conjsub IF (0 Que) (-1*C V + Pers LINK -1C ("ne") + Enon) (1*C PRS OR PIS BARRIER V) ;		# n'è cap paur que cante
#SELECT Conjsub IF (0 Que) (-1*C V + Pers LINK -1C ("ne") + Enon) (1* PRS OR PIS BARRIER V) ;		# n'è cap paur que cante
REMOVE Ne_enon IF (NOT 1* ("pas")) ;
SELECT Ne_enon IF (1 V) (2 ("pas")) ;
SELECT Ne_enon IF (1 V) (2 ("que")) ;
SELECT Ne_enon IF (1 ("pas")) (2 VBinf) ;
SELECT Ne_enon IF (1 ("pas")) (2 Pro OR AV) (3 VBinf) ;
SELECT Ne_enon IF (1 ("pas")) (2 Pro OR AV) (3 Pro OR AV) (4 VBinf) ;
SELECT Ne_enon IF (1 ("pas")) (2 Pro OR AV) (3 Pro OR AV) (4 Pro OR AV) (5 VBinf) ;
SELECT Ne_enon IF (1 V) (2 AV + AV_Pas_Neg) ;
SELECT Ne_enon IF (1 V) (2 PRON + PRON_Pas_Neg) ;
SELECT Ne_enon IF (1 V) (2 AV) (3 ("pas")) ;
SELECT Ne_enon IF (1 V) (2 AV) (3 ("que")) ;
SELECT Ne_enon IF (1 V) (2 AV) (3 AV + AV_Pas_Neg) ;
SELECT Ne_enon IF (1 V) (2 AV) (3 PRON + PRON_Pas_Neg) ;
SELECT Ne_enon IF (1 V) (1* PRON + PRON_Pas_Neg) ;
SELECT Ne_enon IF (1 V) (-1* PRON + PRON_Pas_Neg) ;
SELECT Ne_enon IF (1 V) (1* DET + DET_Pas_Neg) ;
SELECT Ne_enon IF (1 V) (-1* DET + DET_Pas_Neg) ;
REMOVE Ne_enon ;
SELECT Rel IF (-1 ("a cada còp"i)) (0 Que) ;
SELECT Conjadv IF (0 ("cada còp que"i)) (1* Que) ;
SELECT Conjadv IF (0 ("cada còp que"i)) ;	# patch
SELECT Enon IF (-1*C Enon) (-1C Conjco) (NOT -1* Conjsub OR Que + Rel) (0 Que OR ("ne") OR ("non")) (1 V + Pers LINK NOT 0 VBimp) ;
SELECT Enon IF (-1*C Enon) (-1C Conjco) (NOT -1* Conjsub OR Que + Rel) (0 Que OR ("ne") OR ("non")) (1 Pro OR AV) (2 V + Pers LINK NOT 0 VBimp) ;
SELECT Enon IF (-1*C Enon) (-1C Conjco) (NOT -1* Conjsub OR Que + Rel) (0 Que OR ("ne") OR ("non")) (1 Pro OR AV) (2 Pro) (3 V + Pers LINK NOT 0 VBimp) ;
#REMOVE Enon IF (-1*C Verb + Pers BARRIER EOS OR Mas_cnjcoo OR O_cnjcoo) (NOT -1* Conjadv BARRIER EOS OR ("mes") + Conjco) (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon BARRIER V) ; # (1C Pro OR V + Pers LINK NOT 0 VBimp) ;
#REMOVE Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg BARRIER BOS) (-1* V + Pers LINK -1*C Enon BARRIER BOS) (1C Pro OR V + Pers LINK NOT 0 VBimp) ;	# qu'ei un disque que
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon BARRIER V) (1C Pro OR V + Pers LINK NOT 0 VBimp) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon BARRIER V) (0 ("ne") OR ("non")) (1 V + Pers LINK NOT 0 VBimp) (2 ("pas") OR ("pas nat")) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon BARRIER V) (0 ("ne") OR ("non")) (1 Pro) (2 V + Pers LINK NOT 0 VBimp) (3 ("pas") OR ("pas nat")) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon BARRIER V) (0 ("ne") OR ("non")) (1 Pro) (2 Pro) (3 V + Pers LINK NOT 0 VBimp) (4 ("pas") OR ("pas nat")) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon BARRIER V) (0 ("be")) (1 V + Pers LINK NOT 0 VBimp) (2* ("!")) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon BARRIER V) (0 ("be")) (1 Pro) (2 V + Pers LINK NOT 0 VBimp) (3* ("!")) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon BARRIER V) (0 ("be")) (1 Pro) (2 Pro) (3 V + Pers LINK NOT 0 VBimp) (4* ("!")) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon BARRIER V) (0 ("e")) (1 V + Pers LINK NOT 0 VBimp) (2* ("?")) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon BARRIER V) (0 ("e")) (1 Pro) (2 V + Pers LINK NOT 0 VBimp) (3* ("?")) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon BARRIER V) (0 ("e")) (1 Pro) (2 Pro) (3 V + Pers LINK NOT 0 VBimp) (4* ("?")) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon OR V) (0 ("que")) (1 V + Pers LINK NOT 0 VBimp) (NOT 2* ("?") OR ("!")) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon OR V) (0 ("que")) (1 Pro) (2 V + Pers LINK NOT 0 VBimp) (NOT 3* ("?") OR ("!")) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon OR V) (0 ("que")) (1 Pro) (2 Pro) (3 V + Pers LINK NOT 0 VBimp) (NOT 4* ("?") OR ("!")) ;
REMOVE Enon IF (-1C Enon) ;
REMOVE Enon IF (-1 Enon) ;

SELECT Acr IF (-1 NUM LINK NOT 0 Gen) (0 ("ha")) ;
REMOVE Acr IF (0 ("ha")) ;
SELECT IJ IF (0 ("ha") OR ("ho")) (1 CM) (1* ("!")) ;
SELECT IJ IF (-1 CM) (0 ("ha") OR ("ho")) (1* ("!")) ;
SELECT V IF (-1 BOS OR CM) (0 ("ha")) (1 N_AJ) ;
SELECT IJ IF (-1 BOS) (0 N OR ("ha") OR ("ho")) (1 CM) (1* ("!")) ;
SELECT IJ IF (-1 BOS OR CM) (NOT 0 ("ha") OR ("ho")) (1 ("!")) ;
#SELECT IJ IF (-1 BOS OR CM) (0 ("gràcies") OR ("de res")) ;			# COPY-PASTE
REMOVE IJ IF (NOT -1 CM OR BOS) (NOT 1 CM OR EOS) (NOT 1* ("!")) ;
REMOVE IJ IF (NOT -1 CM OR BOS) (NOT 1 CM OR EOS) (0 ("a")) ;
REMOVE IJ IF (NOT -1 CM OR BOS) (0 ("plan")) ;
REMOVE IJ IF (NOT -1 CM OR BOS) (0 ("las")) ;
REMOVE AJ (0 ("las")) (1 V OR Pro) ;
SELECT Pro (0 ("las")) (1C V OR Pro) ;
SELECT DET (-1 PREP) (0 ("las")) (1 De) ;
REMOVE N (0 ("les")) (1 V OR Pro) (NOT -1 DET + Masc) ;

SELECT AVexcl IF (-1 BOS) (0 AVexcl) (1 ("!")) ;
SELECT AVexcl IF (-2 BOS) (-1 Conjco) (0 AVexcl) (1 ("!")) ;
REMOVE AVexcl ;

SELECT N IF (-1/* DET + MascSg) (0 ("<dejà vist>"i)) ;
REMOVE N IF (0 ("<dejà vist>"i)) ;

REMOVE PREP IF (0 ("quanta")) ;
REMOVE N IF (0 ("<quanta>"i) + DET + &&AcordSN) (1 N +  &&AcordSN) ;
SELECT PRON IF (0 ("quant"i)) (1 Ser OR Semblar_Pareisser) ;
REMOVE PRON IF (0 ("quant"i) + DET + &&AcordSN) (1 N +  &&AcordSN) ;
REMOVE AJ IF (0 ("quant"i) + DET + &&AcordSN) (1C N) (1 N +  &&AcordSN) ;
SELECT Itg OR Excl OR IJ IF (-1 BOS) (0 ("qué") OR ("qui") OR ("quin") OR ("qual") OR ("quau") OR ("quant")) ;	# Qui s'adresse
REMOVE Itg OR Excl OR IJ IF (-2 BOS) (-1 Artcontrsg OR Artcontrpl) (0 ("qué") OR ("qui") OR ("quin") OR ("qual") OR ("quau") OR ("quant")) ;	# A qui s'adresse
SELECT Itg OR Excl OR IJ IF (-2 BOS) (-1 PREP) (0 ("qué") OR ("qui") OR ("quin") OR ("qual") OR ("quau") OR ("quant")) ;	# A qui s'adresse
SELECT SUB:1 Itg OR Excl OR IJ IF (-1 BOS) (0 PREP) ;	# A qui s'adresse
SELECT Itg OR Excl OR IJ IF (-2 BOS) (-1 Conjco) (0 ("qué") OR ("qui") OR ("quin") OR ("qual") OR ("quau") OR ("quant")) ;	# Mais qui s'adresse
REMOVE Itg OR Excl OR IJ IF (-3 BOS) (-1 Conjco) (-1 Artcontrsg OR Artcontrpl) (0 ("qué") OR ("qui") OR ("quin") OR ("qual") OR ("quau") OR ("quant")) ;	# Mais a qui s'adresse
SELECT Itg OR Excl OR IJ IF (-3 BOS) (-1 Conjco) (-1 PREP) (0 ("qué") OR ("qui") OR ("quin") OR ("qual") OR ("quau") OR ("quant")) ;	# Mais a qui s'adresse
SELECT SUB:1 Itg OR Excl OR IJ IF (-2 BOS) (-1 Conjco) (0 PREP) ;	# Mai a qui s'adresse
REMOVE Itg + AJ OR Excl + AJ IF (0 ("quin") OR ("qual") OR ("quau") OR ("quant")) (NOT 1 N) ;	# Qual vòl venir?
REMOVE Itg + DET OR Excl + DET IF (0 ("quin") OR ("qual") OR ("quau") OR ("quant")) (NOT 1 N_AJ) ;	# Qual vòl venir?

SELECT Itg IF (-1 BOS) (0C Itg OR Excl OR IJ OR Rel OR Conjsub OR Conjadv OR ("coma")) (1* ("?")) ;
SELECT Itg IF (-2 BOS) (-1 PREP) (0C Itg OR Excl OR IJ OR Rel OR Conjsub OR Conjadv OR ("coma")) (1* ("?")) ;
SELECT SUB:1 Itg IF (-1 BOS) (0 PREP) (1* ("?")) ;
SELECT Itg IF (-2 BOS) (-1 Conjco) (0C Itg OR Excl OR IJ OR Rel OR Conjsub OR Conjadv OR ("coma")) (1* ("?")) ;
SELECT Itg IF (-3 BOS) (-2 Conjco) (-1 PREP) (0C Itg OR Excl OR IJ OR Rel OR Conjsub OR Conjadv OR ("coma")) (1* ("?")) ;
SELECT SUB:1 Itg IF (-2 BOS) (-1 Conjco) (0 PREP) (1* ("?")) ;
SELECT Excl OR IJ IF (-1 BOS) (0C Itg OR Excl OR IJ OR Rel OR Conjsub OR Conjadv) (1* ("!")) ;
SELECT Excl OR IJ IF (-2 BOS) (-1 PREP) (0C Itg OR Excl OR IJ OR Rel OR Conjsub OR Conjadv) (1* ("!")) ;
SELECT SUB:1 Excl OR IJ IF (-1 BOS) (0 PREP) (1* ("!")) ;
SELECT Excl OR IJ IF (-2 BOS) (-1 Conjco) (0C Itg OR Excl OR IJ OR Rel OR Conjsub OR Conjadv) (1* ("!")) ;
SELECT Excl OR IJ IF (-3 BOS) (-2 Conjco) (-1 PREP) (0C Itg OR Excl OR IJ OR Rel OR Conjsub OR Conjadv) (1* ("!")) ;
SELECT SUB:1 Excl OR IJ IF (-2 BOS) (-1 Conjco) (0 PREP) (1* ("!")) ;
SELECT Itg IF (-1C Demandar LINK NOT 0 VBpp) (0C Itg OR Excl OR IJ OR Rel OR ("coma") OR ("com") OR ("quant") OR ("qüantum")) ;	# je me demande qui
SELECT Itg IF (-2C Demandar LINK NOT 0 VBpp) (-1 PREP) (0C Itg OR Excl OR IJ OR Rel OR ("quant") OR ("qüantum")) ;	# je demande avec qui
SELECT SUB:1 Itg IF (-1C Demandar LINK NOT 0 VBpp) (0 PREP) ;	# je demande avec qui
SELECT Itg IF (-2C Demandar LINK NOT 0 VBpp) (-1 AV) (0C Itg OR Excl OR IJ OR Rel OR ("coma") OR ("com") OR ("quant") OR ("qüantum")) ;	# je ne demande pas qui
SELECT Itg IF (-3C Demandar LINK NOT 0 VBpp) (-2 AV) (-1 PREP) (0C Itg OR Excl OR IJ OR Rel OR ("quant") OR ("qüantum")) ;	# je ne demande pas avec qui
SELECT SUB:1 Itg IF (-2C Demandar LINK NOT 0 VBpp) (-1 AV) (0 PREP) ;	# je ne demande pas avec qui
REMOVE AV + Excl ;
REMOVE AV + Itg ;

SELECT AV IF (0 ("fòrça")) (1 ("present")) ;	# son fòrça presents
SELECT AV IF (-1C Ser OR ("<son>"i)) (0 ("fòrça")) (1C AJ) ;	# son fòrça presents
SELECT AJ IF (-1C Ser) (0 ("present")) ;
SELECT AJ IF (-2C Ser) (-1 AV) (0 ("present")) ;

REMOVE N IF (NOT -1 DET + Masc) (0 ("nos")) (1 Vconj OR VBinf OR VBger OR unknown) ;

#REMOVE Tn IF (NOT -1 Tn) (0 ("vos")) (1 Vconj) ;
REMOVE Tn IF (NOT -1 PREP) (0 ("nos")) (1C V) (NOT 1 V + P1 + Pl) ;
REMOVE Tn IF (NOT -1 PREP) (0 ("vos")) (1C V) (NOT 1 V + P2 + Pl) ;
REMOVE Tn IF (NOT -1 PREP) (0 ("nos")) (1 AV OR Enon OR Pro) (2C V) (NOT 2 V + P1 + Pl) ;
REMOVE Tn IF (NOT -1 PREP) (0 ("vos")) (1 AV OR Enon OR Pro) (2C V) (NOT 2 V + P2 + Pl) ;
REMOVE Tn IF (NOT -1 PREP) (0 ("nos")) (1 AV OR Enon OR Pro) (2 AV OR Enon OR Pro) (3C V) (NOT 3 V + P1 + Pl) ;
REMOVE Tn IF (NOT -1 PREP) (0 ("vos")) (1 AV OR Enon OR Pro) (2 AV OR Enon OR Pro) (3C V) (NOT 3 V + P2 + Pl) ;

# voler e volar (p.ex. vòli)
SELECT Voler IF (0 Voler) (0 Volar) (1/* VBinf) ;
SELECT Voler IF (0 Voler) (0 Volar) (1 VBinf) ;
SELECT Voler IF (0 Voler) (0 Volar) (1 AV) (2 VBinf) ;
SELECT Voler IF (0 Voler) (0 Volar) (1 AV) (2 AV) (3 VBinf) ;
SELECT Voler IF (0 Voler) (0 Volar) (-1 (prn pro)) ;
SELECT Volar IF (0 Voler) (0 Volar) (1 ("a") OR ("cap a") OR ("al dessús de") OR ("au dessús de")) ;
SELECT Volar IF (0 Voler) (0 Volar) (1 AV) (2 ("a") OR ("cap a") OR ("al dessús de") OR ("au dessús de")) ;
SELECT Volar IF (0 Voler) (0 Volar) (1 AV) (2 AV) (3 ("a") OR ("cap a") OR ("al dessús de") OR ("au dessús de")) ;
SELECT Volar IF (0 Voler) (0 Volar) (1 De) (2 Top OR unknownMajIni) ;
SELECT Volar IF (0 Voler) (0 Volar) (1 AV) (2 De) (3 Top OR unknownMajIni) ;
SELECT Volar IF (0 Voler) (0 Volar) (1 AV) (2 AV) (3 De) (4 Top OR unknownMajIni) ;
SELECT Voler IF (0 Voler) (0 Volar) (1 De) (2 N_AJ OR unknown) ; 			# partitiu lengadocian
SELECT Voler IF (0 Voler) (0 Volar) (1 De) (2 AV) (3 N_AJ OR unknown) ; 		# partitiu lengadocian
SELECT Voler IF (0 Voler) (0 Volar) (1 De) (2 AV) (3 AV) (4 N_AJ OR unknown) ; 		# partitiu lengadocian
SELECT Voler IF (0 Voler) (0 Volar) (1 N_AJ OR NP OR unknown) ; 		# pas de partitiu en gascon
SELECT Voler IF (0 Voler) (0 Volar) (1 AV) (2 N_AJ OR NP OR unknown) ; 		# pas de partitiu en gascon
SELECT Voler IF (0 Voler) (0 Volar) (1 AV) (2 AV) (3 N_AJ OR NP OR unknown) ; 	# pas de partitiu en gascon
SELECT Voler IF (0 Voler) (0 Volar) (1 ("que")) ;
SELECT Voler IF (0 Voler) (0 Volar) (1 AV) (2 ("que")) ;
SELECT Voler IF (0 Voler) (0 Volar) (1 AV) (2 AV) (3 ("que")) ;
SELECT Voler IF (0 Voler) (0 Volar) (-1 ("què")) (NOT -2 ("en"));

SELECT Voler IF (0 Voler) (0 ("vòl")) (1/* VBinf) (NOT -1/* DET + MascSg) ;
SELECT Voler IF (0 Voler) (0 ("vòl")) (1 VBinf) (NOT -1/* DET + MascSg) ;
SELECT Voler IF (0 Voler) (0 ("vòl")) (1 VBinf) (-1/* ("qual")) ;
SELECT Voler IF (0 Voler) (0 ("vòl")) (1 AV) (2 VBinf) ;
SELECT Voler IF (0 Voler) (0 ("vòl")) (1 AV) (2 AV) (3 VBinf) ;

# sèire e saber/sàber (p. ex. "sèi")
SELECT Saber IF (0 Seire) (0 Saber) (1C Itg) ;
SELECT Saber IF (0 Seire) (0 Saber) (1 AV) (2C Itg) ;
SELECT Saber IF (0 Seire) (0 Saber) (1 AV) (2 AV) (3C Itg) ;
SELECT Saber IF (0 Seire) (0 Saber) (1C Que OR Se OR ("çò")) ;
SELECT Saber IF (0 Seire) (0 Saber) (1 AV) (2C Que OR Se OR ("çò")) ;
SELECT Saber IF (0 Seire) (0 Saber) (1 AV) (2 AV) (3C Que OR Se OR ("çò")) ;
SELECT Saber IF (0 Seire) (0 Saber) ;	# patch

# venir/vier e vengar (p. ex. "venga")
REMOVE Vengar + VBinf IF (NOT -1 Pro + Ref) (0 Venir) (0 Vengar + VBinf) ;	# patch
REMOVE Vengar + VBger IF (NOT -1 Pro + Ref) (0 Venir) (0 Vengar + VBger) ;	# patch
REMOVE Vengar + P3 IF (NOT -1 Pro + Ref) (0 Venir) (0 Vengar + P3) ;	# patch
REMOVE Vengar + P1 + Sg IF (NOT -1 Pro + P1 + Sg) (0 Venir) (0 Vengar + P1 + Sg) (NOT 0 Vengar + VBimp) ;	# patch
REMOVE Vengar + P1 + Pl IF (NOT -1 Pro + P1 + Pl) (0 Venir) (0 Vengar + P1 + Pl) (NOT 0 Vengar + VBimp) ;	# patch
REMOVE Vengar + P2 + Sg IF (NOT -1 Pro + P2 + Sg) (0 Venir) (0 Vengar + P2 + Sg) (NOT 0 Vengar + VBimp) ;	# patch
REMOVE Vengar + P2 + Pl IF (NOT -1 Pro + P2 + Pl) (0 Venir) (0 Vengar + P2 + Pl) (NOT 0 Vengar + VBimp) ;	# patch
REMOVE ("vier") IF (0 ("venir")) ;

# venir/véner
REMOVE Venir IF (0 Vener) (1 ("car")) ;
REMOVE Venir IF (0 Vener) (1 ("bon")) (2 ("mercat") OR ("pretz")) ;
REMOVE Venir IF (0 Vener) (1 AV) (2 ("car")) ;
REMOVE Venir IF (0 Vener) (1 AV) (2 ("bon")) (3 ("mercat") OR ("pretz")) ;
REMOVE Venir IF (0 Vener) (1 AV) (2 AV) (3 ("car")) ;
REMOVE Venir IF (0 Vener) (1 AV) (2 AV) (3 ("bon")) (4 ("mercat") OR ("pretz")) ;
REMOVE Venir IF (0 Vener) (1C N LINK NOT 0 Jorns) ;
REMOVE Venir IF (0 Vener) (1 AV) (2C N LINK NOT 0 Jorns) ;

# paréisser/paréisher e parir (p. ex. "pareish")
REMOVE Parir IF (0 Pareisser) ;
REMOVE Parer IF (0 Pareisser) ;

# caler e calar (p.ex. "calè")
REMOVE Calar IF (0 Caler) ;

# poder e podar (p.ex. "podetz")
REMOVE Podar IF (0 Poder) ;

# gausir e gausar
REMOVE Gausir IF (0 Gausar) ;

# anar e valer (p.ex. "vau")
REMOVE ("valer") IF (0 ("anar")) (1 VBinf) ;

# estarir e estar (p.ex. "estar")
REMOVE ("estarir") IF (0 ("estar")) ;

# ròder e róder (p.ex. "rodut")
REMOVE ("róder") IF (0 ("ròder")) ;

# èstre e seriar (p.ex. seriam)
REMOVE ("seriar") IF (0 ("èstre") OR ("èsser") OR ("estar")) ;

# estar e estavanir
REMOVE Estavanir IF (0 Estar) ;

# estar e serar
REMOVE Serar IF (0 Estar) ;

# estar e estadir
REMOVE ("estadir") IF (0 Estar) ;

# vier et véner
REMOVE ("vier") IF (0 ("véner")) ;

# passir e passar
REMOVE ("passir") IF (0 ("passar")) ;

# veirar e veire
REMOVE ("veirar") IF (0 ("veire")) ;

# escadir e escàder
REMOVE ("escadir") IF (0 ("escàder")) ;

# apartenir, apartar, apartir
REMOVE ("apartar") IF (0 ("apartenir") OR ("aparténer")) ;
REMOVE ("apartir") IF (0 ("apartenir") OR ("aparténer")) ;

# acabir e acabar
REMOVE ("acabir") IF (0 ("acabar")) ;

# genar e generar
REMOVE ("genar") IF (0 ("generar")) ;

# aparir e aparéisher
REMOVE ("aparir") IF (0 ("aparéisher") OR ("aparéisser")) ;

# véder e vederar
REMOVE ("vederar") IF (0 ("véder")) ;

# clavir e clavar
REMOVE ("clavir") IF (0 ("clavar")) ;

# prevedir e prevéder
REMOVE ("prevedir") IF (0 ("prevéder")) ;

# aparir e apariar
REMOVE ("aparir") IF (0 ("apariar")) ;

# horar e estar
REMOVE ("horar") IF (0 ("estar") OR ("horat")) ;

# aurir e aver
REMOVE ("aurir") IF (0 ("aver")) ;

# devénguer e dever
REMOVE ("devénguer") IF (0 ("<dever>"i)) ;

# solar e soler
REMOVE ("solar") IF (0 ("soler")) ;

# poscar e poder
REMOVE ("poscar") IF (0 ("poder")) ;

# ajar e aver
REMOVE ("ajar") IF (0 ("aver")) ;

# escotir e escotar
REMOVE ("escotir") IF (0 ("escotar")) ;

# corrir e córrer
REMOVE ("corrir") IF (0 ("córrer")) ;

# venar e venir
REMOVE ("venar") IF (0 ("venir") OR ("véner") OR ("viéner")) ;

# aurir e aver
REMOVE ("aurir") IF (0 ("aver")) ;

# véner e venir, gascon
REMOVE ("véner") IF (0 ("venir")) (1 ("de")) (2 VBinf OR Pro) ;
REMOVE ("véner") IF (0 ("venir")) (1 ("de")) (2 Pro) (3 VBinf) ;
REMOVE ("véner") IF (0 ("venir")) (1 AV) (2 ("de")) (3 VBinf OR Pro) ;
REMOVE ("véner") IF (0 ("venir")) (1 AV) (2 ("de")) (3 Pro) (4 VBinf) ;
REMOVE ("véner") IF (0 ("venir")) (0 VBimp) ;
REMOVE ("véner") IF (0 ("venir")) (-1 ("que")) (-2 N) ;
REMOVE ("véner") IF (0 ("<venent>")) (-1 N + MascSg) ;
REMOVE ("venir") IF (0 ("viéner") OR ("vénguer")) ;
REMOVE ("venir") IF (0 ("véner")) (-1 Pro) (NOT -1 ("i") OR ("en")) ;

# estar vblex ou vbser
REMOVE Verb IF (0 Ser) (0 ("estar")) ;

# comprar e compréner/comprene (p.ex. "compren")
REMOVE P3 + Sg IF (-3 N OR NP) (-2 Conjco) (-1 N OR NP) (0 V + P3 + Sg) (0 V + P3 + Pl) ;	# Marc e Aitana compren
REMOVE P3 + Sg IF (-4 N) (-3 Conjco) (-2 DET + &&AcordSN) (-1 N + &&AcordSN) (0 V + P3 + Sg) (0 V + P3 + Pl) ;
REMOVE P3 + Sg IF (-5 Ser + Pl) (-4 N OR NP) (-3 Conjco) (-2 N OR NP) (-1 Que) (0 V + P3 + Sg) (0 V + P3 + Pl) ;	# Son Marc e Aitana que compren
REMOVE P3 + Sg IF (-6 Ser + Pl) (-5 N) (-4 Conjco) (-3 DET + &&AcordSN) (-2 N + &&AcordSN) (-1 Que) (0 V + P3 + Sg) (0 V + P3 + Pl) ;
REMOVE P3 + Pl IF (-1 N_AJ + Sg OR NP + Sg) (0 V + P3 + Sg) (0 V + P3 + Pl) ;
REMOVE P3 + Sg IF (-1 N_AJ + Pl OR NP + Pl) (0 V + P3 + Sg) (0 V + P3 + Pl) ;

REMOVE P3 + Sg IF (-4 N OR NP) (-3 Conjco) (-2 N OR NP) (-1 Pro) (0 V + P3 + Sg) (0 V + P3 + Pl) ;	# Marc e Aitana se compren
REMOVE P3 + Sg IF (-5 N) (-4 Conjco) (-3 DET + &&AcordSN) (-2 N + &&AcordSN) (-1 Pro) (0 V + P3 + Sg) (0 V + P3 + Pl) ;
REMOVE P3 + Sg IF (-6 Ser + Pl) (-5 N OR NP) (-4 Conjco) (-3 N OR NP) (-2 Que) (-1 Pro) (0 V + P3 + Sg) (0 V + P3 + Pl) ;	# Son Marc e Aitana que se compren
REMOVE P3 + Sg IF (-7 Ser + Pl) (-6 N) (-5 Conjco) (-4 DET + &&AcordSN) (-3 N + &&AcordSN) (-2 Que) (-1 Pro) (0 V + P3 + Sg) (0 V + P3 + Pl) ;
REMOVE P3 + Pl IF (-2 N_AJ + Sg OR NP + Sg) (-1 Pro) (0 V + P3 + Sg) (0 V + P3 + Pl) ;
REMOVE P3 + Sg IF (-2 N_AJ + Pl OR NP + Pl) (-1 Pro) (0 V + P3 + Sg) (0 V + P3 + Pl) ;

# vier e viéner (p.ex. "vien")
SELECT ("viéner") IF (0 ("vier")) ;

SELECT N IF (0 ("<Majoral>")) ;
SELECT N IF (0 ("majoral")) (1 Ant OR Cog OR unknownMajIni) ;
SELECT N IF (0 ("majoral")) (1 De) (2 ("felibritge")) ;
SELECT N IF (-1 ("felibre")) (0 ("majoral")) ;

REMOVE NP IF (0 ("Èra")) (-1 BOS OR Lpar) ;

SELECT N IF (-1 DET + &&AcordSN) (0 ("sosten") + &&AcordSN) (1 A) (2 DET) ;	# lor sosten a la lenga

REMOVE V IF (0 (<"granda">)) ;

SELECT N IF (0 ("<lei>"i)) (1 ("[1-2][0-9][0-9][0-9]"r)) ;		# lei 1901

SELECT ("retirada") IF (-1 DETpos) ;
SELECT ("retirada") IF (-2 ("sistèma")) (-1 De) ;
SELECT ("retirada") IF (-2 ("ostal") OR ("ostau")) (-1 De) ;
REMOVE ("retirat") + N + Fem ;

SELECT ("benvenguda") OR AJ IF (0 ("benvenguda") + Sg) ;

SELECT NUM IF (-1 ("en")) (0 ("dos")) ;
SELECT PREP IF (0 ("en")) (1 ("dos")) ;

SELECT NUM IF (0 ("cent")) (1 ("mil")) ;
SELECT NUM IF (0 ("cent")) (1 N_AJ + Pl) ;
SELECT NUM IF (-1 NUM) (0 ("mil")) ;
SELECT NUM IF (0 ("mil")) (1 N_AJ + Pl) ;

SELECT V IF (0 ("tornar")) (1C VBinf) ;

SELECT N OR NP IF (-1 De OR En OR DET + MascSg) (0 ("òc")) ;

SELECT AJ IF (0 ("marrit")) (1 ("flac")) ;	# valoracions Jornalet
SELECT AJ IF (-1 ("marrit")) (0 ("flac")) ;	# valoracions Jornalet
SELECT PREAV IF (0 ("plan")) (1 ("bon")) ;	# valoracions Jornalet
SELECT AJ IF (0 ("bon")) (1 ("fabulós")) ;	# valoracions Jornalet

SELECT AV IF (-1 BOS OR CM) (0 ("solide")) (1 CM) ;	# guess

SELECT ("mau") + N IF (-2 Pro + Pers) (-2/* ("en")) (-1 ("saber") OR ("sàber") OR ("assaber") OR ("assàber")) (0 ("<mau>"i)) ;
SELECT ("mau") + N IF (-3 Pro + Pers) (-3/* ("en")) (-2 ("saber") OR ("sàber") OR ("assaber") OR ("assàber")) (-1 AV) (0 ("<mau>"i)) ;
SELECT ("mau") + N IF (-4 Pro + Pers) (-4/* ("en")) (-3 ("saber") OR ("sàber") OR ("assaber") OR ("assàber")) (-2 AV) (-1 AV) (0 ("<mau>"i)) ;

REMOVE AV IF (0 ("<a man>"i)) (1 AJ_PP + FemSg) ;	# a man nusa
REMOVE AV IF (0 ("<a man>"i)) (-1 ("<man>"i)) ;	# de man a man
SELECT AV IF (0 ("<a man>"i)) ;

#En es pas un pronom s'es abans un gerondiu (amb possibilitat de pronoms entre los dos)
REMOVE ("en") IF (0 ("<ne>"i)) ;
SELECT Ne_pron IF (-1C PREP) (1 VBinf) ;
SELECT Ne_pron IF (-1C PREP) (1 Pro) (2 VBinf) ;
SELECT Ne_pron IF (-2C PREP) (-1 Pro) (1 VBinf) ;	# de se n'anar
SELECT VBinf IF (-2C PREP LINK NOT 0 ("en")) (-1 Ne_pron) (0 VBinf) ;
SELECT VBinf IF (-3C PREP LINK NOT 0 ("en")) (-2 Ne_pron) (-1 Pro) (0 VBinf) ;
SELECT VBinf IF (-3C PREP LINK NOT 0 ("en")) (-2 Pro) (-1 Ne_pron) (0 VBinf) ;	# de se n'anar
SELECT Ne_pron IF (-1 ("en")) (1 VBger) ;
SELECT Ne_pron IF (-1 ("en")) (1 Pro) (2 VBger) ;
SELECT Ne_pron IF (-2 ("en")) (-1 Pro) (2 VBger) ;
SELECT PREP IF (0 ("en")) (1 Ne_pron) (2 VBger) ;
SELECT PREP IF (0 ("en")) (1 Ne_pron) (2 Pro) (3 VBger) ;
SELECT PREP IF (0 ("en")) (1 Pro) (2 Ne_pron) (3 VBger) ;
SELECT Ne_conj IF (1 N) (2 Ne_conj) (3 N) ;
SELECT Ne_conj IF (1 AJ) (2 Ne_conj) (3 AJ) ;
SELECT Ne_conj IF (1 AV) (2 Ne_conj) (3 AV) ;
SELECT Ne_conj IF (1 V) (2 Ne_conj) (3 V) ;
SELECT Ne_conj IF (-2 Ne_conj) (-1 N) (0 Ne_conj) (1 N) ;
SELECT Ne_conj IF (-2 Ne_conj) (-1 AJ) (0 Ne_conj) (1 AJ) ;
SELECT Ne_conj IF (-2 Ne_conj) (-1 AV) (0 Ne_conj) (1 AV) ;
SELECT Ne_conj IF (-2 Ne_conj) (-1 V) (0 Ne_conj) (1 V) ;
SELECT Ne_conj IF (1 N) (2 CM) (3 Ne_conj) (4 N) ;
SELECT Ne_conj IF (1 AJ) (2 CM) (3 Ne_conj) (4 AJ) ;
SELECT Ne_conj IF (1 AV) (2 CM) (3 Ne_conj) (4 AV) ;
SELECT Ne_conj IF (1 V) (2 CM) (3 Ne_conj) (4 V) ;
SELECT Ne_conj IF (-3 Ne_conj) (-2 N) (-1 CM) (0 Ne_conj) (1 N) ;
SELECT Ne_conj IF (-3 Ne_conj) (-2 AJ) (-1 CM) (0 Ne_conj) (1 AJ) ;
SELECT Ne_conj IF (-3 Ne_conj) (-2 AV) (-1 CM) (0 Ne_conj) (1 AV) ;
SELECT Ne_conj IF (-3 Ne_conj) (-2 V) (-1 CM) (0 Ne_conj) (1 V) ;
SELECT Ne_pron IF (1C V + Pers) (2C DETdef OR NUM) (NOT 1* Ne_conj) (NOT -1* Ne_conj) ;		# ne reclamavan la destruccion

LIST NAverUnSadol = "aver un sadol" "aver un confle" "aver un sadoth" "auer un sadoth" "estar hart" "estar harta" "estar harts" "estar hartas" "aver hartèra" "auer hartèra" "aver ua hartèra" "auer ua hartèra" "aver mon confle" "aver ton confle" "aver son confle" "aver nòstre confle" "aver vòstre confle" "aver lor confle" ;
SELECT Pro IF (0 En) (1 NAverUnSadol) ;
SELECT Pro IF (0 En) (1 Haver) (2 NAverUnSadol) ;
SELECT Pro IF (0 En) (1 Haver) (2 AV) (3 NAverUnSadol) ;
SELECT Pro IF (0 En) (1 Haver) (2 AV) (3 AV) (4 NAverUnSadol) ;
SELECT PREP IF (NOT -1 PREP) (0 En) (1 VBger) ;
SELECT PREP IF (NOT -1 PREP) (0 En) (1C Pro) (2 VBger) ;
SELECT PREP IF (0 En) (1 Pro) (2 Pro) (3 VBger) ;
SELECT N IF (-1 En) (0 ("sovenir")) (1 De) ;
SELECT VBger IF (NOT -2 PREP) (-1 En) (0 VBger) ;
SELECT VBger IF (-2 En) (-1C Pro) (0 VBger) ;
SELECT VBger IF (-3 En) (-2 Pro) (-1 Pro) (0 VBger) ;
SELECT Pro IF (-1C PREP) (1 Pro) (2 VBinf OR VBger) ;	# de nos en rendre
SELECT Pro IF (-2C PREP) (-1 Pro) (1 VBinf OR VBger) ;

#Una conjonccion o un pronom relatiu se podon pas trobar en debuta de frasa
#REMOVE Conjco IF (-1 BOS OR SENT);		# en realitat, òc
REMOVE Conjco IF (1 EOS);
REMOVE Conjco IF (-1C Conjco) (0 Conjco) ;		# e o nos ensenhèt
SELECT Conjco IF (-1 BOS OR SENT) (0 ("<E>")) (NOT 1 CM) (NOT 1* ("?")) ;
SELECT Conjco IF (-1 BOS OR SENT) (0 ("<E>")) (NOT 1 CM OR Pro OR V + Pers) ;
REMOVE Conjsub IF (-1 BOS OR SENT);
REMOVE Rel IF (-1 BOS OR SENT);
REMOVE Rel IF (NOT -1 CM OR ("»") OR N OR NP OR AJ OR VBpp OR PRON OR DET OR Artcontrsg OR Artcontrpl OR NUM);
REMOVE Rel IF (NOT -2 N OR AJ OR VBpp OR PRON OR DET OR Artcontrsg OR Artcontrpl) (-1 CM OR ("»")) ;
REMOVE Rel IF (-1C DET) (0 ("lo que") OR ("lo qui")) ;
SELECT Rel IF (-1C DET OR Artcontrsg OR Artcontrpl) ;

SELECT Conjco IF (-1C V LINK NOT 0 VBpp) (0 ("<o nos>"i) OR ("<o vos>"i)) ;
SELECT Conjco IF (-2C V LINK NOT 0 VBpp) (-1 AV) (0 ("<o nos>"i) OR ("<o vos>"i)) ;
SELECT Conjco IF (-2 VBaux) (-1 VBpp) (0 ("<o nos>"i) OR ("<o vos>"i)) ;
SELECT Conjco IF (-3 VBaux) (-2 AV) (-1 VBpp) (0 ("<o nos>"i) OR ("<o vos>"i)) ;
SELECT Conjco IF (-3 VBaux) (-2 VBpp) (-1 AV) (0 ("<o nos>"i) OR ("<o vos>"i)) ;
SELECT Conjco IF (-4 VBaux) (-3 AV) (-2 VBpp) (-1 AV) (0 ("<o nos>"i) OR ("<o vos>"i)) ;
SELECT Conjco IF (-4 VBaux) (-3 AV) (-2 AV) (-1 VBpp) (0 ("<o nos>"i) OR ("<o vos>"i)) ;
REMOVE Conjco IF (0 ("<o nos>"i) OR ("<o vos>"i)) ;

#Un imperatiu seguis pas una conjonccion, un relatiu o un pronom personal
REMOVE VBimp IF (-1C Enon OR Conjsub OR Rel OR Pers LINK NOT 0 Donc OR ("e donc") OR ("e doncas") OR ("e dongas"));

REMOVE VBimp IF (NOT 1* ExclMark) ;

SELECT V + $$AcordTempsPers IF (0C V) (2C V) (0 V + $$AcordTempsPers) (1 ("e") OR O_cnjcoo OR ("ni")) (2 V + $$AcordTempsPers) ;
SELECT V + $$AcordTempsPers IF (0C V) (-2C V) (-2 V + $$AcordTempsPers) (-1 ("e") OR O_cnjcoo OR ("ni")) (0 V + $$AcordTempsPers) ;

#SELECT Conjco IF (-1* V + $$AcordTempsPers) (0 ("o")) (1 V + $$AcordTempsPers) ;
#SELECT Conjco IF (-1* V + $$AcordTempsPers) (0 ("o")) (1 Pro) (2 V + $$AcordTempsPers) ;

REMOVE VBimp IF (0 P3) ;	# guess

SELECT N IF (-1 ("<[a-zàáèéíòóú].*>"r)) (0 ("<Estat>") OR ("<Estats>")) ;	# "Estat" (con mayúscula) va precedido de una palabra con minúscula inicial
SELECT AJ IF (-1C N) (0 Clau) ;
SELECT Fem IF (NOT -1/* Masc_strict) (0 Clau + Masc) (NOT 1 Masc_strict) ;
SELECT Masc_strict IF (NOT -1/* Fem_strict) (0 ("amazigh") + Masc) (NOT 1 Fem_strict) ;
SELECT Fem_strict IF (NOT -1/* Masc_strict) (0 ("amazigh") + Fem) (NOT 1 Masc_strict) ;
SELECT N IF (0 ("radio")) (0 (META:/-/r)) (1 ("television")) ;
SELECT PREP IF (0 ("jos")) (0 (META:/-/r)) ;
SELECT N IF (-1C N) (-1 (META:/-/r)) ;
SELECT AJ IF (0 (META:/-/r)) (1 N) (0 ("mièg") OR ("miei")) ;	# mièg-camin, mièg-temps, mièg-mandat (francisme)
SELECT N IF (0 (META:/-/r)) (1C N) ;

#Un nom pot pas seguir qu'un vèrbe, un adjectiu, un determinant, un numeral, una prepausicion o un pronom (levat los personals)
#(en titolars periodístics, però, es comença sovint per un nom)
# non : Patxi Zabaleta, actualament cap del partit
# non : i avè tà la damisèla catalògues, prospectús e municions
REMOVE N IF (NOT -1 BOS OR CM OR Conjco OR Donc OR V OR AJ OR AV OR DET OR NUM OR PREP OR PRON - PRONPers) (NOT -1/* ("de")) (NOT -2 CM) ;
REMOVE N IF (NOT -1 BOS OR CM OR Conjco OR Donc OR V OR AJ OR AV + Itg OR DET OR NUM OR PREP OR PRON - PRONPers) (NOT -1/* ("de")) (NOT -2 CM) (NOT -2 V LINK NOT 0 VBpp) ;
REMOVE N IF (-1/* ("lo que") OR ("lo qui")) ;
REMOVE N IF (-2 Conjco) (-1 Donc) (0 V + Pers) ;
REMOVE N IF (-2 N + &&AcordSN) (-1 AJ + &&AcordSN) (0 VBpp + &&AcordSN) ;	# lo ministre canadian encargat

REMOVE AJ IF (-1C Conjsub OR Conjadv OR Rel LINK NOT 0 Donc) ;
SELECT VBpp IF (-2C Aver + Pers) (-1 Donc) (0 VBpp + &&AcordSP) (NOT 1 AJ + &&AcordSP) ;	# a donc causit
REMOVE N IF (-2 Ser + &&AcordSP) (-1 Donc) (0 AJ_PP + &&AcordSP) (NOT 1 AJ + &&AcordSP) ;	# es donc plasent

#Un predeterminant es pas seguit que per un determinant
REMOVE PREDET IF (NOT 1 DET);
SELECT PREDET + &&AcordSN IF (0 ("qual que siá") + &&AcordSN OR ("qual que siá") + &&AcordSN) (1 DETdef + &&AcordSN) ;

#Los pronoms possessius son totjorn seguits per un nom, un adjectiu, un advèrb o un numeral
REMOVE DETpos IF (NOT 1 N OR AJ OR AV OR NUM OR NP OR unknown);
REMOVE DETpos IF (0 ("son")) (1C NUM) ;		# son doas causas

# L'enonciatiu es totjorn seguit d'un vèrb o d'un proclitic
REMOVE Enon IF (NOT 1 V OR Pro);
REMOVE SUB:1 Enon IF (NOT 1 V OR Pro);
SELECT V OR Pro IF (-1C Enon);	# que en manja

#mes de mai
SELECT SUB:1 Nm IF (0 PREP) (-1 ("mes")) (0 ("<de mai>")) ;
SELECT SUB:1 Nm IF (0 PREP) (-1 ("fèsta") OR ("hèsta")) (0 ("<de mai>")) ;
SELECT SUB:1 Nm IF (0 PREP) (-2 ("fèsta") OR ("hèsta")) (-1 AJ) (0 ("<de mai>")) ;
SELECT SUB:1 Nm IF (0 PREP) (-1 ("eleccion")) (0 ("<de mai>")) ;
SELECT SUB:1 Nm IF (0 PREP) (-2 ("eleccion")) (-1 AJ) (0 ("<de mai>")) ;
SELECT SUB:1 Nm IF (0 PREP) (-1 ("referendum") OR ("referéndum")) (0 ("<de mai>")) ;
SELECT SUB:1 Nm IF (0 PREP) (-2 ("referendum") OR ("referéndum")) (-1 AJ) (0 ("<de mai>")) ;
SELECT SUB:1 Nm IF (0 PREP) (-1 Nummois) (0 ("<de mai>")) ;
SELECT SUB:1 Nm IF (0 ("<de mai>"i)) (1 An2 OR An3 OR An4) ;
SELECT SUB:1 Nm IF (0 ("<en mai>"i)) (1 An2 OR An3 OR An4) ;
SELECT SUB:1 AV IF (0 ("<de mai>"i)) (1 De) (2 NUM) (3 N_AJ + Pl) ;
SELECT SUB:1 Nm IF (0 ("<de mai>"i)) (1 De) (2 An4) ;	# de mai de 1968 ; de mai de cinc infants
SELECT SUB:1 Nm IF (0 ("<de mai>"i)) (1 De) (2 An2 OR An3) (NOT 3 ("<[0-9]{3}>"r)) ;	# de mai de 700 000
SELECT SUB:1 AV IF (0 ("<de mai>"i)) (1 De) ;
SELECT SUB:1 AV IF (0 ("<en mai>"i)) (1 De) (2 NUM) (3 N_AJ + Pl) ;
SELECT SUB:1 Nm IF (0 ("<en mai>"i)) (1 De) (2 An4) ;	# de mai de 1968 ; de mai de cinc infants
SELECT SUB:1 Nm IF (0 ("<en mai>"i)) (1 De) (2 An2 OR An3) (NOT 3 ("<[0-9]{3}>"r)) ;	# de mai de 700 000
SELECT ("en mai de") IF (0 ("<en mai de>"i)) (1 NUM) (2 N_AJ + Pl) ;
SELECT SUB:1 Nm IF (0 ("<en mai de>"i)) (1 An4) ;	# en mai de 1968 ; en mai de cinc infants
SELECT SUB:1 Nm IF (0 ("<en mai de>"i)) (1 An2 OR An3) (NOT 2 ("<[0-9]{3}>"r)) ;	# en mai de 700 000

#Mes de mai
LIST MesAmbigu = "<mai>"i "<junh>"i ;
SELECT N IF (0 MesAmbigu) (-1 ("<de>"i)) (-2 ("<mes>"i)) ; # mes de mai
SELECT N IF (0 MesAmbigu) (-1 ("<de>"i)) (-2 NUM) (-3 ("lo")) ; # lo 12 de mai
SELECT N IF (0 MesAmbigu) (1 ("<de>"i)) (2 ("<[1-2][0-9][0-9][0-9]>"r)) ; # mai de 2022
SELECT N IF (0 MesAmbigu) (1 ("<[1-2][0-9][0-9][0-9]>"r)) ; # mai 2022
SELECT N IF (0 MesAmbigu) (-1 ("<de>"i)) (-2 ("<e>"i) OR ("<o>"i)) (-3 Nommois) (-4 De) ; # d'abril o de mai
SELECT N IF (0 MesAmbigu) (-1 ("<de>"i)) (1 ("<e>"i) OR ("<o>"i)) (2 De) (3 Nommois) ; # de mai o de junh
SELECT N IF (0 MesAmbigu) (-1 ("<de>"i)) (1 ("<a>"i)) (2 Nommois) ; # de mai a junh
SELECT N IF (-3 ("<de>"i) OR ("<d'>"i) OR ("<d’>"i)) (-2 Nommois) (-1 ("<a>"i)) (0 MesAmbigu) ; # d'abril a mai
SELECT N IF (0 MesAmbigu) (-1 ("<entre>"i)) (1 ("<e>"i)) (2 Nommois) ; # entre mai e junh
SELECT N IF (-3 ("<entre>"i)) (-2 Nommois) (-1 ("<e>"i)) (0 MesAmbigu) ; # entre abril a mai
SELECT N IF (0 MesAmbigu) (1 ("<e>"i) OR ("<o>"i)) (2 Nommois) ; # mai e junh
SELECT N IF (-2 Nommois) (-1 ("<e>"i) OR ("<o>"i)) (0 MesAmbigu) ; # abril a mai
REMOVE PREP IF (0 ("de mai")) ;
REMOVE PREP IF (0 ("en mai")) ;
REMOVE ("en") IF (0 ("en mai de")) ;

SELECT N IF (0 ("<mes>"i)) (1 De) (2 Nommois) ;
SELECT N IF (0 ("<president>"i)) (1 De) ;
SELECT N IF (-1/* DET + MascSg) (0 ("<president>"i)) ;
REMOVE N IF (0 ("<arriban>"i)) (1 ("<a>"i)) ;
REMOVE N IF (-1C N_AJ OR NP) (0 ("<arriban>"i)) ;
REMOVE N IF (-1 N_AJ + Pl) (0 ("<arriban>"i)) ;

SELECT AV IF (0 ("mas")) (1 AJ OR AV) (2 ("e") OR ("o")) (3 ("mas")) (4 AJ OR AV) ;
SELECT AV IF (0 ("mes")) (1 AJ OR AV) (2 ("e") OR ("o")) (3 ("mes")) (4 AJ OR AV) ;
SELECT AV IF (0 ("mès")) (1 AJ OR AV) (2 ("e") OR ("o")) (3 ("mès")) (4 AJ OR AV) ;
SELECT AV IF (0 ("mai")) (1 AJ OR AV) (2 ("e") OR ("o")) (3 ("mai")) (4 AJ OR AV) ;
SELECT AV IF (0 ("mai")) (1 AJ OR AV) (2 ("<e mai>"i)) (3 AJ OR AV) ;
SELECT AV IF (-3 ("mas")) (-2 AJ OR AV) (-1 ("e") OR ("o")) (0 ("mas")) (1 AJ OR AV) ;
SELECT AV IF (-3 ("mes")) (-2 AJ OR AV) (-1 ("e") OR ("o")) (0 ("mes")) (1 AJ OR AV) ;
SELECT AV IF (-3 ("mès")) (-2 AJ OR AV) (-1 ("e") OR ("o")) (0 ("mès")) (1 AJ OR AV) ;
SELECT AV IF (-3 ("mai")) (-2 AJ OR AV) (-1 ("e") OR ("o")) (0 ("mai")) (1 AJ OR AV) ;
SELECT Conjco IF (-2 ("mai")) (-1 AJ OR AV) (0 ("<e mai>"i)) (1 AJ OR AV) ;
SELECT AV IF (-1 ("mas") OR ("mes") OR ("mès") OR ("mai")) (0 AV) (1 ("e") OR ("o")) (2 ("mas") OR ("mes") OR ("mès") OR ("mai")) (3C AV) ;
SELECT AJ + &&AcordSN IF (-1 ("mas") OR ("mes") OR ("mès") OR ("mai")) (0 AJ + &&AcordSN) (1 ("e") OR ("o")) (2 ("mas") OR ("mes") OR ("mès") OR ("mai")) (3C AJ) (3 AJ + &&AcordSN) ;
SELECT AV IF (-4 ("mas") OR ("mes") OR ("mès") OR ("mai")) (-3C AV) (-2 ("e") OR ("o")) (-1 ("mas") OR ("mes") OR ("mès") OR ("mai")) (0 AV) ;
SELECT AJ + &&AcordSN IF (-4 ("mas") OR ("mes") OR ("mès") OR ("mai")) (-3C AJ) (-3 AJ + &&AcordSN) (-2 ("e") OR ("o")) (-1 ("mas") OR ("mes") OR ("mès") OR ("mai")) (0 AJ + &&AcordSN) ;
SELECT AV IF (-1 ("mai")) (0 AV) (1 ("<e mai>"i)) (2C AV) ;
SELECT AJ + &&AcordSN IF (-1 ("mai")) (0 AJ) (1 ("<e mai>"i)) (2C AJ) (2 AJ + &&AcordSN) ;
SELECT AV IF (-3 ("mai")) (-2C AV) (-1 ("<e mai>"i)) (0 AV) ;
SELECT AJ + &&AcordSN IF (-3 ("mai")) (-2C AJ) (-2 AJ + &&AcordSN) (-1 ("<e mai>"i)) (0 AJ + &&AcordSN) ;
SELECT SUB:1 AV IF (-2 ("mai")) (-1 AJ OR AV) (0 ("<e mai>"i)) (1 AJ OR AV) ;
SELECT AV IF (0 ("mas")) (1 ("e")) (2 ("mas")) (3 AJ OR AV) ;
SELECT AV IF (0 ("mes")) (1 ("e")) (2 ("mes")) (3 AJ OR AV) ;
SELECT AV IF (0 ("mès")) (1 ("e")) (2 ("mès")) (3 AJ OR AV) ;
SELECT AV IF (0 ("mai")) (1 ("e")) (2 ("mai")) (3 AJ OR AV) ;
SELECT AV IF (0 ("mai")) (1 ("<e mai>"i)) (2 AJ OR AV) ;
SELECT AV IF (-2 ("mas")) (-1 ("e")) (0 ("mas")) (1 AJ OR AV) ;
SELECT AV IF (-2 ("mes")) (-1 ("e")) (0 ("mes")) (1 AJ OR AV) ;
SELECT AV IF (-2 ("mès")) (-1 ("e")) (0 ("mès")) (1 AJ OR AV) ;
SELECT AV IF (-2 ("mai")) (-1 ("e")) (0 ("mai")) (1 AJ OR AV) ;
SELECT Conjco IF (-1 ("mai")) (0 ("<e mai>"i)) (1 AJ OR AV) ;
SELECT SUB:1 AV IF (-1 ("mai")) (0 ("<e mai>"i)) (1 AJ OR AV) ;

SELECT N IF (-1/* DET + MascSg) (0 ("<plan de>"i) OR ("<plan d'>") OR ("<plan d’>"i)) ;
REMOVE N IF (NOT -1/* DET + MascSg OR BOS) (0 ("<plan de>"i) OR ("<plan d'>") OR ("<plan d’>"i)) ;
REMOVE DET IF (0 ("<plan de>"i) OR ("<plan d'>") OR ("<plan d’>"i)) (NOT 1 N_AJ + Pl) ;
SELECT DET IF (NOT -1 DET OR BOS) (0 ("<plan de>"i) OR ("<plan d'>") OR ("<plan d’>"i)) (1 N_AJ + Pl) ;

LIST DAutres = "<d'autres>"i "<d’autres>"i "<d'autras>"i "<d’autras>"i ;
SELECT DET IF (-1C EOS OR PREP OR Conjsub OR Rel OR ("<cap a>"i)) (0 DAutres + &&AcordSN) (1 N_AJ + &&AcordSN) ;
REMOVE DET OR PRON IF (-1 Artcontrpl) (0 DAutres OR ("autes")) ;
REMOVE DET OR PRON IF (-1 NUM) (0 DAutres OR ("autes")) ;
REMOVE DET OR PRON IF (-1/* DET) (0 DAutres OR ("autes")) ;
REMOVE DET OR PRON IF (-1/* NUM) (0 DAutres OR ("autes")) ;
REMOVE DET OR PRON IF (-1C ("<de>"i) OR ("<.* de>"ri)) (0 ("autes")) ;
REMOVE DET OR PRON IF (-1C ("<d'>"i) OR ("<.* d'>"ri)) (0 ("autes")) ;
REMOVE DET OR PRON IF (-1C ("<d’>"i) OR ("<.* d’>"ri)) (0 ("autes")) ;
SELECT PRON IF (-1C EOS OR PREP OR Conjsub OR Rel OR ("<cap a>"i)) (0 DAutres OR ("autes")) (1 V + P3 + Pl) ;
SELECT PRON IF (-1C EOS OR PREP OR Conjsub OR Rel OR ("<cap a>"i)) (0 DAutres OR ("autes")) (1 Que OR Qui) ;
SELECT DET IF (-1C EOS OR PREP OR Conjsub OR Rel OR ("<cap a>"i)) (0 ("autes") + &&AcordSN) (1 N_AJ + &&AcordSN) ;
REMOVE DET IF (0 DAutres) (NOT 1 N_AJ OR PREAV) ;
REMOVE DET IF (0 ("autes")) (NOT 1 N_AJ OR PREAV) ;
SELECT PREP IF (-1C DET) (0 DAutres) ;
SELECT PREP IF (-1 DET + Pl) (0 DAutres) ;
SELECT PREP IF (-1C N) (0 DAutres) ;
SELECT PREP IF (-2 N_AJ + &&AcordSN) (-1 N_AJ + &&AcordSN) (0 DAutres) ;
SELECT PREP IF (-1 ("diferent")) (0 DAutres) ;
SELECT PREP IF (-1 Venir OR ("arribar")) (0 DAutres) ;
SELECT PREP IF (-2 Venir OR ("arribar")) (-1 AV) (0 DAutres) ;
SELECT PREP IF (-3 Venir OR ("arribar")) (-2 AV) (-1 AV) (0 DAutres) ;
REMOVE PREP IF (0 DAutres) ;
SELECT SUB:1 AJ + &&AcordSN IF (0 DAutres) (1 N + &&AcordSN) ;

SELECT SUB:1 N IF (0 ("<de biais>"i)) (1 AJ + MascSg) ;
REMOVE SUB:1 N IF (0 ("<de biais>"i)) ;

SELECT N IF (-1 Aver) (0 ("<afar>"i)) ;
SELECT N IF (-2 Aver) (-1 AV) (0 ("<afar>"i)) ;
SELECT N IF (-1 Aver) (-2 AV) (-1 AV) (0 ("<afar>"i)) ;

#Una prepausicion es totjorn seguida d'un nom, pronom, adverb, numeral, infinitiu, determinant o adjectiu
REMOVE PREP IF (NOT 1 N OR PRON OR AV OR NUM OR NP OR VBinf OR DET OR PREDET OR AJ OR ("de") OR unknown) (NOT 0/* PREP + DET) (NOT 0/* N OR Rel OR Conjadv OR Conjsub) (NOT 0 ("en tot")) ;	# a luchat pendent d'annadas
REMOVE PREP IF (1 ("de")) (NOT 2 N OR AJ) ;	# a luchat pendent d'annadas

#Es pas un vèrbe se, dempuèi lo darrièr vèrbe conjugat, avèm pas agut de novèla proposicion
#REMOVE Vconj IF (NOT -1* intrprop BARRIER Vconj) ;
	# funciona pas: “Es lo primièr còp que vesi aquò”
REMOVE Vconj IF (-1C PREP) (NOT -1 ("<de mai>"i)) (NOT -1/* Rel OR Conjadv OR Conjsub OR Itg) ;
REMOVE Vconj IF (-2C PREP) (-1 DET + &&AcordSN) (0 N + &&AcordSN) ;	# per la planta.
SELECT VBinf IF (-1 ("de")) (0C V) ;
SELECT PREP IF (0 ("<de>"i) + PREP) (1C VBinf) ;
SELECT VBinf IF (-1 ("a") + PREP) (0C V) ;
SELECT PREP IF (0 ("<a>"i) + PREP) (1C VBinf) ;
SELECT VBger IF (-1 ("<en>"i) + PREP) (0C V) ;
SELECT PREP IF (0 ("en") + PREP) (1C VBger) ;
SELECT VBger IF (-1 ("en bèth") + PREP) (0C V) ;
SELECT VBger IF (-1 ("<en tot>"i) + PREP) (0C V OR N) ;
SELECT VBger IF (-2 ("<en>"i) + PREP) (-1 ("tot")) (0C V) ;
SELECT PREP IF (0 ("en") + PREP) (1 ("tot")) (2C VBger) ;
SELECT VBinf IF (-2 ("de")) (-1 Pro) (0C V) ;
SELECT PREP IF (0 ("<de>"i) + PREP) (1 Pro) (2C VBinf) ;
SELECT VBinf IF (-2 ("a") + PREP) (-1 Pro) (0C V) ;
SELECT PREP IF (0 ("<a>"i) + PREP) (1 Pro) (2C VBinf) ;
SELECT VBger IF (-2 ("en") + PREP) (-1 Pro) (0C V) ;
SELECT PREP IF (0 ("<en>"i) + PREP) (1 Pro) (2C VBger) ;
SELECT VBger IF (-2 ("en bèth") + PREP) (-1 Pro) (0C V) ;
SELECT VBger IF (-3 ("en") + PREP) (-2 ("tot")) (-1 Pro) (0C V) ;
SELECT PREP IF (0 ("<en>"i) + PREP) (1 ("tot")) (2 Pro) (3C VBger) ;
SELECT VBinf IF (-3 ("<de>"i)) (-1 Pro) (-1 Pro) (0C V) ;
SELECT PREP IF (0 ("de") + PREP) (1 Pro) (2 Pro) (3C VBinf) ;
SELECT VBinf IF (-3 ("a") + PREP) (-2 Pro) (-1 Pro) (0C V) ;
SELECT PREP IF (0 ("<a>"i) + PREP) (1 Pro) (2 Pro) (3C VBinf) ;
SELECT VBger IF (-3 ("en") + PREP) (-2 Pro) (-1 Pro) (0C V) ;
SELECT PREP IF (0 ("<en>"i) + PREP) (1 Pro) (2 Pro) (3C VBger) ;
SELECT VBger IF (-3 ("en bèth") + PREP) (-2 Pro) (-1 Pro) (0C V) ;
SELECT VBger IF (-4 ("en") + PREP) (-3 ("tot")) (-2 Pro) (-1 Pro) (0C V) ;
SELECT PREP IF (0 ("<en>"i) + PREP) (1 ("tot")) (2 Pro) (3 Pro) (4C VBger) ;
SELECT VBinf IF (-1 ("per") LINK NOT 0 Artcontrsg OR Artcontrpl) (0 V) ;
SELECT VBinf IF (-2 ("per")) (-1 Pro) (0 V) (NOT -1 DET + &&AcordSN LINK 1 N + &&AcordSN) ;
REMOVE VBger IF (0 VBinf) (NOT -1 SENT OR ("en") OR ("en bèth") OR ("en tot")) ;
REMOVE AV IF (0 ("en tot")) (1 VBger) ;
REMOVE AV IF (0 ("en tot")) (1 Pro) (2 VBger) ;
REMOVE AV IF (0 ("en tot")) (1 Pro) (2 Pro) (3 VBger) ;
SELECT AV IF (0 ("en tot")) ;

#Un determinant es pas plural se lo nom/adjectiu que seguis es singular (o masculin feminin...)
REMOVE motsdetpl IF (1C Ns OR AJs);
REMOVE motsdetsg IF (1C Npl OR AJpl);
REMOVE motsdetf IF (1C Nm OR AJm);
REMOVE motsdetm IF (1C Nf OR AJf);

# AN (+ partipici)

SELECT V IF (0 An + MascSg) (1 VBpp + MascSg) ;
  ## aqueste mes an fach
SELECT V IF (0 An + MascSg) (1 Pas) (2 VBpp + MascSg) ;
SELECT V IF (0 An + MascSg) (1C AV) (2 VBpp + MascSg) ;

# PREP

SELECT PREP IF (0 ("dempuèi")) (1 De) (2 N_AJ + Pl) ;	# dempuei d'ans
SELECT PREP IF (0 ("dempuòi")) (1 De) (2 N_AJ + Pl) ;
SELECT PREP IF (0 ("desempuèi")) (1 De) (2 N_AJ + Pl) ;
SELECT PREP IF (0 ("desempuòi")) (1 De) (2 N_AJ + Pl) ;
SELECT PREP IF (0 ("despuèi")) (1 De) (2 N_AJ + Pl) ;
SELECT PREP IF (0 ("despuòi")) (1 De) (2 N_AJ + Pl) ;
SELECT PREP IF (0 ("abans")) (1 De) (2 N_AJ + Pl) ;
SELECT PREP IF (0 ("davant")) (1 De) (2 N_AJ + Pl) ;
SELECT PREP IF (0 ("darrièr")) (1 De) (2 N_AJ + Pl) (NOT -1 DET) ;
SELECT PREP IF (0 ("detràs")) (1 De) (2 N_AJ + Pl) (NOT -1 DET) ;
SELECT PREP IF (0 ("tras")) (1 De) (2 N_AJ + Pl) (NOT -1 DET) ;
SELECT PREP IF (0 ("defòra")) (1 De) (2 N_AJ + Pl) (NOT -1 DET) ;

SELECT PREP IF (0 ("davant") OR ("darrièr") OR ("darrèr") OR ("dessús") OR ("desjós") OR ("devath")) (1 ("ièu") OR ("jo")) (NOT 2* VSg1) ;
SELECT PREP IF (0 ("davant") OR ("darrièr") OR ("darrèr") OR ("dessús") OR ("desjós") OR ("devath")) (1 ("tu")) (NOT 2* VSg2) ;
SELECT PREP IF (0 ("davant") OR ("darrièr") OR ("darrèr") OR ("dessús") OR ("desjós") OR ("devath")) (1 ("el") + Sg OR ("prneth") + Sg) (NOT 2* VSg3) ;
SELECT PREP IF (0 ("davant") OR ("darrièr") OR ("darrèr") OR ("dessús") OR ("desjós") OR ("devath")) (1 ("el") + Pl OR ("prneth") + Pl) (NOT 2* VPl3) ;
SELECT PREP IF (0 ("davant") OR ("darrièr") OR ("darrèr") OR ("dessús") OR ("desjós") OR ("devath")) (1 ("nosautres") OR ("nosauts")) (NOT 2* VPl1) ;
SELECT PREP IF (0 ("davant") OR ("darrièr") OR ("darrèr") OR ("dessús") OR ("desjós") OR ("devath")) (1 ("vosautres") OR ("vosauts")) (NOT 2* VPl2) ;
SELECT PREP IF (-1 ("per")) (0 ("davant") OR ("darrièr") OR ("darrèr") OR ("dessús") OR ("desjós") OR ("devath")) (1 ("ièu") OR ("jo") OR ("tu") OR ("el") OR ("prneth") OR ("nosautres") OR ("nosauts") OR ("vosautres") OR ("vosauts")) ;

# NP

SELECT N IF (0 ("carta")) (1 ("de")) (2 ("crèdit") OR ("credit")) ;
SELECT N IF (0 ("rei")) (1 ("de")) (2 Top OR unknownMajIni) ;
SELECT N IF (0 ("marqués")) (1 ("de")) (2 Top OR unknownMajIni) ;
SELECT N IF (0 ("Pache")) (1 ("de")) ;
SELECT N IF (-1 DET + MascSg OR Artcontrsg) (0 ("Lac")) ;
SELECT N IF (NOT -1 Ant) (0 ("Lac")) (1 Top OR unknownMajIni) ;
SELECT N IF (0 ("Luna")) (NOT 1 (ant) OR (cog)) (NOT -1 (ant) OR (cog)) ;
SELECT AJ IF (0 ("bas") + &&AcordSN + MajIni) (1 Top + &&AcordSN OR unknownMajIni) ;
SELECT Acr IF (0 NP) ;
SELECT NP OR Acr IF (NOT -1 BOS OR Lpar) (NOT -1 (META:/—/r)) (NOT -1 (META:/…/r))
	(NOT 0 ("gran") OR ("grand") OR ("rei") OR ("marqués") OR ("internet") OR ("francés") OR ("Catalan") OR ("Gascon") OR ("Còrsa") OR ("Aragonés") OR ("luna") OR ("marina") OR ("nadal") OR ("Cort") OR ("justícia") OR ("Abril") OR ("Pache") OR ("Blanc") OR ("Blanca")) ;
SELECT NP OR Acr IF (NOT -2 BOS) (-1 Lpar) (NOT -1 (META:/…/r))
	(NOT 0 ("gran") OR ("grand") OR ("rei") OR ("marqués") OR ("internet") OR ("francés") OR ("Catalan") OR ("Gascon") OR ("Còrsa") OR ("Aragonés") OR ("luna") OR ("marina") OR ("nadal") OR ("Cort") OR ("justícia") OR ("Abril") OR ("Pache") OR ("Blanc") OR ("Blanca")) ;
REMOVE N + Sg IF (-1 BOS) (0 NP) (NOT 1 CM) (1* V OR Ser BARRIER (":") OR EOS) ;	# Fred es mort ; Mair, vòs que’t haci ; Vacas e vetèths qu’arribavan
REMOVE AJ + Sg IF (-1 BOS) (0 NP) (NOT 1 N + Sg) (NOT 1 De) (NOT 1 CM) (NOT 1* ("!")) (1* V OR Ser BARRIER (":") OR EOS) ;	# Fred es mort

SELECT Conjco IF (-1 BOS) (0 ("Mas")) ;
SELECT Al IF (0 ("Nadau")) (-1* ("De cap tà l'Immortèla") OR ("l'Immortèla")) ;
SELECT Al IF (0 ("Nadau")) (1* ("De cap tà l'Immortèla") OR ("l'Immortèla")) ;

SELECT NP + &&AcordSN OR N_AJ + &&AcordSN IF (-1/* DET + &&AcordSN) (0 NP + &&AcordSN) ;
SELECT DET + &&AcordSN IF (0/* DET + &&AcordSN) (1 NP + &&AcordSN) (NOT 0 ("lei")) ;

REMOVE Cog IF (-1 DETdef) (0 Cog) ;
REMOVE Cog IF (-1 DETind) (0 Cog) ;
REMOVE Cog OR Ant IF (-1 En) (0 Top) ;
REMOVE Cog OR Ant IF (-1 Dins) (0 Top) ;
REMOVE Cog OR Ant IF (-1 ("sus")) (0 Top) ;	# guess
REMOVE Ant IF (-1 DETdef) (0 Ant) ;
REMOVE Ant IF (-1 DETind) (0 Ant) ;
REMOVE Ant IF (-1 En) (0 Ant) ;
REMOVE Cog IF (0 ("<XI>")) ;

SELECT NP IF (0 N OR NP) (1 NP) (0 (META:/-/r)) (NOT 0 ("bas") OR ("naut") OR ("haut")) ;   # Pierre-Michel
SELECT Ant IF (0 Ant) (1C Ant) (0 (META:/-/r)) ;                                # Jean-René
SELECT Ant IF (-1C Ant) (0 Ant) (-1 (META:/-/r)) ;
SELECT Cog IF (0 Cog) (1C Cog) (0 (META:/-/r)) ;
SELECT Cog IF (-1C Cog) (0 Cog) (-1 (META:/-/r)) ;
SELECT Cog IF (0 Cog OR Ant) (-1C Ant) (NOT 1 Cog) ;

SELECT Ant IF (0 MascSg) (1 (<"Ièr">)) ;
SELECT AJ IF (-1 Ant OR MajIni OR unknownMajIni) (0 ("<Ièr>")) ;
SELECT Top IF (-2 Ant) (-1 De) ;                                        # Louis de Lorraine
SELECT Top IF (-3 Ant) (-2 siecles_nom_romains OR ("<Ièr>")) (-1 De) ;  # Louis II de Lorraine
SELECT Ant IF (1 De) (2 Top) ;                                          # Michel de Lorraine
SELECT Ant IF (1 siecles_nom_romains OR ("<Ièr>")) (2 De) (3 Top) ;     # Michel II de Lorraine
SELECT Top IF (-2 ("vila") OR ("estat") OR ("region") OR ("catedrala") OR ("glèisa") OR ("aeropòrt") OR ("pòrt")) (-1 De) ;
SELECT Top IF (-2 ("concili") OR ("parlament") OR ("constitucion") OR ("tractat") OR ("declaracion")) (-1 De) ;
SELECT Top IF (-2 ("guèrra") OR ("conquista") OR ("annexion") OR ("sèti") OR ("expedicion")) (-1 De) ;
SELECT Ant OR Cog IF (0 Ant OR Cog) (1C Ant OR Cog) (0 (META:/-/r)) ;           # Charles-Michel
SELECT Ant OR Cog IF (-1C Ant OR Cog) (0 Ant OR Cog) (-1 (META:/-/r)) ;         # Charles-Michel
SELECT Ant IF (0 Ant) (1C Ant) (0 (META:/-/r)) ;
SELECT Cog IF (0 Cog) (1C Cog) (0 (META:/-/r)) ;
SELECT Ant IF (-1C Ant) (0 Ant) (-1 (META:/-/r)) ;
SELECT Cog IF (-1C Cog) (0 Cog) (-1 (META:/-/r)) ;
SELECT Ant IF (NOT -1 Ant) (0C Ant OR Cog) (1 Cog) (NOT 0 (META:/-/r)) ;        # Albin Michel; Claude Étienne Michel
SELECT Ant IF (0 Ant) (1C Ant OR Cog) (NOT 0 (META:/-/r)) ;
SELECT Cog IF (-1C Ant) (0 Cog) (NOT -1 (META:/-/r)) (NOT 1 Cog OR unknownMajIni) ;
SELECT Masc_strict IF (-2 DETdef + MascSg) (-1 N_AJ + MascSg) (0C Ant) ; # l'empereur Claude
SELECT Fem_strict IF (-2 DETdef + FemSg) (-1 N_AJ + FemSg) (0C Ant) ;    # la belle Claude
SELECT Masc_strict IF (0 Ant + Masc_strict) (1C Ant + Masc_strict) ;
SELECT Fem_strict IF (0 Ant + Fem_strict) (1C Ant + Fem_strict) ;
SELECT Masc_strict IF (-1C Ant + Masc_strict) (0 Ant + Masc_strict) ;
SELECT Fem_strict IF (-1C Ant + Fem_strict) (0 Ant + Fem_strict) ;

REMOVE N IF (NOT -1 DET) (0 ("Alan")) ;
REMOVE AJ IF (0 ("Alan")) ;

SELECT Ant IF (0 ("Marc") OR ("Sabina")) (1 Ant OR NP OR unknownMajIni) ;
SELECT Masc_strict IF (0 ("Camille")) (1 ("Pissarro")) ;
SELECT Cog IF (-1 ("Édouard")) (0 ("Philippe")) ;
SELECT Ant IF (0 ("Édouard")) (1 ("Philippe")) ;
SELECT Ant IF (0 ("Luther")) (1 Cog OR unknownMajIni) ;
SELECT Cog IF (0 ("Luther")) (NOT 1 Cog OR unknownMajIni) ;

SELECT Fem IF (0 ("Simone")) ;

SELECT Masc_strict IF (0 ("Cassandre")) (1* ("Macedònia") OR ("Roxana") OR ("Alexandre") OR ("Antipater") OR ("Ptolomèu") OR ("rei") + Masc OR ("diadòc")) ;
SELECT Masc_strict IF (0 ("Cassandre")) (-1* ("Macedònia") OR ("Roxana") OR ("Alexandre") OR ("Antipater") OR ("Ptolomèu") OR ("rei") + Masc OR ("diadòc")) ;
SELECT Fem_strict IF (0 ("Cassandre")) ;

SELECT Al IF (-1 Carrera) (0 Ant) ;	# carrièra Joan Jaurès
SELECT Al IF (-1 ("licèu") OR ("escòla")) (0 Ant) ;	# licèu Joan Jaurès
REMOVE Al IF (0 Ant) ;	# Joan Jaurès
SELECT Ant IF (0 ("Roland Garros")) (1* ("nàisser") OR ("nàisher") OR ("morir") OR ("mòrt")) ;
SELECT Ant IF (0 ("Roland Garros")) (-1* ("nàisser") OR ("nàisher") OR ("morir") OR ("mòrt")) ;
SELECT Al IF (0 ("Roland Garros")) ;
REMOVE Al IF (0 Ant) ;
SELECT Top IF (-2 Dignitat) (-1 De) (0 NP) ;	# cònsol de Sant Martin
SELECT Top IF (-2 ("mèste") OR ("regent") OR ("curat")) (-1 De OR A) (0 NP) ;
SELECT Top IF (-2 Construccion) (-1 De) (0 NP) ;	# abadiá de Sant Miquel
SELECT Top IF (-1 Construccion) (0 NP) ;	# catedrala Sant Miquel
SELECT Top IF (-2 Comuna) (-1 De) (0 NP) ;	# citat de Sant Loís
SELECT Top IF (-2 Fiera) (-1 De) (0 NP) ;
SELECT Top IF (-2 ("originari") OR ("abitant")) (-1 De) (0 NP) ;	# cònsol de Sant Martin
SELECT Top IF (-1 ("cap a") OR ("cap entà") OR ("cap enta") OR ("cap tà") OR ("de cap a") OR ("de cap entà") OR ("de cap enta") OR ("de cap tà") OR ("de caps a") OR ("vèrs") OR ("entà") OR ("enta") OR ("tà"))  (0 NP) ;
SELECT Top IF (-2 VerbMoviment) (-1 PREP) (0 NP) ;
SELECT Top IF (-3 VerbMoviment) (-2 AV) (-1 PREP) (0 NP) ;
SELECT Top IF (-2 ("trabalhar") OR ("tribalhar") OR ("abitar") OR ("demorar") OR ("viure") OR ("víver") OR ("víuer") OR ("nàisser") OR ("nàisher") OR ("morir") OR Ser) (-1 A OR En OR Dins) (0 NP) ;
SELECT Top IF (-3 ("trabalhar") OR ("tribalhar") OR ("abitar") OR ("demorar") OR ("viure") OR ("víver") OR ("víuer") OR ("nàisser") OR ("nàisher") OR ("morir") OR Ser) (-2 AV) (-1 A OR En OR Dins) (0 NP) ;

SELECT Ant + Masc_strict IF (0 Ant) (1 DETdef + Sg + Masc) (2 N_AJ + Sg + Masc + MajIni) ;
SELECT Ant + Fem_strict IF (0 Ant) (1 DETdef + Sg + Fem) (2 N_AJ + Sg + Fem + MajIni) ;
SELECT Ant + Masc_strict IF (0 Ant) (1 DETdef + Sg + Masc) (2 unknownMajIni) ;
SELECT Ant + Masc_strict IF (0 Ant) (1 siecles_nom_romains OR ("<Ièr>")) ;              # Constance II

SELECT Ant + &&AcordSN IF (0 Ant + &&AcordSN) (1 DETdef + &&AcordSN) (2 AJ + MajIni + &&AcordSN) ;
SELECT Ant + &&AcordSN IF (0 Ant + &&AcordSN) (1 DETdef + &&AcordSN) (2 unknownMajIni) ;
SELECT AJ + &&AcordSN IF (-2 Ant + &&AcordSN) (-1 DETdef + &&AcordSN) (0 AJ + MajIni + &&AcordSN) ;	# Loís lo Grand

SELECT Al IF (0 ("Artèmis")) (-1 ("programa") OR ("mission")) ;
SELECT Al IF (0 ("Artèmis")) (1 NUM) ;
SELECT Al IF (0 ("Artèmis")) (-1* ("Orion") OR ("NASA") OR ("mission") OR ("fusada") OR ("vòl") OR ("luna") OR ("lua") OR ("planeta") OR ("Mart") OR ("espaci") OR ("espacial") OR ("espaciau") OR ("astronauta")) ;
SELECT Al IF (0 ("Artèmis")) (1* ("Orion") OR ("NASA") OR ("mission") OR ("fusada") OR ("vòl") OR ("luna") OR ("lua") OR ("planeta") OR ("Mart") OR ("espaci") OR ("espacial") OR ("espaciau") OR ("astronauta")) ;
SELECT Ant IF (0 ("Artèmis")) ;

SELECT Cog IF (-1 Grade) ;
SELECT Ant IF (-1 Grade) ;

REMOVE Ant IF (-1 ("banca")) (NOT 1 Cog OR Ant) ;

SELECT Top IF (-2C Ant) (-1 ("<de>")) (0C Cog OR Ant OR Top) ;
SELECT Ant IF (0C Cog OR Ant OR Top) (1 ("<de>")) (2C Top) ;    # Maurice de Saxe
REMOVE Top IF (0 Cog OR Ant OR Top) (1 unknownMajIni) (NOT -1 ("de")) ;
SELECT Ant IF (NOT -1 Cog OR Ant) (0C Cog OR Ant) (1 unknownMajIni) ; # Léon Verguet
REMOVE (top) IF (0C NP) (0 (cog)) (0 (top)) (-1 (sent)) (<*-1 ("\\<[A-ZÀÁÄÂÈÉËÊÍÏÎÒÓÖÔÚÙÜÛÇ]\\>"r) LINK 1 (sent)); # E. Tolosa
REMOVE (cog) IF (0C NP) (0 (cog)) (0 (top)) (NOT 1 (ant) OR (cog)) (-1 BOS) ; # Barcelona ; Roma ; Tolosa
SELECT (top) IF (0 ("Barcelona")) (NOT 1 (ant) OR (cog)) (NOT -1 (ant) OR (cog)) ;
SELECT (top) IF (0 ("Lisbona")) (NOT 1 (ant) OR (cog)) (NOT -1 (ant) OR (cog)) ;
SELECT (top) IF (0 ("Roma")) (NOT 1 (ant) OR (cog)) (NOT -1 (ant) OR (cog)) ;
SELECT (top) IF (0 ("Tolosa")) (NOT 1 (ant) OR (cog)) (NOT -1 (ant) OR (cog)) ;
SELECT (top) IF (0 ("París")) (NOT 1 (ant) OR (cog)) (NOT -1 (ant) OR (cog)) ;
SELECT (top) IF (0 ("Pamiàs")) (NOT 1 (ant) OR (cog)) (NOT -1 (ant) OR (cog)) ;
SELECT (top) IF (0 ("Fois")) (NOT 1 (ant) OR (cog)) (NOT -1 (ant) OR (cog)) ;
SELECT (top) IF (0 ("Navarra")) (NOT 1 (ant) OR (cog)) (NOT -1 (ant) OR (cog)) ;
SELECT (top) IF (0 ("Florença")) (NOT 1 (ant) OR (cog)) (NOT -1 (ant) OR (cog)) ;
SELECT (top) IF (0 ("Libia")) (NOT 1 (ant) OR (cog)) (NOT -1 (ant) OR (cog)) ;
SELECT (top) IF (0 ("Siria")) (NOT 1 (ant) OR (cog)) (NOT -1 (ant) OR (cog)) ;
SELECT (top) IF (0 ("Asia")) (NOT 1 (ant) OR (cog)) (NOT -1 (ant) OR (cog)) ;
SELECT (top) IF (0 ("Limós")) ;
SELECT Ant IF (0 ("Laura")) (-1 BOS) ;
SELECT Al IF (0 ("Nadau")) (-1 ("grop")) ;

SELECT Ant IF (-1 ("dieu") OR ("divessa")) ;

SELECT Ant IF (-1 (";") OR (":")) (1 Ant OR Cog OR unknownMajIni) ;

SELECT Top IF (-2 ("vila") OR ("vilatge") OR ("província") OR ("region") OR ("parçan") OR ("departament") OR ("comuna") OR ("municipalitat") OR ("zòna") OR ("territori") OR ("arrondiment") OR ("aeropòrt") OR ("pòrt") OR ("reialme") OR ("reiaume") OR ("principat") OR ("grand-ducat") OR ("ducat") OR ("marquesat") OR ("comtat") OR ("baroniá") OR ("baronia") OR ("senhoria") OR ("archavescat") OR ("arquevescat") OR ("avescat") OR ("tèrra")) (-1 ("de")) (0 Cog OR Ant) ;
SELECT Top IF (-2 ("republica") OR ("conquista") OR ("annexion") OR ("sèti") OR ("expedicion")) (-1 De) ;
SELECT Top IF (-2 ("universitat")) (-1 De) ;	# université de Paris VII
SELECT Top IF (-2 ("a l'entorn") OR ("arron") OR ("centre")) (-1 De) ;
SELECT Top IF (-1 ("a l'entorn de") OR ("prèp de") OR ("près de") OR ("ran de") OR ("au ras de") OR ("a rasèr de") OR ("a rasís de")) ;
SELECT Ant IF (1 siecles_nom_romains OR ("<Ièr>")) ;	# Michel II
SELECT Top IF (1C Top) (0 (META:/-/r)) ;
SELECT Top IF (-1C Top) (-1 (META:/-/r)) ;

SELECT Ant_Cog IF (0 Cog OR Ant) (1C Cog) ;
SELECT Top IF (-2 Dignitat) (-1 ("de")) (0 Top) ;
SELECT Top IF (-2 ("anar") OR ("viatjar") OR ("arribar") OR ("partir") OR ("sortir") OR ("gésser")) (-1 ("a") OR ("de") OR ("cap a") OR ("devèrs") OR ("entà") OR ("tà") OR ("enta") OR ("ta") OR ("ende")) ;
SELECT Top + FemSg IF (-2 ("anar") OR ("viatjar") OR ("arribar") OR ("partir")) (-1 ("en")) ;
SELECT Top IF (-3 ("anar") OR ("viatjar") OR ("arribar") OR ("partir") OR ("sortir") OR ("gésser")) (-2 ("a") OR ("de") OR ("cap a") OR ("devèrs") OR ("entà") OR ("tà") OR ("enta") OR ("ta") OR ("ende")) (-1 DET + &&AcordSN) (0 Top + &&AcordSN) ;
SELECT Top IF (-3 ("anar") OR ("viatjar") OR ("arribar") OR ("partir") OR ("sortir") OR ("gésser")) (-2 AV) (-1 ("a") OR ("de") OR ("cap a") OR ("devèrs") OR ("entà") OR ("tà") OR ("enta") OR ("ta") OR ("ende")) ;
SELECT Top + FemSg IF (-3 ("anar") OR ("viatjar") OR ("arribar") OR ("partir")) (-2 AV) (-1 ("en")) ;
SELECT Top IF (-4 ("anar") OR ("viatjar") OR ("arribar") OR ("partir") OR ("sortir") OR ("gésser")) (-3 AV) (-2 ("a") OR ("de") OR ("cap a") OR ("devèrs") OR ("entà") OR ("tà") OR ("enta") OR ("ta") OR ("ende")) (-1 DET + &&AcordSN) (0 Top + &&AcordSN) ;

REMOVE Al IF (-1 Ant OR Cog) (0 Ant OR Cog) ;
REMOVE Top IF (-1 Ant OR Cog) (0 Ant OR Cog) ;
REMOVE Al IF (0 Ant OR Cog) (1 Ant OR Cog) ;
SELECT Top IF (-1 Lpar) (0 Cog) (1 Rpar);

SELECT Top IF (0 ("Euròpa")) (NOT -1 DET) (NOT -1 Ant_Cog) ;
SELECT Top IF (0 ("Asia")) (NOT -1 DET) (NOT -1 Ant_Cog) ;
SELECT Top IF (0 ("America")) (NOT -1 DET) (NOT -1 Ant_Cog) ;

SELECT Top IF (-2C Al) (-1 ("de")) (0 Cog OR Ant) ;	# Estivada de Rodés

SELECT Top IF (0 Top) (1 Conjco) (2C Top) ;		# Pau e Auloron
SELECT Top IF (-2C Top) (-1 Conjco) (0 Top) ;		# Auloron e Pau
SELECT Top IF (0 Top) (1 CM) (2C Top) (3 Conjco) ;	# Pau, Auloron e ...
SELECT Top IF (-2 Top) (-1 CM) (0 Top) (1 Conjco) ;	# Auloron, Pau e ...
SELECT Top IF (0 Top) (1 CM) (2 Top) (3 CM) (4C Top) ;
SELECT Top IF (0 Top) (1 CM) (2C Top) (3 CM) (4 Top) ;
SELECT Ant_Cog IF (0 Ant_Cog) (1 Conjco) (2C Ant_Cog) ;		# Pau e Jan
SELECT Ant_Cog IF (-2C Ant_Cog) (-1 Conjco) (0 Ant_Cog) ;	# Jan e Pau
SELECT Ant_Cog IF (0 Ant_Cog) (1 CM) (2C Ant_Cog) (3 Conjco) ;	# Pau, Jan e ...
SELECT Ant_Cog IF (-2 Ant_Cog) (-1 CM) (0 Ant_Cog) (1 Conjco) ;	# Jan, Pau e ...
SELECT Ant_Cog IF (0 Ant_Cog) (1 CM) (2 Ant_Cog) (3 CM) (4C Ant_Cog) ;
SELECT Ant_Cog IF (0 Ant_Cog) (1 CM) (2C Ant_Cog) (3 CM) (4 Ant_Cog) ;
SELECT Al IF (0 Al) (1 Conjco) (2C Al) ;
SELECT Al IF (-2C Al) (-1 Conjco) (0 Al) ;
SELECT Al IF (0 Al) (1 CM) (2C Al) (3 Conjco) ;
SELECT Al IF (-2 Al) (-1 CM) (0 Al) (1 Conjco) ;
SELECT Al IF (0 Al) (1 CM) (2 Al) (3 CM) (4C Al) ;
SELECT Al IF (0 Al) (1 CM) (2C Al) (3 CM) (4 Al) ;

SELECT Top IF (-1 De) (0 Top) (1 ("a") OR ("entà") OR ("tà") OR ("enta") OR ("ta") OR ("ende") OR ("fins a") OR ("dinc a") OR ("dinca") OR ("entrò") OR ("entrò a") OR ("dusca") OR ("duscas") OR ("jusca") OR ("juscas") OR ("denquia") OR ("enquia")) (2 Top OR unknownMajIni) ;		# de Pau a Auloron
SELECT Top IF (-3 De) (-2 Top OR unknownMajIni) (-1 ("a") OR ("entà") OR ("tà") OR ("enta") OR ("ta") OR ("ende") OR ("fins a") OR ("dinc a") OR ("dinca") OR ("entrò") OR ("entrò a") OR ("dusca") OR ("duscas") OR ("jusca") OR ("juscas") OR ("denquia") OR ("enquia")) (0 Top) ;	# de Auloron a Pau

# HAVER

REMOVE A IF (0 ("ara")) (NOT 1 N_AJ + FemSg) ;
SELECT PREP IF (-1C V + Pers OR VBinf) (0 A) (NOT 0 ("<a .*>"r) + AV) ;
SELECT PREP IF (-2C V + Pers OR VBinf) (-1 AV) (0 A) (NOT 0 ("<a .*>"r) + AV) ;
SELECT PREP IF (-3C V + Pers OR VBinf) (-2 AV) (-1 AV) (0 A) (NOT 0 ("<a .*>"r) + AV) ;
REMOVE V + Pers IF (-1C V + Pers OR VBinf) (0 A) (0 ("<a .*>"r) + V + Pers) ;
#REMOVE V + Pers IF (-1C V + Pers OR VBinf) (0 ("<a .*>"r) + V + Pers) ;
#REMOVE V + Pers IF (-1C V + Pers OR VBinf) (0 ("<a .*>"r)) ;
#REMOVE V IF (-1C V + Pers OR VBinf) (0 ("<a .*>"r)) ;
#REMOVE V IF (-1C V + Pers OR VBinf) ;
REMOVE V + Pers IF (-2C V + Pers OR VBinf) (-1 AV) (0 A) (0 ("<a .*>"r) + V + Pers) ;
REMOVE V + Pers IF (-3C V + Pers OR VBinf) (-2 AV) (-1 AV) (0 A) (0 ("<a .*>"r) + V + Pers) ;
SELECT Haver IF (0 Haver) (NOT 0 ("<a de>"i)) (1C VBpp) ;	# a cantat
SELECT Haver IF (0 Haver) (NOT 0 ("<a de>"i)) (1 Haver + VBpp) ;	# a cantat
SELECT Haver IF (0 Haver) (NOT 0 ("<a de>"i)) (1 AV OR Donc) (2 VBpp) ;	# a pas cantat
SELECT Haver IF (0 Haver) (NOT 0 ("<a de>"i)) (1 AV OR Donc) (2 AV OR Donc) (3 VBpp) ;	# a pas totjorn cantat
REMOVE Haver IF (1C N_AJ OR DET OR NUM OR PREP) ;
SELECT PREP IF (-1 VBpp OR VBinf) (0 ("<a de>"i)) (1 N_AJ + Pl) ;	# dobèrt a de personas ; pensar a de personas
SELECT PREP IF (-2C Verb + Pers) (-1C N) (0 ("<a de>"i)) (1 N_AJ + Pl) ;	# avèm afar a de personas
SELECT VBpp IF (0 VBpp) (1 ("<a de>"i)) (2C N_AJ_PP + Pl) ;	# dobèrt a de personas
SELECT VBinf IF (0 VBinf) (1 ("<a de>"i)) (2C N_AJ_PP + Pl) ;	# pensar a de personas
SELECT V IF (NOT -1 VBpp OR VBinf) (0 ("<a de>"i)) (1C N_AJ_PP + Pl) (NOT -1* V + Pers BARRIER Conjsub OR Conjadv OR Rel) ;	# a de dificultats ; pensar a de personas
SELECT PREP IF (-1C VBinf) (0 A) ;
SELECT PREP IF (-2 Ser OR Semblar_Pareisser OR Devenir) (-1 VBpp) (0 A) (1 VBinf) ;	# ser convidat a pensar
SELECT PREP IF (-3 Ser OR Semblar_Pareisser OR Devenir) (-2 AV) (-1 VBpp) (0 A) (1 VBinf) ;	# ser pas convidat a pensar
SELECT PREP IF (-4 Ser OR Semblar_Pareisser OR Devenir) (-3 AV) (-2 AV) (-1 VBpp) (0 A) (1 VBinf) ;	# ser pas totjorn convidat a pensar
SELECT VBpp IF (-1 Ser OR Semblar_Pareisser OR Devenir) (0 VBpp) (1 A) (2 VBinf) ;	# ser convidat a pensar
SELECT VBpp IF (-2 Ser OR Semblar_Pareisser OR Devenir) (-1 AV) (0 VBpp) (1 A) (2 VBinf) ;	# ser pas convidat a pensar
SELECT VBpp IF (-3 Ser OR Semblar_Pareisser OR Devenir) (-2 AV) (-1 AV) (0 VBpp) (1 A) (2 VBinf) ;	# ser pas totjorn convidat a pensar
REMOVE V IF (0 A) (1C N_AJ OR DET OR NUM) (-1* V + Pers BARRIER Conjsub OR Conjadv OR Rel) ;
REMOVE V IF (0 A) (1C N_AJ OR DET OR NUM) (1* V + Pers BARRIER Conjsub OR Conjadv OR Rel) ;
SELECT Aver IF (-1/* Haver) (0 Aver + VBpp) ;	# a agut ; i a agut
SELECT Aver IF (-2/* Haver) (-1 AV) (0 Aver + VBpp) ;	# a pas agut ; i a pas agut
SELECT Aver IF (-3/* Haver) (-2 AV) (-1 AV) (0 Aver + VBpp) ;	# a pas totjorn agut ; i a pas totjorn agut
SELECT Haver IF (0 Haver) (1 ("fait")) ;	# a fait
SELECT PREP IF (-1 Drech) (0 A) ;
SELECT N IF (-1 DET + MascSg OR Artcontrsg) (0 Drech) (1 A) ;

SELECT PREP IF (-1C Verb) (0 ("<a>"i)) (1 N OR DET) ;	# consacrat a reviradas
SELECT PREP IF (-1C Verb) (0 ("<a>"i)) (1 De) ;	# consacrat a de reviradas
SELECT PREP IF (-1C Verb) (0 ("<a>"i)) (1 VBinf) ;
SELECT PREP IF (-1C Verb) (0 ("<a>"i)) (1 AV OR Pro) (2 VBinf) ;
SELECT PREP IF (-1C Verb) (0 ("<a>"i)) (1 AV OR Pro) (2 AV OR Pro) (3 VBinf) ;
SELECT PREP IF (-2 N OR Verb) (-1 VBpp) (0 ("<a>"i)) (1 N OR DET) ;	# fut prise à partie
SELECT PREP IF (-2 N OR Verb) (-1 VBpp) (0 ("<a>"i)) (1 De) ;
SELECT PREP IF (-2 N OR Verb) (-1 VBpp) (0 ("<a>"i)) (1 VBinf) ;
SELECT PREP IF (-2 N OR Verb) (-1 VBpp) (0 ("<a>"i)) (1 AV OR Pro) (2 VBinf) ;
SELECT PREP IF (-2 N OR Verb) (-1 VBpp) (0 ("<a>"i)) (1 AV OR Pro) (2 AV OR Pro) (3 VBinf) ;
SELECT PREP IF (-2 Verb) (-2 AV) (-1 VBpp) (0 ("<a>"i)) (1 N OR DET) ;	# fut pas prise à partie
SELECT PREP IF (-3 Verb) (-2 AV) (-1 VBpp) (0 ("<a>"i)) (1 De) ;
SELECT PREP IF (-3 N OR Verb) (-2 AV) (-1 VBpp) (0 ("<a>"i)) (1 VBinf) ;
SELECT PREP IF (-3 N OR Verb) (-2 AV) (-1 VBpp) (0 ("<a>"i)) (1 AV OR Pro) (2 VBinf) ;
SELECT PREP IF (-3 N OR Verb) (-2 AV) (-1 VBpp) (0 ("<a>"i)) (1 AV OR Pro) (2 AV OR Pro) (3 VBinf) ;
SELECT PREP IF (-2 Verb) (-1 ("pas")) (0 ("<a>"i)) (1 N OR DET) ;	# se consacra pas a reviradas
SELECT PREP IF (-2 Verb) (-1 ("pas")) (0 ("<a>"i)) (1 De) ;	# se consacra pas a de reviradas

SELECT PREP IF (0 ("<a>"i)) (1C VBinf) ;
SELECT PREP IF (0 ("<a>"i)) (1 AV OR Pro) (2C VBinf) ;
SELECT PREP IF (0 ("<a>"i)) (1 AV OR Pro) (2 AV OR Pro) (3C VBinf) ;

SELECT PREP IF (-1 Verb) (0 ("<ara>"i)) (1C N_AJ + FemSg) ;	# estacats ara tèrra
SELECT PREP IF (-1C Verb) (0 ("<au darrèr>"i)) (1 N_AJ + FemSg) ;
SELECT PREP IF (-1C Verb) (0 ("<a lor>"i)) (1 N_AJ + FemSg) ;
SELECT PREP IF (-2 Verb) (-1 AV) (0 ("<au darrèr>"i)) (1 N_AJ + FemSg) ;
SELECT PREP IF (-2 Verb) (-1 AV) (0 ("<a lor>"i)) (1 N_AJ + FemSg) ;
SELECT PREP IF (-2 N OR Verb) (-1 VBpp) (0 ("<au darrèr>"i)) (1 N_AJ + FemSg) ;
SELECT PREP IF (-2 N OR Verb) (-1 VBpp) (0 ("<a lor>"i)) (1 N_AJ + FemSg) ;
SELECT PREP IF (-3 N OR Verb) (-2 AV) (-1 VBpp) (0 ("<au darrèr>"i)) (1 N_AJ + FemSg) ;
SELECT PREP IF (-3 N OR Verb) (-2 AV) (-1 VBpp) (0 ("<a lor>"i)) (1 N_AJ + FemSg) ;
REMOVE AV (0 ("<au darrèr>"i)) (1C N_AJ + MascSg) ;
REMOVE AV (0 ("<a lor>"i)) (1C N_AJ + Sg) ;

SELECT PREP IF (-1C Verb) (0 ("<a>"i)) (1 De) ;	# consacrat a de reviradas
SELECT Haver IF (0 ("<a>"i)) (1 VBpp) ;	# a conegut
SELECT Haver IF (0 ("<a>"i)) (1 ("pas")) (2 VBpp) ;	# a pas conegut
SELECT Haver IF (0 ("<a>"i)) (1C AV) (2 VBpp) ;	# a totjorn conegut
SELECT Haver IF (0 ("<a>"i)) (1 ("pas")) (2 AV) (3 VBpp) ;	# a pas totjorn conegut

LIST LongDe = "<long de>"i "<long d'>"i "<long d’>"i ;
SELECT AJ IF (-1 Ser LINK NOT 0 Pl) (0 LongDe) ;
SELECT AJ IF (-2 Ser LINK NOT 0 Pl) (-1 AV) (0 LongDe) ;
SELECT AJ IF (-1C PREAV OR ("fòrça") OR ("hèra") OR ("plan")) (0 LongDe) ;
REMOVE AJ IF (0 LongDe) ;
REMOVE AV IF (0 LongDe) ;

LIST LuenhDe = "<luènh de>"i "<luènh d'>"i "<luènh d’>"i ;
SELECT AV IF (-1 Ser) (0 LuenhDe) ;
SELECT AV IF (-2 Ser) (-1 AV OR Donc) (0 LuenhDe) ;
SELECT AV IF (-3 Ser) (-2 AV OR Donc) (-1 AV OR Donc) (0 LuenhDe) ;
SELECT AV IF (-1C PREAV OR ("fòrça") OR ("hèra") OR ("plan") OR ("ben")) (0 LuenhDe) ;
REMOVE AJ IF (0 LuenhDe) ;
REMOVE AV IF (0 LuenhDe) ;

LIST LuonhDe = "<luònh de>"i "<luònh d'>"i "<luònh d’>"i ;
SELECT AV IF (-1 Ser) (0 LuonhDe) ;
SELECT AV IF (-2 Ser) (-1 AV OR Donc) (0 LuonhDe) ;
SELECT AV IF (-3 Ser) (-2 AV OR Donc) (-1 AV OR Donc) (0 LuonhDe) ;
SELECT AV IF (-1C PREAV OR ("fòrça") OR ("hèra") OR ("plan") OR ("ben")) (0 LuonhDe) ;
REMOVE AJ IF (0 LuonhDe) ;
REMOVE AV IF (0 LuonhDe) ;

LIST Luenh = "<luènh>"i "<luenh>"i "<luònh>"i;
SELECT AV IF (-1 Ser) (0 Luenh) (1 De) ;
SELECT AV IF (-2 Ser) (-1 AV OR Donc) (0 Luenh) (1 De) ;
SELECT AV IF (-3 Ser) (-2 AV OR Donc) (-1 AV OR Donc) (0 Luenh) (1 De) ;
SELECT AV IF (-1C PREAV OR ("fòrça") OR ("hèra") OR ("plan") OR ("ben")) (0 Luenh) (1 De) ;
SELECT AV IF (-1 ("<de>"i)) (0 Luenh) ;
SELECT AV IF (-1 ("<e de>"i)) (0 Luenh) ;
SELECT AV IF (-2 ("<de>"i)) (-1C AV OR PREAV OR ("fòrça") OR ("hèra") OR ("plan") OR ("ben")) (0 Luenh) ;
SELECT AV IF (-2 ("<e de>"i)) (-1C AV OR PREAV OR ("fòrça") OR ("hèra") OR ("plan") OR ("ben")) (0 Luenh) ;
SELECT AV IF (-1 ("<son>"i)) (0 Luenh) ;
SELECT AV IF (-2 ("<son>"i)) (-1 AV OR ("pas")) (0 Luenh) ;

SELECT AJ IF (-1/* DET + MascSg) (0 ("<bèth tròç>"i)) ;
SELECT PREAV IF (0 ("<bèth tròç>"i)) (1C AJ OR AV OR ("luenh") OR ("luènh")) ;	# bèth tròç luènh
REMOVE AJ IF (0 ("<bèth tròç>"i)) ;
REMOVE PREAV IF (0 ("<bèth tròç>"i)) ;

SELECT SUB:1 PREAV IF (0 ("<de bèth tròç>"i)) (1C AJ OR AV OR ("luenh") OR ("luènh")) ;	# de bèth tròç luenh enlà
REMOVE SUB:1 PREAV IF (0 ("<de bèth tròç>"i)) ;
REMOVE SUB:1 AV IF (0 ("<de bèth tròç>"i)) ;

SELECT PREP IF (-1C N_AJ) (0 ("<d'efièch>"i) OR ("<d’efièch>"i) OR ("<d'efèit>"i) OR ("<d’efèit>"i)) ;
REMOVE PREP IF (NOT -1 N_AJ) (0 ("<d'efièch>"i) OR ("<d’efièch>"i) OR ("<d'efèit>"i) OR ("<d’efèit>"i)) ;
SELECT PREP IF (-1 N_AJ) (0 ("<d'efièch>"i) OR ("<d’efièch>"i) OR ("<d'efèit>"i) OR ("<d’efèit>"i)) ;	# guess
REMOVE PREP IF (0 ("<d'efièch>"i) OR ("<d’efièch>"i) OR ("<d'efèit>"i) OR ("<d’efèit>"i)) ;	# guess

# Ser

SELECT Ser IF (0 Ser + &&AcordSP) (1C VBpp + &&AcordSP) ;	# soi estat
SELECT Ser IF (-1 Pro + P1 + Sg) (0 Ser + P1 + Sg) (1 VBpp + Sg) ;	# me soi banhat
SELECT Ser IF (-1 Pro + P2 + Sg) (0 Ser + P2 + Sg) (1 VBpp + Sg) ;	# t'ès banhat
SELECT Ser IF (-1 Pro + P1 + Pl) (0 Ser + P1 + Pl) (1 VBpp + Pl) ;	# nos sèm banhats
SELECT Ser IF (-1 Pro + P2 + Pl) (0 Ser + P2 + Pl) (1 VBpp + Pl) ;	# vos sètz banhats
SELECT Ser IF (-1 Pro + P3 + Ref) (0 Ser + P3 + Sg) (1 VBpp + Sg) ;	# s'es banhat
SELECT Ser IF (-1 Pro + P3 + Ref) (0 Ser + P3 + Pl) (1 VBpp + Pl) ;	# se son banhats
SELECT Ser IF (0 Ser + &&AcordSP) (1 AV) (2 VBpp + &&AcordSP) ;	# soi pas estat
SELECT Ser IF (0 Ser + &&AcordSP) (1 AV) (2 AV) (3 VBpp + &&AcordSP) ;	# soi pas totjorn estat
SELECT Ser IF (-1 Ser + &&AcordSP) (0 Ser + VBpp + &&AcordSP) (1 VBpp + &&AcordSP) ;	# soi estat apelat
SELECT Ser IF (-2 Ser + &&AcordSP) (-1 AV) (0 Ser + VBpp + &&AcordSP) (1 VBpp + &&AcordSP) ;	# soi pas estat apelat
SELECT Ser IF (-1 Ser + &&AcordSP) (0 Ser + VBpp + &&AcordSP) (-1 AV) (2 VBpp + &&AcordSP) ;	# soi estat immediatament apelat
SELECT Ser IF (-2 Ser + &&AcordSP) (-1 AV) (0 Ser + VBpp + &&AcordSP) (1 AV) (2 VBpp + &&AcordSP) ;	# soi pas estat immediatament apelat
SELECT VBpp IF (-2 Ser + &&AcordSP) (-1 Ser + VBpp + &&AcordSP) (0 VBpp + &&AcordSP) ;	# soi estat apelat
SELECT VBpp IF (-3 Ser + &&AcordSP) (-2 AV) (-1 Ser + VBpp + &&AcordSP) (0 VBpp + &&AcordSP) ;	# soi pas estat apelat
SELECT VBpp IF (-3 Ser + &&AcordSP) (-2 Ser + VBpp + &&AcordSP) (-1 AV) (0 VBpp + &&AcordSP) ;	# soi estat immediatament apelat
SELECT VBpp IF (-4 Ser + &&AcordSP) (-3 AV) (-2 Ser + VBpp + &&AcordSP) (-1 AV) (0 VBpp + &&AcordSP) ;	# soi pas estat immediatament apelat

# VBpp

REMOVE Vconj IF (-1C Haver + Vconj) (0 VBpp) ;	# ajan avut
REMOVE AJ IF (-1C Haver) (0 VBpp) ;	# ai ascotat
REMOVE Vconj IF (-1C Ser + Vconj + &&AcordSP) (0 VBpp + &&AcordSP) ;
REMOVE Vconj IF (-2C Haver + Vconj) (-1 AV) (0 VBpp) ;	# ajan pas avut
REMOVE AJ IF (-2C Haver) (-1 AV) (0 VBpp) ;	# ai pas ascotat
REMOVE Vconj IF (-2C Ser + Vconj + &&AcordSP) (-1 AV) (0 VBpp + &&AcordSP) ;
REMOVE Vconj IF (-3C Haver + Vconj) (-2 AV) (-1 AV) (0 VBpp) ;	# ajan pas totjorn avut
REMOVE AJ IF (-3C Haver) (-2 AV) (-1 AV) (0 VBpp) ;	# ai pas totjorn ascotat
REMOVE Vconj IF (-3C Ser + Vconj + &&AcordSP) (-2 AV) (-1 AV) (0 VBpp + &&AcordSP) ;

SELECT VBpp IF (-1 Haver) (0 ("far") OR ("har") OR ("hèr") OR Vdire) ;
SELECT VBpp IF (-2 Haver) (-1 AV) (0 ("far") OR ("har") OR ("hèr") OR Vdire) ;
SELECT VBpp IF (-3 Haver) (-2 AV) (-1 AV) (0 ("far") OR ("har") OR ("hèr") OR Vdire) ;
REMOVE VBpp IF (-2 Haver) (-1 VBpp) ;
REMOVE VBpp IF (-3 Haver) (-2 AV) (-1 VBpp) ;
REMOVE VBpp IF (-4 Haver) (-1 AV) (-2 AV) (-1 VBpp) ;

# VBinf

SELECT VBinf IF (0 AJ) (1 ("par")) ;
SELECT AV IF (-1 Vmod) (0 ("<tornar>"i)) (1 VBinf) ;	# pòdi tornar manjar
SELECT VBinf IF (-1 Vmod LINK 0C V) (0 VBinf) ;	# pòdi manjar
SELECT VBinf IF (-1 ("anar") OR ("tornar") LINK 0C V) (0 VBinf) ;	# anar estar
SELECT Vmod IF (0 Vmod) (1C VBinf OR ("<èsser>"i) OR ("<èster>"i) OR ("<èstre>"i) OR ("<estar>"i) OR ("<far>"i) OR ("<har>"i) OR ("<hèr>"i)) (NOT 0 PREP) ;	# pòdi manjar
SELECT Vmod IF (0 Vmod) (1C VBinf OR ("<èsser>"i) OR ("<èster>"i) OR ("<èstre>"i) OR ("<estar>"i) OR ("<far>"i) OR ("<har>"i) OR ("<hèr>"i)) (0 Artcontrsg OR Artcontrpl) ;	# deu manjar
SELECT VBinf IF (-2 Vmod) (-1 AV OR Pro OR Donc) (0 VBinf) (NOT 0 PREP) ;	# pòdi pas manjar
SELECT Vmod IF (0 Vmod) (1 AV OR Pro OR Donc) (2C VBinf) (NOT 0 PREP) ;	# pòdi pas manjar
SELECT VBinf IF (-3 Vmod) (-2 AV OR Pro OR Donc) (-1 AV OR Pro) (0 VBinf) (NOT 0 PREP) ;	# pòdi pas manjar
SELECT Vmod IF (0 Vmod) (1 AV OR Pro) (2 AV OR Pro OR Donc) (3C VBinf) (NOT 0 PREP) ;	# pòdi pas manjar
SELECT Vmod IF (0 Vmod) (1 ("tot")) (2C VBinf OR ("<èsser>"i) OR ("<èster>"i) OR ("<èstre>"i) OR ("<estar>"i) OR ("<far>"i) OR ("<har>"i) OR ("<hèr>"i)) (NOT 0 PREP) ;	# pòdi tot manjar
SELECT Vmod IF (0 Vmod) (1 ("tot")) (2C VBinf OR ("<èsser>"i) OR ("<èster>"i) OR ("<èstre>"i) OR ("<estar>"i) OR ("<far>"i) OR ("<har>"i) OR ("<hèr>"i)) (0 Artcontrsg OR Artcontrpl) ;	# deu tot manjar
SELECT VBinf IF (-3 Vmod) (-2 AV OR Donc) (-1 ("tot")) (0 VBinf) (NOT 0 PREP) ;	# pòdi pas tot manjar
SELECT Vmod IF (0 Vmod) (1 AV OR Donc) (2 ("tot")) (3C VBinf) (NOT 0 PREP) ;	# pòdi pas tot manjar
SELECT PRON IF (-1C Vmod) (0 ("tot")) (0C VBinf) ;	# pòdi tot manjar
SELECT PRON IF (-2C Vmod) (-1 AV OR Donc) (0 ("tot")) (0C VBinf) ;	# pòdi pas tot manjar

# VBmod

SELECT Vmod IF (0 ("caler")) (1 Que) ;
SELECT Vmod IF (0 ("caler")) (1 AV) (2 Que) ;
SELECT Vmod IF (0 ("caler")) (1 AV) (2 AV) (3 Que) ;
SELECT Vmod IF (0 ("caler")) (-1/* Pro) ;
SELECT Vmod IF (0 ("caler")) (-1 Itg) ;
SELECT Vmod IF (0 ("caler")) (-1 Enon) ;
SELECT Vmod IF (0 ("caler")) (-1 BOS) ;
SELECT Vmod IF (0 ("caler")) (-2 BOS) (1 AV) ;
SELECT Vmod IF (-1 ("coma") OR ("com")) (0 ("caler") + P3 + Sg) ;
REMOVE (vbmod) IF (NOT 1 VBinf OR AV OR Pro OR Que) ;
REMOVE (vbmod) IF (1 AV) (NOT 2 VBinf OR AV OR Pro OR Que) ;
REMOVE (vbmod) IF (1 AV) (1 AV) (NOT 3 VBinf OR AV OR Pro OR Que) ;
REMOVE (vbmod) IF (1 AV) (2 Pro) (NOT 3 VBinf OR Pro) ;
REMOVE (vbmod) IF (1 Pro) (NOT 2 VBinf OR Pro) ;
REMOVE (vbmod) IF (1 Pro) (2 Pro) (NOT 2 VBinf) ;

#Vb conjugat après enonciatiu
SELECT Vconj IF (-1C Enon) (NOT 0 Pro) ;

SELECT P1 + Sg IF (-1 PRON + Tn + P1 + Sg) (0 V + P1 + Sg) (NOT -1 DET + &&AcordSN LINK NOT 0 N_AJ + &&AcordSN) ;
SELECT P1 + Sg IF (-2 PRON + Tn + P1 + Sg) (-1 Pro OR AV) (0 V + P1 + Sg) ;
SELECT P1 + Sg IF (-3 PRON + Tn + P1 + Sg) (-2 Pro OR AV) (-1 Pro OR AV) (0 V + P1 + Sg) ;
SELECT P1 + Sg IF (-4 PRON + Tn + P1 + Sg) (-3 Pro OR AV) (-2 Pro OR AV) (-1 Pro OR AV) (0 V + P1 + Sg) ;
SELECT P2 + Sg IF (-1 PRON + Tn + P2 + Sg) (0 V + P2 + Sg) (NOT -1 DET + &&AcordSN LINK NOT 0 N_AJ + &&AcordSN) ;
SELECT P2 + Sg IF (-2 PRON + Tn + P2 + Sg) (-1 Pro OR AV) (0 V + P2 + Sg) ;
SELECT P2 + Sg IF (-3 PRON + Tn + P2 + Sg) (-2 Pro OR AV) (-1 Pro OR AV) (0 V + P2 + Sg) ;
SELECT P2 + Sg IF (-4 PRON + Tn + P2 + Sg) (-3 Pro OR AV) (-2 Pro OR AV) (-1 Pro OR AV) (0 V + P2 + Sg) ;
SELECT P3 + Sg IF (-1 PRON + Tn + P3 + Sg LINK NOT 0 ("se")) (0 V + P3 + Sg) (NOT -1 DET + &&AcordSN LINK NOT 0 N_AJ + &&AcordSN) ;
SELECT P3 + Sg IF (-2 PRON + Tn + P3 + Sg LINK NOT 0 ("se")) (-1 Pro OR AV) (0 V + P3 + Sg) ;
SELECT P3 + Sg IF (-3 PRON + Tn + P3 + Sg LINK NOT 0 ("se")) (-2 Pro OR AV) (-1 Pro OR AV) (0 V + P3 + Sg) ;
SELECT P3 + Sg IF (-4 PRON + Tn + P3 + Sg LINK NOT 0 ("se")) (-3 Pro OR AV) (-2 Pro OR AV) (-1 Pro OR AV) (0 V + P3 + Sg) ;
SELECT P1 + Pl IF (-1 PRON + Tn + P1 + Pl) (0 V + P1 + Pl) (NOT -1 DET + &&AcordSN LINK NOT 0 N_AJ + &&AcordSN) ;
SELECT P1 + Pl IF (-2 PRON + Tn + P1 + Pl) (-1 Pro OR AV) (0 V + P1 + Pl) ;
SELECT P1 + Pl IF (-3 PRON + Tn + P1 + Pl) (-2 Pro OR AV) (-1 Pro OR AV) (0 V + P1 + Pl) ;
SELECT P1 + Pl IF (-4 PRON + Tn + P1 + Pl) (-3 Pro OR AV) (-2 Pro OR AV) (-1 Pro OR AV) (0 V + P1 + Pl) ;
SELECT P2 + Pl IF (-1 PRON + Tn + P2 + Pl) (0 V + P2 + Pl) (NOT -1 DET + &&AcordSN LINK NOT 0 N_AJ + &&AcordSN) ;
SELECT P2 + Pl IF (-2 PRON + Tn + P2 + Pl) (-1 Pro OR AV) (0 V + P2 + Pl) ;
SELECT P2 + Pl IF (-3 PRON + Tn + P2 + Pl) (-2 Pro OR AV) (-1 Pro OR AV) (0 V + P2 + Pl) ;
SELECT P2 + Pl IF (-4 PRON + Tn + P2 + Pl) (-3 Pro OR AV) (-2 Pro OR AV) (-1 Pro OR AV) (0 V + P2 + Pl) ;
SELECT P3 + Pl IF (-1 PRON + Tn + P3 + Pl) (0 V + P3 + Pl) (NOT -1 DET + &&AcordSN LINK NOT 0 N_AJ + &&AcordSN) ;
SELECT P3 + Pl IF (-2 PRON + Tn + P3 + Pl) (-1 Pro OR AV) (0 V + P3 + Pl) ;
SELECT P3 + Pl IF (-3 PRON + Tn + P3 + Pl) (-2 Pro OR AV) (-1 Pro OR AV) (0 V + P3 + Pl) ;
SELECT P3 + Pl IF (-4 PRON + Tn + P3 + Pl) (-3 Pro OR AV) (-2 Pro OR AV) (-1 Pro OR AV) (0 V + P3 + Pl) ;

SELECT P1 + Sg IF (NOT -1 PRON + Tn) (0 V + P1 + Sg) (1 CM) (2 PRON + Tn + P1 + Sg) (3 CM OR EOS) ;	# pensi, jo,

SELECT Vconj_indic IF (-2 PRON + Tn + P1 + Sg) (-1C Enon) (0 V + P1 + Sg) ;
SELECT Vconj_indic IF (-3 PRON + Tn + P1 + Sg) (-2C Enon) (-1 Pro OR AV) (0 V + P1 + Sg) ;
SELECT Vconj_indic IF (-4 PRON + Tn + P1 + Sg) (-3C Enon) (-2 Pro OR AV) (-1 Pro OR AV) (0 V + P1 + Sg) ;
SELECT Vconj_indic IF (-2 PRON + Tn + P2 + Sg) (-1C Enon) (0 V + P2 + Sg) ;
SELECT Vconj_indic IF (-3 PRON + Tn + P2 + Sg) (-2C Enon) (-1 Pro OR AV) (0 V + P2 + Sg) ;
SELECT Vconj_indic IF (-4 PRON + Tn + P2 + Sg) (-3C Enon) (-2 Pro OR AV) (-1 Pro OR AV) (0 V + P2 + Sg) ;
SELECT Vconj_indic IF (-2 PRON + Tn + P3 + Sg) (-1C Enon) (0 V + P3 + Sg) ;
SELECT Vconj_indic IF (-3 PRON + Tn + P3 + Sg) (-2C Enon) (-1 Pro OR AV) (0 V + P3 + Sg) ;
SELECT Vconj_indic IF (-4 PRON + Tn + P3 + Sg) (-3C Enon) (-2 Pro OR AV) (-1 Pro OR AV) (0 V + P3 + Sg) ;
SELECT Vconj_indic IF (-2 PRON + Tn + P1 + Pl) (-1C Enon) (0 V + P1 + Pl) ;
SELECT Vconj_indic IF (-3 PRON + Tn + P1 + Pl) (-2C Enon) (-1 Pro OR AV) (0 V + P1 + Pl) ;
SELECT Vconj_indic IF (-4 PRON + Tn + P1 + Pl) (-3C Enon) (-2 Pro OR AV) (-1 Pro OR AV) (0 V + P1 + Pl) ;
SELECT Vconj_indic IF (-2 PRON + Tn + P2 + Pl) (-1C Enon) (0 V + P2 + Pl) ;
SELECT Vconj_indic IF (-3 PRON + Tn + P2 + Pl) (-2C Enon) (-1 Pro OR AV) (0 V + P2 + Pl) ;
SELECT Vconj_indic IF (-4 PRON + Tn + P2 + Pl) (-3C Enon) (-2 Pro OR AV) (-1 Pro OR AV) (0 V + P2 + Pl) ;
SELECT Vconj_indic IF (-2 PRON + Tn + P3 + Pl) (-1C Enon) (0 V + P3 + Pl) ;
SELECT Vconj_indic IF (-3 PRON + Tn + P3 + Pl) (-2C Enon) (-1 Pro OR AV) (0 V + P3 + Pl) ;
SELECT Vconj_indic IF (-4 PRON + Tn + P3 + Pl) (-3C Enon) (-2 Pro OR AV) (-1 Pro OR AV) (0 V + P3 + Pl) ;

# PRN

REMOVE Tn + Pl_strict IF (0 Tn + Sg_strict) (0 Tn + Pl_strict) (1 V + P3 + Sg) ;	# quauqu'uns pot
REMOVE Tn + Sg_strict IF (0 Tn + Sg_strict) (0 Tn + Pl_strict) (1 V + P3 + Pl) ;
REMOVE Tn + Pl_strict IF (0 Tn + Sg_strict) (0 Tn + Pl_strict) (1 AV OR Pro) (2 V + P3 + Sg) ;
REMOVE Tn + Sg_strict IF (0 Tn + Sg_strict) (0 Tn + Pl_strict) (1 AV OR Pro) (2 V + P3 + Pl) ;
REMOVE Tn + Pl_strict IF (0 Tn + Sg_strict) (0 Tn + Pl_strict) (1 AV OR Pro) (2 AV OR Pro) (3 V + P3 + Sg) ;
REMOVE Tn + Sg_strict IF (0 Tn + Sg_strict) (0 Tn + Pl_strict) (1 AV OR Pro) (2 AV OR Pro) (3 V + P3 + Pl) ;

REMOVE ("pas nat") IF (-2 Ne_enon OR Ne_adv) (-1 V) ;
REMOVE SUB:1 Tn IF (0 ("pas nat")) (1 N_AJ + MascSg) ;
SELECT SUB:1 DET + MascSg IF (0 ("<pas nat>"i)) (1 N_AJ + MascSg) ;
SELECT N_AJ + MascSg IF (-1 ("<pas nat>"i)) (0 N_AJ + MascSg) ;

SELECT Conjco IF (0 ("o")) (1 ("encara")) ;
SELECT Conjco IF (0 ("o")) (1 ("alara") OR ("alavetz") OR ("lavetz")) ;
SELECT Conjco IF (-1C VBimp OR PRS) (0 ("o")) ;
REMOVE Pro IF (0 ("o")) (1 Ser + &&AcordSP) (2 AJ + &&AcordSP) ;
REMOVE Pro IF (0 ("o")) (1 Semblar_Pareisser + &&AcordSP) (2 AJ + &&AcordSP) ;
REMOVE Pro IF (0 ("o")) (1 Venir + &&AcordSP) (2 AJ + &&AcordSP) ;
REMOVE Pro IF (0 ("o")) (1 Devenir + &&AcordSP) (2 AJ + &&AcordSP) ;
SELECT Pro IF (-1C BOS OR Conjsub OR Conjadv OR Rel OR Itg) (0 ("o")) (1 V + Vconj_non_Imp) (NOT -1* Enon) (NOT 1* Enon) ;
SELECT Pro IF (-1 N_AJ + Sg LINK NOT 0 V + P3 + Sg) (0 ("o")) (1C V + P3 + Sg) (NOT -1* Enon) (NOT 1* Enon) ;	# lo president o refusèt
SELECT Pro IF (-1 N_AJ + Pl LINK NOT 0 V + P3 + Pl) (0 ("o")) (1C V + P3 + Pl) (NOT -1* Enon) (NOT 1* Enon) ;
SELECT Pro IF (-1 NP + Sg LINK NOT 0 V + P3 + Sg) (0 ("o")) (1C V + P3 + Sg) (NOT -1* Enon) (NOT 1* Enon) ;	# lo president de la Generalitat o refusèt
SELECT Pro IF (-1 NP + Pl LINK NOT 0 V + P3 + Pl) (0 ("o")) (1C V + P3 + Pl) (NOT -1* Enon) (NOT 1* Enon) ;

SELECT Pro IF (-1 ("per aquò")) (0 ("o")) (1 V) ;	# per aquò o deviá legir
SELECT Pro IF (-2 ("per")) (-1 Tn) (0 ("o")) (1 V) ;	# per aquò o deviá legir
SELECT Pro IF (-2 PREP) (-1 VBinf) (0 ("o")) (1 V + Pers) ;	# per saber o deviá legir
SELECT Pro IF (-3 PREP) (-2 Pro) (-1 VBinf) (0 ("o")) (1 V + Pers) ;	# per o saber o deviá legir
SELECT Pro IF (-4 PREP) (-3 Pro) (-2 Pro) (-1 VBinf) (0 ("o")) (1 V + Pers) ;
SELECT Pro IF (-3 PREP) (-2 VBinf) (-1 AV) (0 ("o")) (1 V + Pers) ;
SELECT Pro IF (-4 PREP) (-3 Pro) (-2 VBinf) (-1 AV) (0 ("o")) (1 V + Pers) ;
SELECT Pro IF (-5 PREP) (-4 Pro) (-3 Pro) (-2 VBinf) (-1 AV) (0 ("o")) (1 V + Pers) ;

REMOVE Tn IF (0 DETdem + &&AcordSN) (1C N_AJ) (1 N_AJ + &&AcordSN) ;		# aqueths corredís

# DET

REMOVE ("d'unes") IF (-1C N_AJ) ;	# patch

REMOVE DET IF (-1 DET + &&AcordSN) (0 ("lei") + &&AcordSN) (NOT 1C N + Pl_strict) ;
SELECT DET + &&AcordSN IF (-1 ("son")) (0 ("lei") + &&AcordSN) (1C N + Pl_strict) (1 N + &&AcordSN) ;
SELECT DET IF (-1 ("son")) (0 ("lei")) (1C N + Pl_strict) ;
SELECT DET IF (-2 ("son")) (-1 AV) (0 ("lei")) (1C N + Pl_strict) ;
REMOVE DET IF (-2 DET + &&AcordSN) (-1 AJ + &&AcordSN) (0 ("lei") + &&AcordSN) ;
SELECT N IF (-1 De) (0 ("lei")) (NOT 1C N + Pl_strict) ;	# patch
REMOVE Pl_strict IF (0 ("<son>"i)) (NOT 1 Pl) (1 N_AJ + Sg) (NOT 1 AV OR DET OR VBpp OR PREP) ;	# son entrevista ; son ara un contrapoder ; se son fait
REMOVE Sg_strict IF (0 ("<son>"i)) (NOT 1 Sg) (1 N_AJ + Pl) ;
REMOVE DET IF (0 ("<son>"i)) (1 AV) (2C DET) ;	# son ara un contrapoder
REMOVE DET IF (0 ("<son>"i)) (1C AV OR ("pas")) (2 AV) (3C DET) ;
REMOVE DET IF (0 ("<son>"i)) (1 AV) (2C AV) (3C DET) ;
REMOVE V + Pers IF (-1 ("<son>"i)) ;

REMOVE Pro IF (-1C PREP) (0 DET) (NOT 1 VBinf OR VBger OR Pro OR unknown) ;

SELECT DET + &&AcordSN IF (1 ("un") + &&AcordSN) (2 Conjco) (3 DET) (4 ("altre") OR ("aute")) ;
SELECT Tn + &&AcordSN IF (-1C DET + &&AcordSN) (0 ("un") + &&AcordSN) ;
REMOVE DET IF (-1C/* DET) (NOT -1 DetDe) ;	# un cèrt estacament
REMOVE DET IF (0 DetDe) (1C DET) ;
REMOVE DET IF (0 DetDe) (1C PREDET) ;
REMOVE DET IF (0 DetDe) (1 PREDET) (2C DET) ;
REMOVE DET IF (0 ("pro de")) (1 DET) ;
REMOVE DET IF (0 DET) (NOT 1 N OR AJ OR Tn OR NP OR NUM OR AV OR PREAV OR Rel OR unknown) (NOT 0 DETdef LINK 1 De) ;
REMOVE DET + &&AcordSN IF (0 DET) (1 N_AJ OR NP OR Tn) (NOT 1 NUM OR AV OR PREAV OR Rel) (0 DET + &&AcordSN) (NOT 1 N_AJ + &&AcordSN OR NP + &&AcordSN OR Tn + &&AcordSN) ;	# Avèm entrevistat aquesta pendent la Hèsta
REMOVE SUB:1 DET IF (0/* DET) (1C DET) ;	# en los acès
SELECT AV IF (0 ("fòrça")) (1 AdvComp) ;
SELECT PREAV IF (0 ("fòrça")) (1C AJ OR AV) ;
SELECT PREAV IF (-1 N + &&AcordSN) (0 ("fòrça")) (1C AJ_PP + &&AcordSN) ;
SELECT AV IF (0 ("fòrça")) (1C VBpp) ;
SELECT AV IF (0 ("fòrça")) (1 AdvComp) ;
SELECT N IF (0 ("fòrça")) (-1 DET + FemSg) ;
SELECT N IF (-2 Mai) (-1 ("de")) (0 ("fòrça")) ;
SELECT SUB:1 N IF (-1 Mai) (0 ("de fòrça")) ;
SELECT AV IF (-2 BOS OR CM OR Conjsub OR Conjadv OR Rel) (0 ("de fòrça")) (1 CM OR EOS) ;
SELECT SUB:1 AV IF (-2 BOS OR CM OR Conjsub OR Conjadv OR Rel) (0 ("de fòrça")) (1 CM OR EOS) ;
SELECT SUB:1 DET IF (0 ("de fòrça")) (1C N_AJ) ;
SELECT AV IF (NOT -1 N_AJ) (0 ("de fòrça")) (1C V) ;
SELECT SUB:1 AV IF (NOT -1 N_AJ) (0 ("de fòrça")) (1C V) ;
SELECT AV IF (-1 V) (0 ("de fòrça")) ;
SELECT SUB:1 AV IF (-1 V) (0 ("de fòrça")) ;
SELECT SUB:1 DET IF (0 ("de fòrça")) (1 N_AJ) ;
SELECT AV IF (NOT -1 N_AJ) (0 ("de fòrça")) (1 V) ;
SELECT SUB:1 AV IF (NOT -1 N_AJ) (0 ("de fòrça")) (1 V) ;
SELECT SUB:1 N IF (-1 N_AJ) (0 ("de fòrça")) (NOT 1 N) ;
REMOVE AV IF (0 ("de fòrça")) ;
SELECT PREAV IF (-1C N_AJ + &&AcordSN) (0 ("fòrça")) (1 AJ + &&AcordSN) ;
SELECT PREDET + &&AcordSN IF (0 ("qual que siá") + &&AcordSN) (1 DET + &&AcordSN) (2 N_AJ + &&AcordSN) ;	# qual que siá son contengut
SELECT PREDET + &&AcordSN IF (0 ("quau que sia") + &&AcordSN) (1 DET + &&AcordSN) (2 N_AJ + &&AcordSN) ;
SELECT SUB:1 DET + &&AcordSN IF (-1 V) (0 ("tà")) (1 N_AJ + &&AcordSN) ;	# servirà taus joens
SELECT SUB:1 DET + &&AcordSN IF (-2 V) (-1 AV) (0 ("tà")) (1 N_AJ + &&AcordSN) ;	# servirà pas taus joens
SELECT SUB:1 DET + &&AcordSN IF (-3 V) (-2 AV) (-1 AV) (0 ("tà")) (1 N_AJ + &&AcordSN) ;
SELECT DETind + &&AcordSN IF (NOT -1/* DET OR NUM) (0 DETind + &&AcordSN) (1 N + &&AcordSN) ;	# un enfant ; lor cap de lista
SELECT DETind + &&AcordSN IF (NOT -1/* DET OR NUM) (0 DETind + &&AcordSN) (1 AJ + &&AcordSN) (NOT 0 ("força") OR ("horça")) ;	# un jaune
REMOVE PRON + Pos IF (0 DETpos + &&AcordSN) (1 N + &&AcordSN) ;	# lo son torn
REMOVE SUB:1 PRON + Pos IF (0/* DETpos + &&AcordSN) (1 N + &&AcordSN) ;	# deu son torn
REMOVE SUB:1 PRON + Pos IF (0/* DETpos + &&AcordSN) (1 AJ + &&AcordSN) (2 N + &&AcordSN) ;	# del sieu polit filh
REMOVE SUB:1 PRON + Pos IF (0/* DETpos + &&AcordSN) (1 VBpp + &&AcordSN) (2 N + &&AcordSN) ;	# del sieu aimat filh
SELECT N_AJ + &&AcordSN IF (-1 DETind + &&AcordSN) (0 N_AJ + &&AcordSN) ;
SELECT DET IF (0 DETind) (1C V) ;
SELECT DET IF (NOT -1/* DET) (0 DETind) (1 unknown) ;	# guess
REMOVE ("unir") IF (0 Un) (1C V + Pers OR VBpp) ;	# guess
REMOVE ("unir") IF (0 Un) (1C V + Pers OR VBpp) ;	# guess
REMOVE ("unir") IF (0 Un + &&AcordSN) (1C N_AJ + &&AcordSN) ;	# guess
SELECT PRON IF (0 Un) (1 De) (2 N + Sg) ;
SELECT PRON IF (0 Un + Masc) (1 De) (1/* DET + MascPl) (2 N + MascPl) ;
SELECT PRON IF (0 Un + Fem) (1 De) (2 DET + FemPl) (3 N + FemPl) ;
SELECT PRON IF (0 Un + Masc) (1 De) (1/* DET + MascPl) (2 AJ OR AdvComp) (3 N_AJ + MascPl) ;
SELECT PRON IF (0 Un + Fem) (1 De) (2 DET + FemPl) (2 AJ OR AdvComp) (4 N_AJ + FemPl) ;
REMOVE DET IF (0 Eth) (1 DET);
REMOVE DET IF (0 Eth) (1 Pas);
REMOVE DET IF (1 ("<a>"i));

SELECT DET + &&AcordSN IF (0 DET + &&AcordSN) (1 N_AJ + &&AcordSN) (2 N_AJ + &&AcordSN) (1C N_AJ) (2C N_AJ) ;
SELECT N_AJ + &&AcordSN IF (-1 DET + &&AcordSN) (0 N_AJ + &&AcordSN) (1 N_AJ + &&AcordSN) (0C N_AJ) (1C N_AJ) ;
SELECT N_AJ + &&AcordSN IF (-2 DET + &&AcordSN) (-1 N_AJ + &&AcordSN) (0 N_AJ + &&AcordSN) (-1C N_AJ) (0C N_AJ) ;

REMOVE PRON IF (0 DET + Pos) (1 unknown) ;

SELECT SUB:1 Masc IF (0/* ("lo")) (1 ("díser") OR ("har")) ;	# que'u díser
SELECT SUB:1 Masc IF (0/* ("lo")) (1 Pro) (2 ("díser") OR ("har")) ;	# que'u te díser

SELECT VBpp IF (-1 ("un còp")) ;
SELECT VBpp IF (-2 ("un") + MascSg) (-1 ("còp")) ;

REMOVE ("corsa") OR ("corses") IF (0 ("cors")) (1 De) (2 Lenga);

SELECT Fem IF (0 ("colèra")) (NOT -1/* Masc_strict) (NOT 1 Masc_strict) ;
SELECT Fem IF (0 ("chantilly")) (NOT -1/* Masc_strict) (NOT 1 Masc_strict) ;
SELECT Fem IF (0 ("pub")) (NOT -1/* Masc_strict) (NOT 1 Masc_strict) ;

REMOVE AJ IF (0 Las) (1 N + FemPl) ;	# las pomas
REMOVE AJ IF (0 Las) (1 NP + FemPl) ;	# las Corbièras
REMOVE AJ IF (0 Las) (1 NUM) (2 N + FemPl) ;	# las 200 pomas
REMOVE AJ IF (0 Las) (1 NUM) (2 AJ + FemPl) (3 N + FemPl) ;	# las 200 quitas pomas
REMOVE AJ IF (0 Las) (1 AJ OR AdvComp) (2 N_AJ + FemPl) ;
REMOVE AJ IF (0 Las) (1 De) (NOT 2 VBinf OR Pro) ;	# guess

SELECT N IF (-1 PREP) (0 ("sau")) ;
SELECT N IF (-1 DET + &&AcordSN) (0 ("sau") + &&AcordSN) ;
SELECT SUB:1 DET + &&AcordSN IF (NOT -1/* PREP) (0 PREP) (1C N_AJ_PP + &&AcordSN) ;	# dei comtes

# NUM

SELECT NUM IF (-1 ("numero") OR ("numèro") OR ("numeró")) (0 Un);
REMOVE NUM IF (NOT -1 ("numero") OR ("numèro") OR ("numeró")) (0 Un);

# PREAV

REMOVE PREAV IF (NOT 1 AJ OR AV OR VBpp) ;
SELECT AV IF (-1 Ser + &&AcordSP) (0 ("plan")) (1 VBpp + &&AcordSP) ;
SELECT AV IF (-2 Ser + &&AcordSP) (-1 AV) (0 ("plan")) (1 VBpp + &&AcordSP) ;
SELECT AV IF (-1 Ser + VBinfger) (0 ("plan")) (1 VBpp) ;
SELECT AV IF (-2 Ser + VBinfger) (-1 AV) (0 ("plan")) (1 VBpp) ;
SELECT AV IF (-1 Ser + &&AcordSP) (0 ("plan")) (1 VBpp + &&AcordSP) ;
SELECT AV IF (-2 Ser + &&AcordSP) (-1 AV) (0 ("plan")) (1 VBpp + &&AcordSP) ;
SELECT AV IF (-1C V) (0 ("plan")) (NOT 1 AJ) ;	# parlar plan
SELECT AV IF (-2C V) (-1 AV OR PREAV OR PRencl) (0 ("plan")) (NOT 1 AJ) ;	# parlar pas plan
SELECT AV IF (-3C V) (-2 AV OR PRencl) (-1 AV OR PREAV) (0 ("plan")) (NOT 1 AJ) ;	# parlar pas hèra plan
SELECT PREAV IF (-1C V) (0 ("plan")) (1 AJ) ;	# parlar plan fòrt
SELECT AV IF (0 ("<plan>"i)) (1 VBinf) (-1 PREP) ;	# de/a/per plan parlar

SELECT AV IF (-1C Haver) (0 PREAV) (1 VBpp) ;	# ai plan ascotat
SELECT AV IF (-2C Haver) (-1 AV) (0 PREAV) (1 VBpp) ;	# ai pas plan ascotat
REMOVE AV IF (0 PREAV) (0 AV) (1C AJ OR AV OR VBpp) ;
REMOVE PREAV IF (0 PREAV) (0 AV) (1C V) ;
REMOVE PREAV IF (0 PREAV) (0 AV) (NOT 1 AJ OR AV OR VBpp) ;
SELECT PREAV IF (-1 N + &&AcordSN) (NOT -1 Vconj) (0 AV OR ("mal")) (1 AJ_PP + &&AcordSN) ;
SELECT PREAV IF (-1 AJ + &&AcordSN) (NOT -1 Vconj) (0 AV OR ("mal")) (1 AJ_PP + &&AcordSN) ;
SELECT PREAV IF (-1 Ser + &&AcordSP) (0 AV OR ("mal")) (1 VBpp + &&AcordSP) ;
SELECT PREAV IF (-2 Ser + &&AcordSP) (-1 AV) (0 AV OR ("mal")) (1 VBpp + &&AcordSP) ;
SELECT PREAV IF (-1 Ser + VBinfger OR ("mal")) (0 AV) (1 VBpp) ;
SELECT PREAV IF (-2 Ser + VBinfger) (-1 AV) (0 AV OR ("mal")) (1 VBpp) ;

# CNJADV / ADV

SELECT NP OR N IF (NOT -1 BOS) (0 ("<Puèi>")) ;
SELECT Conjadv IF (0 ("puèi") OR ("puish") LINK NOT 0 ("<puish que>"i)) (1C V + Pers) ;
SELECT Conjadv IF (0 ("puèi") OR ("puish") LINK NOT 0 ("<puish que>"i)) (1 AV OR Pro) (2C V + Pers) ;
SELECT Conjadv IF (0 ("puèi") OR ("puish") LINK NOT 0 ("<puish que>"i)) (1 AV OR Pro) (2 AV OR Pro) (3C V + Pers) ;
SELECT Conjadv IF (0 ("puèi") OR ("puish") LINK NOT 0 ("<puish que>"i)) (1 AV OR Pro) (2 AV OR Pro) (3 AV OR Pro) (4C V + Pers) ;

# ADJ

REMOVE AJ IF (-1 ("en")) (NOT 1 Conjco OR N OR NP) ;
SELECT AJ + &&AcordSN IF (0 AJ + MajIni + &&AcordSN) (1 NP + &&AcordSN) ;	# en Naut Comenge

REMOVE AJ IF (-1 ("de")) (0 VBinf) (1 PREP OR EOS) ;	# es riscat d'especular

LIST Amic = "amic" "enemic" "vesin" "collèga" "companh" "companhon" "camarada" ;
SELECT AJ IF (0 ("car") + Masc + &&AcordSN) (1 N + &&AcordSN) ;
SELECT AJ IF (0 ("car") + &&AcordSN) (1 Familha + N + &&AcordSN) ;
SELECT AJ IF (0 ("car") + &&AcordSN) (1 Amic + N + &&AcordSN) ;
SELECT AJ IF (-1 BOS) (0 ("car") + &&AcordSN) (1 N + &&AcordSN) ;

SELECT AJ IF (0 ("pauc")) (1 AdjPre + Pl + &&AcordSN) (2 N + Pl + &&AcordSN) ;	# paucs bons amics
SELECT AJ IF (-1 ("pauc")) (0 AdjPre + Pl + &&AcordSN) (1 N + Pl + &&AcordSN) ;	# paucs bons amics
REMOVE AJ IF (0 ("pauc")) ;

SELECT AJ IF (-1 NUM) (0 ("quite") + &&AcordSN) (1 N + &&AcordSN) ;	# dos quites mainatges
SELECT AJ IF (-1 NUM) (0 ("quiti") + &&AcordSN) (1 N + &&AcordSN) ;
SELECT NUM IF (0 NUM) (1 ("quite") + &&AcordSN) (2 N + &&AcordSN) ;	# dos quites mainatges
SELECT NUM IF (0 NUM) (1 ("quiti") + &&AcordSN) (2 N + &&AcordSN) ;	# dos quites mainatges
SELECT AJ IF (-1 DETdef OR NUM) (0 ("quite")) (1 unknown) ;
SELECT AJ IF (-1 DETdef OR NUM) (0 ("brave")) (1 unknown) ;

SELECT N + FemSg IF (-2 ("a") + PREP) (-1 DETdef + FemSg) (0 ("mòda")) ;
SELECT AJ + FemSg IF (-2 ("a") + PREP) (-1 DETdef + FemSg) (0 Gentilici + FemSg) (NOT 1 AJ OR VBpp) ;	# a l'occidentala


# ADJ POS

REMOVE AJ + Pos IF (NOT -1 Ser OR N) (0 AJ + Pos) ;
REMOVE AJ + Pos IF (-1 N) (0 AJ + Pos) (0 Ser + PRS) (-1* Que OR Conjadv) ;	# que l'excepcion siá faita
REMOVE Conjco IF (-1 N) (0 ("siá")) (0 Ser + PRS) (-1* Que OR Conjadv) ;	# que l'excepcion siá faita
SELECT Conjco IF (-1 N) (0 ("siá")) (-1* ("siá")) ;
SELECT Conjco IF (-1 N) (0 ("siá")) (1* ("siá")) ;
REMOVE AJ + Pos IF (-1 N) (0 AJ + Pos) (0 Pro) (1 Pro OR V) ;	# lo ministèri lor auriá daissat
REMOVE ("soar") IF (-1 N + &&AcordSN) (0 AJ + Pos + &&AcordSN);	# creacions soas
SELECT DET + Pos IF (-1 N) (0 AJ + Pos) (0 DET + Pos + &&AcordSN) (1 N + &&AcordSN OR AdjPre + &&AcordSN) ;	# ofrisson al public lor darrièr disc
#REMOVE AJ + Pos IF (NOT -1 Ser OR ("lenga") OR ("cultura") OR ("casa")) (0 AJ + Pos) ;
#REMOVE AJ + Pos IF (NOT -2 DETdef + FemSg) (-1 ("lenga") OR ("cultura")) (0 AJ + Pos) ;
#SELECT AJ + Pos + &&AcordSN IF (-1 ("casa") + &&AcordSN) (0 AJ + Pos) (NOT 1 AJ + &&AcordSN) ;

REMOVE N_AJ + Pl_strict IF (-1C DET + Sg_strict) (0 N_AJ + Sg) ;
REMOVE N_AJ + Sg_strict IF (-1C DET + Pl_strict) (0 N_AJ + Pl) ;		# aqueths corredís
REMOVE N_AJ + Fem_strict IF (-1C DET + Masc_strict) (0 N_AJ + Masc) ;
REMOVE N_AJ + Masc_strict IF (-1C DET + Fem_strict) (0 N_AJ + Fem) ;

# N

REMOVE AJ (-1 N) (-1 ("<.* de>"r)) (0 DET OR N) ;	# una remesa en causa de lor poder

REMOVE N (NOT -1 DET + FemSg) (0 ("fauta de")) ;
SELECT N (-1 DET + FemSg) (0 ("fauta de")) ;

REMOVE N (-1 ("per")) (0 ("dit")) ;

REMOVE N (-1 ("per") OR ("tà") OR ("entà") OR ("enta") OR ("ta") OR ("ende")) (NOT -1/* DET) (0 VBinf) ;		# tà díser
REMOVE N (-2 ("per") OR ("tà") OR ("entà") OR ("enta") OR ("ta") OR ("ende")) (NOT -2/* DET) (-1 Pro) (0 VBinf) (NOT 0 ("avenir")) (NOT 1 AJ OR De) ;		# tà lo díser ; per l'avenir ; per lo caire cultural
REMOVE N (-3 ("per") OR ("tà") OR ("entà") OR ("enta") OR ("ta") OR ("ende")) (NOT -3/* DET) (-2 Pro) (-1 Pro) (0 VBinf) ;		# tà lo i díser

SELECT VBinf IF (-2 ("empachar")) (-1 De) (0 N) ;	# empachar de militar
SELECT VBinf IF (-2 Venir) (-1 De) (0 N) ;
SELECT VBinf IF (-2 ("permetre") OR ("perméter")) (-1 De) (0 N) ;
SELECT VBinf IF (-2 ("defendre") OR ("defénder") OR ("enebir") OR ("interdire") OR ("interdíser") OR ("proïbir")) (-1 De) (0 N) ;
SELECT VBinf IF (-2 ("acabar") OR ("fenir") OR ("finir")) (-1 De) (0 N) ;
SELECT VBinf IF (-3 ("empachar")) (-2 De) (-1 Pro) (0 N) ;	# empachar de l'anular
SELECT VBinf IF (-3 Venir) (-2 De) (-1 Pro) (0 N) ;
SELECT VBinf IF (-3 ("permetre") OR ("perméter")) (-2 De) (-1 Pro) (0 N) ;
SELECT VBinf IF (-3 ("defendre") OR ("defénder") OR ("enebir") OR ("interdire") OR ("interdíser") OR ("proïbir")) (-2 De) (-1 Pro) (0 N) ;
SELECT VBinf IF (-3 ("acabar") OR ("fenir") OR ("finir")) (-2 De) (-1 Pro) (0 N) ;

SELECT N OR PRON OR NP IF (-1C PREP) (NOT -1/* N OR Itg) (1 EOS OR Rpar) ;	# ambe fòrça. ; a res.
SELECT N OR PRON OR NP OR VBinf IF (-1C PREP) (NOT -1/* N OR Rel OR Conjadv OR Conjsub OR Itg) (1C PREP) (NOT 0 ("tròp") OR ("pauc") OR ("pòc")) ;	# discors de fin d'annada
SELECT N OR PRON OR NP OR VBinf IF (-1C PREP) (NOT -1/* N OR Rel OR Conjadv OR Conjsub OR Itg) (1C Rel OR Que OR Qui) ;
SELECT N OR PRON OR NP OR VBinf IF (-1C PREP) (NOT -1/* N OR Rel OR Conjadv OR Conjsub OR Itg) (1C Conjco OR ("e") OR ("o")) ;
SELECT N IF (-1C PREP) (NOT -1/* N OR Rel OR Conjadv OR Conjsub OR Itg) (0 N + &&AcordSP) (1 (",")) (2 N + &&AcordSP) (3 (",") OR ("e") OR ("o") OR ("ni")) (4 N + &&AcordSP) ;

SELECT N + &&AcordSN OR NP + &&AcordSN IF (-1C/* DET OR Artcontrsg OR Artcontrpl) (0C N) (-1/* DET + &&AcordSN) ;	# los acès ; deus autobús
SELECT N + &&AcordSN OR NP + &&AcordSN IF (0C N) (1C AJ) (1 AJ + &&AcordSN) ;	# de autobús blus

SELECT VBpp + &&AcordSN IF (-1C N_AJ + &&AcordSN) (0 ("dire") + &&AcordSN OR ("díder") + &&AcordSN) (1 ("«")) ;
SELECT N + &&AcordSN OR PRON + &&AcordSN OR NP + &&AcordSN IF (-1C PREP) (0C ("dire") + VBpp + &&AcordSN OR ("díder") + VBpp + &&AcordSN) ;

REMOVE V + Pers IF (-2C V + Pers OR VBinf OR VBger) (-1 DET + &&AcordSN) (0 N + &&AcordSN) ;
REMOVE V + Pers IF (-3C V + Pers OR VBinf OR VBger) (-2 AV) (-1 DET + &&AcordSN) (0 N + &&AcordSN) ;
REMOVE V + Pers IF (-4C V + Pers OR VBinf OR VBger) (-3 AV) (-2 AV) (-1 DET + &&AcordSN) (0 N + &&AcordSN) ;
REMOVE V + Pers IF (-3C VBaux + Pers OR VBinf OR VBger) (-2C VBpp) (-1 DET + &&AcordSN) (0 N + &&AcordSN) ;
REMOVE V + Pers IF (-4C VBaux + Pers OR VBinf OR VBger) (-3 AV) (-2C VBpp) (-1 DET + &&AcordSN) (0 N + &&AcordSN) ;
REMOVE V + Pers IF (-5C VBaux + Pers OR VBinf OR VBger) (-4 AV) (-3 AV) (-2C VBpp) (-1 DET + &&AcordSN) (0 N + &&AcordSN) ;
REMOVE V + Pers IF (-4C VBaux + Pers OR VBinf OR VBger) (-3C VBpp) (-2 AV) (-1 DET + &&AcordSN) (0 N + &&AcordSN) ;

REMOVE V + Pers IF (-2C PREP) (-1 N + &&AcordSN) (0 AJ + &&AcordSN) ;
REMOVE V + Pers IF (-2C PREP) (-1 AJ + &&AcordSN) (0 N + &&AcordSN) ;	# dins de vièlhas minas

# N / AJ

SELECT AJ IF (0 ("nòrd")) (0 (META:/-/r)) ;
SELECT AJ IF (0 ("sud")) (0 (META:/-/r)) ;

SELECT SUB:1 N IF (0 ("<de mai>"i)) (1 ("passat")) ;
SELECT AJ IF (-1 ("<de mai>"i)) (0 ("passat")) ;
SELECT SUB:1 AV IF (0 ("<de mai>"i)) (1 AJ OR VBpp OR AV) ;
SELECT AJ OR AV IF (-1 ("<de mai>"i)) (0 AJ OR VBpp OR AV) ;
SELECT AJ IF (-1C PREP) (-1/* N + &&AcordSP) (0 AJ + &&AcordSP) ;
REMOVE AJ IF (-1C/1 PREP) (0 N + &&AcordSP LINK NOT 0 AdjPre) (1C SN_End) ; 	# un cap de can
SELECT N + &&AcordSN IF (-1C/1 PREP) (0 N + &&AcordSN LINK NOT 0 AdjPre) (1 AJ + &&AcordSN) ;
SELECT AJ + &&AcordSN IF (-1C/1 PREP) (0 AdjPre + &&AcordSN) (1 N + &&AcordSN) ;
SELECT N + &&AcordSN IF (-2C/1 PREP) (-1 AdjPre + &&AcordSN) (0 N + &&AcordSN) ;
SELECT DET + &&AcordSN IF (-1C PREP) (0 DET + &&AcordSN) (1C N_AJ + &&AcordSN) ;
SELECT DET + &&AcordSN IF (-1C/1 PREP) (0 DET + &&AcordSN) (1 N_AJ + &&AcordSN) ;

REMOVE AJ (-1C PREP LINK NOT 0 Artcontrsg OR Artcontrpl) (0 N LINK NOT 0 AdjPre) (NOT 1C N) ;
REMOVE AJ (NOT -2 DET OR Artcontrsg OR Artcontrpl) (-1 DET + &&AcordSN) (0 N + &&AcordSN LINK NOT 0 AdjPre) (NOT 1 N) ;
SELECT AJ (NOT -2 DET OR Artcontrsg OR Artcontrpl) (-1 DET + &&AcordSN) (0 AJ + &&AcordSN) (1C N) (1 N + &&AcordSN) ;
REMOVE AJ (-1 Artcontrsg) (0 N + MascSg LINK NOT 0 AdjPre) (NOT 1C N) (1 N + MascSg) ;
SELECT AJ (-1 Artcontrsg) (0 AJ + MascSg) (1C N) (1 N + MascSg) ;
REMOVE AJ (-1 Artcontrpl) (0 N + MascPl LINK NOT 0 AdjPre) (NOT 1C N) (1 N + MascPl) ;
SELECT AJ (-1 Artcontrpl) (0 AJ + MascPl) (1C N) (1 N + MascPl) ;

REMOVE AJ (-1C PREP LINK NOT 0 Artcontrsg OR Artcontrpl) (0 N LINK NOT 0 AdjPre) (NOT 1C N) (1 N + &&AcordSN) ;

REMOVE AJ IF (-1C Verb LINK NOT 0 VBpp OR Semblar_Pareisser OR Devenir) (0 N) (1 Que OR Qui OR Rel) ;
REMOVE N IF (-2 PRONRef) (-1 Far) (0 AJ) ;	# se far gran

SELECT NP + &&AcordSN IF (-2 DET + &&AcordSN) (-1 AdjPre + &&AcordSN) (0 NP + &&AcordSN) (NOT -1 ("nau")) ;
SELECT NP + &&AcordSN IF (-2/* DET + &&AcordSN) (-1 AdjPre + &&AcordSN) (0 NP + &&AcordSN) (NOT -1 ("nau")) ;
SELECT N + &&AcordSN IF (-2 DET + &&AcordSN) (-1 AdjPre + &&AcordSN) (0 N + &&AcordSN) (NOT -1 ("nau")) ;
SELECT N + &&AcordSN IF (-2/* DET + &&AcordSN) (-1 AdjPre + &&AcordSN) (0 N + &&AcordSN) (NOT -1 ("nau")) ;
SELECT AJ + &&AcordSN IF (-1 DET + &&AcordSN) (0 AdjPre + &&AcordSN) (1 NP + &&AcordSN) (NOT 0 ("nau")) ;
SELECT AJ + &&AcordSN IF (-1/* DET + &&AcordSN) (0 AdjPre + &&AcordSN) (1 NP + &&AcordSN) (NOT 0 ("nau")) ;
SELECT AJ + &&AcordSN IF (-1 DET + &&AcordSN) (0 AdjPre + &&AcordSN) (1 N + &&AcordSN) (NOT 0 ("nau")) ;
SELECT AJ + &&AcordSN IF (-1/* DET + &&AcordSN) (0 AdjPre + &&AcordSN) (1 N + &&AcordSN) (NOT 0 ("nau")) ;
SELECT AJ + &&AcordSN IF (-1 De) (0 AdjPre + &&AcordSN) (1 N + &&AcordSN) (NOT 0 ("nau")) ;
SELECT AJ + &&AcordSN OR AV IF (-1 CM) (0 AdjPre + &&AcordSN) (1 N + &&AcordSN) (NOT 0 ("nau")) ;
SELECT AJ + &&AcordSN IF (0 ("mièg") + &&AcordSN OR ("miei") + &&AcordSN) (1C N) (0 N + &&AcordSN) ;	# mièg torn

SELECT NP + &&AcordSN IF (-1 DET + &&AcordSN) (0 NP + &&AcordSN) (1 AJ + &&AcordSN) ;
SELECT NP + &&AcordSN IF (-1/* DET + &&AcordSN) (0 NP + &&AcordSN) (1 AJ + &&AcordSN) ;
SELECT N + &&AcordSN IF (-1 DET + &&AcordSN) (0 N + &&AcordSN) (1 AJ + &&AcordSN) ;
SELECT N + &&AcordSN IF (-1/* DET + &&AcordSN) (0 N + &&AcordSN) (1 AJ + &&AcordSN) ;
SELECT AJ + &&AcordSN IF (-1 NUM) (0 AdjPre + Pl + &&AcordSN) (1 N + Pl + &&AcordSN) ;
SELECT N + &&AcordSN IF (-1 NUM + &&AcordSN) (0 N + &&AcordSN) (1 AJ + &&AcordSN) ;
SELECT N + &&AcordSN IF (-1 DET + &&AcordSN) (0 N + &&AcordSN) (1C VBpp + &&AcordSN) ;
SELECT N + &&AcordSN IF (-1/* DET + &&AcordSN) (0 N + &&AcordSN) (1C VBpp + &&AcordSN) ;
SELECT N + &&AcordSN IF (-1 NUM + &&AcordSN) (0 N + &&AcordSN) (1C VBpp + &&AcordSN) ;
REMOVE AJ IF (-1C PREP) (0 NP + &&AcordSN) (1 AJ + &&AcordSN) (NOT 0 AdjPre + &&AcordSN LINK 1 N + &&AcordSN) ;
REMOVE AJ IF (-1C PREP) (0 N + &&AcordSN) (1 AJ + &&AcordSN) (NOT 0 AdjPre + &&AcordSN LINK 1 N + &&AcordSN) ;

SELECT NP + &&AcordSN IF (-2 DET + &&AcordSN) (-1C AJ) (-1 AJ + &&AcordSN) (0 NP + &&AcordSN) ;
SELECT N + &&AcordSN IF (-2 DET + &&AcordSN) (-1C AJ) (-1 AJ + &&AcordSN) (0 N + &&AcordSN) ;
SELECT AJ + &&AcordSN IF (-2 DET + &&AcordSN) (-1C NUM OR ("tres")) (-1 NUM + &&AcordSN) (0 AdjPre + &&AcordSN) (1 N + &&AcordSN) ;	# las doas primièras annadas
SELECT N + &&AcordSN IF (-2 DET + &&AcordSN) (-1C NUM OR ("tres")) (-1 NUM + &&AcordSN) (0 N + &&AcordSN) ;
SELECT AJ + &&AcordSN IF (-2 DET + &&AcordSN) (-1C NUM OR ("tres")) (0 AdjPre + &&AcordSN) (1 N + &&AcordSN) ;	# las 2 primièras annadas
SELECT N + &&AcordSN IF (-2 DET + &&AcordSN) (-1C NUM OR ("tres")) (0 N + &&AcordSN) ;

SELECT AJ + &&AcordSN IF (-2 DET + &&AcordSN) (-1C N + &&AcordSN) (0 AJ + &&AcordSN) (NOT 1 ("per")) (NOT 0 PREP OR VBger) ;
SELECT AJ + &&AcordSN IF (-2/* DET + &&AcordSN) (-1C N + &&AcordSN) (0 AJ + &&AcordSN) (NOT 1 ("per")) (NOT 0 PREP OR VBger) ;
SELECT AJ + &&AcordSN IF (-2 NUM + &&AcordSN) (-1C N + &&AcordSN) (0 AJ + &&AcordSN) (NOT 1 ("per")) (NOT 0 PREP OR VBger) ;

SELECT AJ + &&AcordSN IF (-2C N + &&AcordSN) (-1 AJ + &&AcordSN) (0 AJ + &&AcordSN) (NOT 1 ("per")) (NOT 0 PREP OR VBger) ;
SELECT AJ + &&AcordSN IF (-2C N + &&AcordSN) (-1 AJ + &&AcordSN) (0 AJ + &&AcordSN) (NOT 1 ("per")) (NOT 0 PREP OR VBger) ;
SELECT AJ + &&AcordSN IF (-2C N + &&AcordSN) (-1 AJ + &&AcordSN) (0 AJ + &&AcordSN) (NOT 1 ("per")) (NOT 0 PREP OR VBger) ;
SELECT AJ + &&AcordSN IF (-3 DET + &&AcordSN) (-2 AJ + &&AcordSN) (-1C N + &&AcordSN) (0 AJ + &&AcordSN) (NOT 1 ("per")) (NOT 0 PREP OR VBger) ;
SELECT AJ + &&AcordSN IF (-3/* DET + &&AcordSN) (-2 AJ + &&AcordSN) (-1C N + &&AcordSN) (0 AJ + &&AcordSN) (NOT 1 ("per")) (NOT 0 PREP OR VBger) ;
SELECT AJ + &&AcordSN IF (-3 NUM + &&AcordSN) (-2 AJ + &&AcordSN) (-1C N + &&AcordSN) (0 AJ + &&AcordSN) (NOT 1 ("per")) (NOT 0 PREP OR VBger) ;

SELECT AJ + &&AcordSN IF (-3C N + &&AcordSN) (-2 AJ + &&AcordSN) (-1 AJ + &&AcordSN) (0 AJ + &&AcordSN) (NOT 1 ("per")) (NOT 0 PREP OR VBger) ;
SELECT AJ + &&AcordSN IF (-3C N + &&AcordSN) (-2 AJ + &&AcordSN) (-1 AJ + &&AcordSN) (0 AJ + &&AcordSN) (NOT 1 ("per")) (NOT 0 PREP OR VBger) ;
SELECT AJ + &&AcordSN IF (-3C N + &&AcordSN) (-2 AJ + &&AcordSN) (-1 AJ + &&AcordSN) (0 AJ + &&AcordSN) (NOT 1 ("per")) (NOT 0 PREP OR VBger) ;

SELECT AJ + &&AcordSN IF (-2C N + &&AcordSN) (-1 Mai OR Pus) (0 AJ + &&AcordSN) ;

SELECT N + &&AcordSN IF (-1C DET + &&AcordSN) (0 AJ) (0 N + &&AcordSN) (1C NP) ;	# la regente Céline Colau

SELECT AJ + &&AcordSN IF (-1 DET + &&AcordSN) (0 AdjPre + &&AcordSN) (1 NUM) (2 N + &&AcordSN) ;	# aquestes darrièrs 10 ans
SELECT N + &&AcordSN IF (-3 DET + &&AcordSN) (-2 AdjPre + &&AcordSN) (-1 NUM) (0 N + &&AcordSN) ;

SELECT N IF (-1C PREP) (NOT -1/* N OR Rel OR Conjadv OR Conjsub OR Itg) (1C EOS OR Rel) ;	# dels politics
SELECT N OR VBinf IF (-1C PREP) (NOT -1/* N OR Rel OR Conjadv OR Conjsub OR Itg) (1C PREP) ;	# de levar d'impòstes
SELECT N + &&AcordSN IF (-1C DET + &&AcordSN) (1C EOS OR PREP OR Rel) ;	# los politics
REMOVE N OR V + Pers IF (-1C Semblar_Pareisser + &&AcordSP LINK NOT 0 VBpp) (0 AJ + &&AcordSP) (1C EOS OR CM OR Conjco OR PREP OR Rel OR ("<a>"i)) ;	# las dificultats semblan màgers
REMOVE N OR V + Pers IF (-2 Haver + &&AcordSP) (-1 Semblar_Pareisser + VBpp) (0 AJ + &&AcordSP) (1C EOS OR CM OR Conjco OR PREP OR Rel OR ("<a>"i)) ;	# las dificultats an semblat màgers
REMOVE N OR V + Pers IF (-3 Haver + &&AcordSP) (-2 AV) (-1 Semblar_Pareisser + VBpp) (0 AJ + &&AcordSP) (1C EOS OR CM OR Conjco OR PREP OR Rel OR ("<a>"i)) ;	# las dificultats an pas semblat màgers
REMOVE N OR V + Pers IF (-3 Haver + &&AcordSP) (-2 Semblar_Pareisser + VBpp) (-1 AV) (0 AJ + &&AcordSP) (1C EOS OR CM OR Conjco OR PREP OR Rel OR ("<a>"i)) ;	# an semblat mai caras
REMOVE N OR V + Pers IF (-4 Haver + &&AcordSP) (-3 AV) (-2 Semblar_Pareisser + VBpp) (-1 AV) (0 AJ + &&AcordSP) (1C EOS OR CM OR Conjco OR PREP OR Rel OR ("<a>"i)) ;	# an pas semblat mai caras
REMOVE N OR V + Pers IF (-1C Devenir + &&AcordSP LINK NOT 0 VBpp) (0 AJ + &&AcordSP) (1C EOS OR CM OR Conjco OR PREP OR Rel) ;	# las dificultats venon màgers
REMOVE N OR V + Pers IF (-2 Ser + &&AcordSP) (-1 Devenir + VBpp) (0 AJ + &&AcordSP) (1C EOS OR CM OR Conjco OR PREP OR Rel) ;	# las dificultats son venudas màgers
REMOVE N OR V + Pers IF (-3 Ser + &&AcordSP) (-2 AV) (-1 Devenir + VBpp + &&AcordSP) (0 AJ + &&AcordSP) (1C EOS OR CM OR Conjco OR PREP OR Rel) ;	# las dificultats son pas venudas màgers
REMOVE N OR V + Pers IF (-3 Ser + &&AcordSP) (-2 Devenir + VBpp + &&AcordSN) (-1 AV) (0 AJ + &&AcordSP) (1C EOS OR CM OR Conjco OR PREP OR Rel) ;	# son venudas caras
REMOVE N OR V + Pers IF (-4 Ser + &&AcordSP) (-3 AV) (-2 Devenir + VBpp + &&AcordSP) (-1 AV) (0 AJ + &&AcordSP) (1C EOS OR CM OR Conjco OR PREP OR Rel) ;	# son pas venudas caras
REMOVE N IF (-1C ("faser") LINK NOT 0 VBpp) (0 AJ) (1C EOS OR PREP OR Rel) ;	# las dificultats semblan màgers
REMOVE N IF (-2 Haver) (-1 ("faser") + VBpp) (0 AJ) (1C EOS OR PREP OR Rel) ;	# las dificultats an semblat màgers
SELECT AJ OR AV IF (-1 Vener) (0 ("car")) ;
REMOVE AJ IF (-1C Verb LINK NOT 0 VBpp) (0 N) (1C EOS OR PREP OR Rel) ;	# demani novèlas de son pair
REMOVE AJ IF (-2 Haver) (-1C Verb + VBpp) (0 N) (1C EOS OR PREP OR Rel) ;	# an demanat novèlas de son pair
SELECT N + &&AcordSP IF (-3C PREP) (-2 N + &&AcordSP) (-1 ("e") OR O_cnjcoo OR ("ni")) (0C N_AJ_PP) (1C EOS OR Rel) (NOT 0 ("mièg") OR ("miei") OR ("quart")) (NOT -2 ("afars estrangièrs") OR ("afars exteriors")) ;	# dels politics e responsables
SELECT N + &&AcordSP OR VBinf IF (-3C PREP) (-2 N + &&AcordSP) (-1 ("e") OR O_cnjcoo OR ("ni")) (0C N_AJ_PP) (1C PREP) (NOT 0 ("mièg") OR ("miei") OR ("quart")) (NOT -2 ("afars estrangièrs") OR ("afars exteriors")) ;	# dels politics e responsables
SELECT N + &&AcordSP IF (-3C DET + &&AcordSN) (-2 N + &&AcordSP) (-1 ("e") OR O_cnjcoo OR ("ni")) (0C N_AJ_PP) (1C EOS OR PREP OR Rel) (NOT 0 ("mièg") OR ("miei") OR ("quart")) (NOT -2 ("afars estrangièrs") OR ("afars exteriors")) ;	# dels politics e responsables
SELECT N + &&AcordSP IF (-5C PREP) (-4 N + &&AcordSP) (-3 (",")) (-2 N + &&AcordSP) (-1 ("e") OR O_cnjcoo OR ("ni")) (0C N_AJ_PP) (1C EOS OR Rel) (NOT 0 ("mièg") OR ("miei") OR ("quart")) (NOT -2 ("afars estrangièrs") OR ("afars exteriors")) ;	# dels politics e responsables
SELECT N + &&AcordSP OR VBinf IF (-5C PREP) (-4 N + &&AcordSP) (-3 (",")) (-2 N + &&AcordSP) (-1 ("e") OR O_cnjcoo OR ("ni")) (0C N_AJ_PP) (1C PREP) (NOT 0 ("mièg") OR ("miei") OR ("quart")) (NOT -2 ("afars estrangièrs") OR ("afars exteriors")) ;	# dels politics e responsables
SELECT N + &&AcordSP IF (-5C DET + &&AcordSN) (-4 N + &&AcordSN + &&AcordSP) (-3 (",")) (-2 N + &&AcordSP) (-1 ("e") OR O_cnjcoo OR ("ni")) (0C N_AJ_PP) (1C EOS OR PREP OR Rel) (NOT 0 ("mièg") OR ("miei") OR ("quart")) (NOT -2 ("afars estrangièrs") OR ("afars exteriors")) ;	# dels politics e responsables

REMOVE N OR VBpp (-1 ("trobar") OR ("considerar") OR ("jutjar")) (0 AJ) ;
REMOVE N OR VBpp (-2 ("trobar") OR ("considerar") OR ("jutjar")) (-1 AV) (0 AJ) ;
REMOVE N OR VBpp (-3 ("trobar") OR ("considerar") OR ("jutjar")) (-2 AV) (-1 AV) (0 AJ) ;

SELECT N + &&AcordSN IF (-1 AdjOrd + &&AcordSN) (0 N + &&AcordSN) (1 Mai) (2 AJ + &&AcordSN) ;	# segond club mai ancian
SELECT AJ + &&AcordSN IF (0 AdjOrd + &&AcordSN) (1 N + &&AcordSN) (2 Mai) (3 AJ + &&AcordSN) ;	# segond club mai ancian
SELECT AV IF (-2 AdjOrd + &&AcordSN) (-1 N + &&AcordSN) (0 Mai) (1 AJ + &&AcordSN) ;	# segond club mai ancian
SELECT N + &&AcordSN IF (-3 AdjOrd + &&AcordSN) (-2 Mai) (-1 AJ + &&AcordSN) (0 N + &&AcordSN) ;	# segond mai ancian club
SELECT AJ + &&AcordSN IF (0 AdjOrd + &&AcordSN) (1 Mai) (2 AJ + &&AcordSN) (3 N + &&AcordSN) ;	# segond mai ancian club
SELECT AV IF (-1 AdjOrd + &&AcordSN) (0 Mai) (1 AJ + &&AcordSN) (2 N + &&AcordSN) ;	# segond mai ancian club

# distincio entre MascPl i FemPl (típicament en terminacions en -es)
#SELECT MascPl IF (-1C MascPl) (0 N + MascPl) (NOT 0 ("pel")) ;	# Pb: cap de las 200 comunas
#SELECT FemPl IF (-1C FemPl) (0 N + FemPl) ;
#SELECT MascPl IF (-1C MascPl) (0 AJ + MascPl) ;
#SELECT FemPl IF (-1C FemPl) (0 AJ + FemPl) ;
#SELECT MascPl IF (1C MascPl) (0 N + MascPl) (NOT 0 ("pel")) ;
#SELECT FemPl IF (1C FemPl) (0 N + FemPl) ;
#SELECT MascPl IF (1C MascPl) (0 AJ + MascPl) ;
#SELECT FemPl IF (1C FemPl) (0 AJ + FemPl) ;
#SELECT MascPl IF (-2C MascPl) (-1 AV OR PREAV) (0 AJ + MascPl) ;
#SELECT FemPl IF (-2C FemPl) (-1 AV OR PREAV) (0 AJ + FemPl) ;
#SELECT MascPl IF (2C MascPl) (1 AV OR PREAV) (0 AJ + MascPl) ;
#SELECT FemPl IF (2C FemPl) (1 AV OR PREAV) (0 AJ + FemPl) ;

REMOVE AJ IF (NOT -2 N_AJ) (-1 CM) (0 N) (1C Que OR Qui OR PREP OR Conjadv) ;	# dab Blesin, gojat qui

SELECT AJ IF (-3 ("un") + MascSg) (-2 N + MascSg) (-1 ("e")) (0 ("mièg") + MascSg OR ("miei") + MascSg) ;	# un an e mièg
SELECT AJ IF (-3 ("un") + FemSg) (-2 N + FemSg) (-1 ("e")) (0 ("mièg") + FemSg OR ("miei") + FemSg) ;	# una òra e mièja
SELECT AJ IF (-3 NUM) (-2 N + MascPl) (-1 ("e")) (0 ("mièg") + MascSg OR ("miei") + MascSg) ;	# dos ans e mièg
SELECT AJ IF (-3 NUM) (-2 N + FemPl) (-1 ("e")) (0 ("mièg") + FemSg OR ("miei") + FemSg) ;	# doas òras e mièja

SELECT AJ IF (-3 NUM) (0 ("mièg")) (1C N);
SELECT AV IF (-3 NUM) (0 ("mièg")) (1C AJ or AV);

SELECT N IF (-2C N) (-1 Conjco LINK NOT 0 ("sia")) (0C N_AJ_PP) (NOT 1 N) (NOT 0 ("mièg") OR ("miei") OR ("quart")) (NOT -2 ("afars estrangièrs") OR ("afars exteriors")) ;	# une comédienne, réalisatrice, traductrice et romancière.
SELECT N IF (NOT -1 N) (0C N_AJ_PP) (1 Conjco LINK NOT 0 ("sia")) (2C N) ;	# comédies, revues et opérettes ; langues anciennes et sciences naturelles
SELECT N + &&AcordSN IF (-1/* DET + &&AcordSN) (0C N_AJ_PP) (1 Conjco LINK NOT 0 ("sia")) (2 DET) (3C N) ;	# les revues et les opérettes
SELECT N IF (-2 N) (-1 CM) (0C N_AJ_PP) (1 Conjco OR CM) (2C N) ;	# prêtre, curé, prédicateur
SELECT N IF (-2C N) (-1 CM) (0C N_AJ_PP) (1 Conjco OR CM) (2 N) ;
SELECT N IF (-2C N + &&AcordSP) (-1 CM) (0 N + &&AcordSP) (1 ("e") OR O_cnjcoo OR ("ni")) (2 N + &&AcordSP) ;	# martèths, estenalhas e alicatas
SELECT N IF (-2C N) (-1 CM) (0C N_AJ_PP) (1 CM) (2 N) ;	# prêtre, curé, prédicateur
SELECT N IF (-4C N) (-4 N + &&AcordSP) (-3 CM) (-2C N) (-2 N + &&AcordSP) (-1 CM) (0 N + &&AcordSP) ;
SELECT N IF (NOT -1 N) (0 N) (1 CM) (2C N) (3 Conjco OR CM) (4C N) ;    # droite, gauche ou milieu
SELECT AJ + &&AcordSN IF (0 ("grand") + &&AcordSN) (1 Conjco) (2 AJ + &&AcordSN) (NOT 2 AdjPre) ;
SELECT AJ + &&AcordSN IF (0 ("grand") + &&AcordSN) (1 CM) (2 AJ + &&AcordSN) (3 Conjco) (4 AJ + &&AcordSN) ;
SELECT AJ IF (-2 AJ + &&AcordSN) (-1 CM) (0C N_AJ_PP) (0 AJ + &&AcordSN) (1 Conjco OR CM) (2C AJ) (NOT 2 AdjPre) (2 AJ + &&AcordSN) ;
SELECT AJ IF (-2C AJ) (-2 AJ + &&AcordSN) (-1 CM) (0C N_AJ_PP) (0 AJ + &&AcordSN) (1 CM) (2 AJ + &&AcordSN) (NOT 2 AdjPre) ;
SELECT AJ IF (-4C AJ) (-4 AJ + &&AcordSP) (-3 CM) (-2C AJ) (-2 AJ + &&AcordSP) (-1 CM) (0 AJ + &&AcordSP) (NOT 0 AdjPre) ;
SELECT N IF (-2 Drecha + N + FemSg OR Esquerra + N + FemSg) (-1 Conjco OR CM) (0 ("centre") + MascSg) ;
SELECT N IF (2 Drecha + N + FemSg OR Esquerra + N + FemSg) (1 Conjco OR CM) (0 ("centre") + MascSg) ;
SELECT N IF (-3 Drecha + N + FemSg OR Esquerra + N + FemSg) (-2 Conjco OR CM) (-1 DETdef + MascSg) (0 ("centre") + MascSg) ;
SELECT N IF (3 Drecha + N + FemSg OR Esquerra + N + FemSg) (2 DETdef + MascSg) (1 Conjco OR CM) (0 ("centre") + MascSg) ;

SELECT AJ + MascSg IF (-1 Artcontrsg) (0 AdjPre + MascSg) (1 N + MascSg) ;
SELECT AJ + MascPl IF (-1 Artcontrpl) (0 AdjPre + MascPl) (1 N + MascPl) ;
SELECT N + MascSg IF (-1 Artcontrsg) (0 N + MascSg) (1 AJ + MascSg) ;
SELECT N + MascPl IF (-1 Artcontrpl) (0 N + MascPl) (1 AJ + MascPl) ;
REMOVE AJ IF (NOT -1 DET OR Artcontrsg OR Artcontrpl OR N OR AJ OR Top) (0C N_AJ LINK NOT 0 AdjPre) (1C N_AJ) (0 N + &&AcordSN) (1 AJ + &&AcordSN) ;	# son bilingües passius
SELECT AJ + &&AcordSN IF (NOT -1 DET OR Artcontrsg OR Artcontrpl OR N OR AJ OR Top) (0C N_AJ LINK 0 AdjPre) (1C N_AJ) (0 AJ + &&AcordSN) (1 N + &&AcordSN) ;	# son bons trabalhadors
SELECT N + &&AcordSN IF (NOT -2 N OR AJ OR Top) (-1C AJ) (-1 AJ + &&AcordSN) (0C N_AJ) (0 N + &&AcordSN) ;	# son bons trabalhadors ; amb diferentas vilas
SELECT AJ + &&AcordSN IF (-1C N) (-1 N + &&AcordSN) (0C N_AJ) (0 AJ + &&AcordSN) ;	# organizatritz màger
SELECT AJ + &&AcordSN IF (-1C Top) (-1 Top + &&AcordSN) (0C N_AJ) (0 AJ + &&AcordSN) ;	# Soudan français
SELECT AJ + &&AcordSN IF (-2C Top + &&AcordSN) (-1 AJ + &&AcordSN) (0C N_AJ) (0 AJ + &&AcordSN) ;	# Centre Dramatique Occitan

SELECT PREDET + &&AcordSN IF (0 ("tot") + &&AcordSN) (1C DET) (1 DET + &&AcordSN) ;	# tot lo grop

# N / V

REMOVE V + Pers OR VBger IF (-1C DET OR Artcontrsg OR Artcontrsg) ;
SELECT N IF (0 ("<Liga>")) (1 NUM) ;
SELECT N IF (-1 DETdef) (0 ("centre")) (1 MajIni OR unknownMajIni) ;
REMOVE V IF (-1 ("«")) (0 ("<Viatge>")) ;
REMOVE V IF (0 ("paire")) (1 unknown) (NOT -1 Pro OR Enon) ;

REMOVE N IF (NOT -1 DET) (0 ("<risca>"i)) (1 De) (2 Pro OR VBinf) ;

REMOVE N_AJ IF (-1 ("daissar") OR ("deishar") OR ("leishar")) (0 VBinf) ;
REMOVE N_AJ IF (-2 ("daissar") OR ("deishar") OR ("leishar")) (-1 AV) (0 VBinf) ;

SELECT VBinf (-2C N_AJ) (-1 A OR De) (0 N_AJ_PP) ;	# lo drech a aver
SELECT VBinf (-3 Ser) (-2 AJ OR VBpp) (-1 A OR De) (0 N_AJ_PP) ;	# son autorizats a venir
SELECT VBinf (-4 Ser) (-3 AV) (-2 AJ OR VBpp) (-1 A OR De) (0 N_AJ_PP) ;	# son pas autorizats a venir
SELECT VBinf (-5 Ser) (-4 AV) (-3 AV) (-2 AJ OR VBpp) (-1 A OR De) (0 N_AJ_PP) ;	# son pas totjorn autorizats a venir

REMOVE V + Sg IF (-1C NUM) ;		# vint mil legas
REMOVE V IF (-1 CM) (0 N + &&AcordSN) (1C AJ + &&AcordSN) (NOT 0 Ser OR Semblar_Pareisser OR Devenir) ;	# lo « Poton de Tolosa », grope tradicionau

REMOVE V + Pers IF (-1C PREP) (NOT -1/* N OR Rel OR Conjadv OR Conjsub OR Itg) ;
SELECT V + Pers + Sg IF (-1/* ("lo que") + Sg) (0 V + Pers + Sg) ;
SELECT V + Pers + Pl IF (-1/* ("lo que") + Pl) (0 V + Pers + Pl) ;

REMOVE V + Pers IF (-1 ("jos")) (0 N_AJ) ;
REMOVE V + Pers IF (-1 ("devath")) (0 N_AJ) ;
REMOVE V + Pers IF (-1 ("sota")) (0 N_AJ) ;
SELECT PREP IF (0 ("jos")) (1 N_AJ) ;
SELECT PREP IF (0 ("devath")) (1 N_AJ) ;
SELECT PREP IF (0 ("sota")) (1 N_AJ) ;

REMOVE N (-1 ("<de mai>"i)) ;
SELECT SUB:1 N (0 ("<de mai>"i)) (1 A) (2 Nommois) ;

REMOVE N IF (1C VBinf) (0 V + Pers OR VBinf OR VBger) (NOT -1 DET OR AJ) ;	# fau convéncer

REMOVE V + Pers IF (NOT -2* Rel) (-1C V LINK NOT 0 VBpp) ;	# enta finançar programas
REMOVE V + Pers IF (NOT -3* Rel) (-2C V LINK NOT 0 VBpp) (-1C AV OR PREAV OR Donc LINK NOT 0 Itg) ;	# finançar pas programas ; sabes on demora
REMOVE V + Pers IF (NOT -4* Rel) (-3C V LINK NOT 0 VBpp) (-2C AV OR PREAV OR Donc LINK NOT 0 Itg) (-1C AV OR PREAV OR Donc LINK NOT 0 Itg) ;	# finançar pas donc programas ; sabes on donc demora
REMOVE V + Pers IF (-1C V LINK NOT 0 VBpp) (0 ("a")) ;	# s'expausarà a sanccions
REMOVE V + Pers IF (-2C V LINK NOT 0 VBpp) (-1C AV OR PREAV OR Donc LINK NOT 0 Itg) (0 ("a")) ;	# s'expausarà donc a sanccions
REMOVE V + Pers IF (-3C V LINK NOT 0 VBpp) (-2C AV OR PREAV OR Donc LINK NOT 0 Itg) (-1C AV OR PREAV OR Donc LINK NOT 0 Itg) (0 ("a")) ;	# s'expausarà pas donc a sanccions
REMOVE V + Pers IF (-4C V LINK NOT 0 VBpp) (-3C AV OR PREAV OR Donc LINK NOT 0 Itg) (-2C AV OR PREAV OR Donc LINK NOT 0 Itg) (-1C AV OR PREAV OR Donc LINK NOT 0 Itg) (0 ("a")) ;	# s'expausarà pas totjorn donc a sanccions
REMOVE V + Pers IF (NOT -1* Rel) (1C V LINK NOT 0 VBpp OR VBinf) ;

SELECT PREP IF (-2C V LINK NOT 0 VBpp) (-1 Tn) (0 ("<deu>"i)) (1 N_AJ + MascSg) ;	# veiràn tot deu començar

REMOVE N IF (-1C PRON) (NOT -1 V) (NOT -1 ("<i a>"i)) (0 V) ;		# qui sap ; i a risques
REMOVE V + Pers IF (-1C V + Pers OR ("<i a>"i)) ;	# voletz ve pariar ; i a risques
REMOVE V + Pers IF (1C V + Pers OR ("<i a>"i)) ;	# voletz ve pariar

REMOVE N IF (-1C Conjsub OR Conjadv OR Rel OR Itg) (0 V) (1C DET) ;		# quan fan un trabalh
REMOVE N IF (-1C Conjsub OR Conjadv OR Rel OR Itg) (0 V) (1C N) ;		# quan fan un trabalh
REMOVE N IF (-1C Conjsub OR Conjadv OR Rel OR Itg) (0 V) (1 DET + &&AcordSN) (2 N + &&AcordSN) ;		# quan fan un trabalh
REMOVE N IF (-2 DET + &&AcordSN) (-1 N + &&AcordSN + Pl) (0 ("<an>"i)) ;		# los participants an
REMOVE N IF (-1 N_AJ + Pl) (0 ("<an>"i)) ;		# los participants an

REMOVE VBpp IF (-1C DET + &&AcordSN OR Pro) (0 N + &&AcordSN) ;		# lo resultat
REMOVE VBpp IF (0 ("format")) (1 NP OR Acr) ;	# format PDF

REMOVE N IF (-1 ("mas")) (0 V) (1 Que) ;		# mas sosten que

REMOVE N OR AJ IF (-1C Enon OR Pro) ;

REMOVE V IF (-1 DET + &&AcordSN) (0 N + &&AcordSN) (1 Mai OR Pus OR Mens) (2 AJ + &&AcordSN) ;	# lo combat pus grand

REMOVE V + P1 IF (-1C Pro + Ref) ;
REMOVE V + P2 IF (-1C Pro + Ref) ;
REMOVE V + P1 IF (-2C Pro + Ref) (-1 Pro) ;
REMOVE V + P2 IF (-2C Pro + Ref) (-1 Pro) ;
REMOVE PRS OR PIS IF (NOT -1* Conjsub OR Conjadv) (NOT -1* ("per") OR ("entà") OR ("tà") LINK 1 Que OR Qui) ;

REMOVE P1 IF (-2 DET + &&AcordSN) (-1 N + &&AcordSN + &&AcordSP) (0C V) (0 V + P3 + &&AcordSP) (NOT -1*C V + P1) (NOT 1*C V + P1);
REMOVE P1 IF (-1 DET + &&AcordSN) (0 N + &&AcordSN + &&AcordSP) (1C V) (1 V + P3 + &&AcordSP) (NOT -1*C V + P1) (NOT 1*C V + P1);
REMOVE P1 IF (-3 DET + &&AcordSN) (-2 N + &&AcordSN + &&AcordSP) (-1 AV OR Enon OR Pro) (0C V) (0 V + P3 + &&AcordSP) (NOT -1*C V + P1) (NOT 1*C V + P1);
REMOVE P1 IF (-1 DET + &&AcordSN) (0 N + &&AcordSN + &&AcordSP) (1 AV OR Enon OR Pro) (2C V) (2 V + P3 + &&AcordSP) (NOT -1*C V + P1) (NOT 1*C V + P1);
REMOVE P2 IF (-2 DET + &&AcordSN) (-1 N + &&AcordSN + &&AcordSP) (0C V) (0 V + P3 + &&AcordSP) (NOT -1*C V + P2) (NOT 1*C V + P2);
REMOVE P2 IF (-1 DET + &&AcordSN) (0 N + &&AcordSN + &&AcordSP) (1C V) (1 V + P3 + &&AcordSP) (NOT -1*C V + P2) (NOT 1*C V + P2);
REMOVE P2 IF (-3 DET + &&AcordSN) (-2 N + &&AcordSN + &&AcordSP) (-1 AV OR Enon OR Pro) (0C V) (0 V + P3 + &&AcordSP) (NOT -1*C V + P2) (NOT 1*C V + P2);
REMOVE P2 IF (-1 DET + &&AcordSN) (0 N + &&AcordSN + &&AcordSP) (1 AV OR Enon OR Pro) (2C V) (2 V + P3 + &&AcordSP) (NOT -1*C V + P2) (NOT 1*C V + P2);

REMOVE V + P1 IF (-2C N_AJ + &&AcordSP) (-1 AV OR Enon OR Pro) (0 V + P3 + &&AcordSP) (NOT -1*C V + P1) (NOT 1*C V + P1) ;
REMOVE V + P1 IF (-3C N_AJ + &&AcordSP) (-2 AV OR Enon OR Pro) (-1 AV OR Enon OR Pro) (0 V + P3 + &&AcordSP) (NOT -1*C V + P1) (NOT 1*C V + P1) ;
REMOVE V + P1 IF (-4C N_AJ + &&AcordSP) (-3 AV OR Enon OR Pro) (-2 AV OR Enon OR Pro) (-1 AV OR Enon OR Pro) (0 V + P3 + &&AcordSP) (NOT -1*C V + P1) (NOT 1*C V + P1) ;
REMOVE V + P2 IF (-1C N_AJ + &&AcordSP) (0 V + P3 + &&AcordSP) (NOT -1*C V + P2) (NOT 1*C V + P2) ;
REMOVE V + P2 IF (-2C N_AJ + &&AcordSP) (-1 AV OR Enon OR Pro) (0 V + P3 + &&AcordSP) (NOT *-1 V LINK 0C P2) (NOT *1 V LINK 0C P2) ;
REMOVE V + P2 IF (-3C N_AJ + &&AcordSP) (-2 AV OR Enon OR Pro) (-1 AV OR Enon OR Pro) (0 V + P3 + &&AcordSP) (NOT -1*C V + P2) (NOT 1*C V + P2) ;
REMOVE V + P2 IF (-4C N_AJ + &&AcordSP) (-3 AV OR Enon OR Pro) (-2 AV OR Enon OR Pro) (-1 AV OR Enon OR Pro) (0 V + P3 + &&AcordSP) (NOT -1*C V + P2) (NOT 1*C V + P2) ;

REMOVE N IF (-2C ("començar") OR ("acabar") OR ("finir") OR ("fenir") OR ("terminar")) (-1 ("<de>"i)) (0 VBinf) ;
REMOVE V IF (0 N LINK NOT 0 VBpp) (1 ("<de>"i)) (2C N + Sg) (NOT 0 Far OR ("parlar") OR ("discutir") OR ("acusar")) (NOT 2 ("faiçon") OR ("façon") OR ("manièira")) (1* Enon) ;	# guida de viatge
REMOVE V IF (0 N LINK NOT 0 VBpp) (1 ("<de>"i)) (2C N + Sg) (NOT 0 Far OR ("parlar") OR ("discutir") OR ("acusar")) (NOT 2 ("faiçon") OR ("façon") OR ("manièira")) (-1* Enon) ;
REMOVE V IF (0 ("guida")) (1 ("<de>"i)) (2C N + Sg) (NOT 2 ("faiçon") OR ("façon") OR ("manièira")) ;
LIST Bevenda = "aiga" "lach" "lèit" "cervesa" "bièrra" "bèra" "vin" "pomat" "cidre" ;
REMOVE V IF (NOT -2 VVmod) (NOT -1 VVmod) (0 ("veire")) (1 ("<de>"i)) (2C Bevenda + Sg) ;	# en lengadocian pòt èsser lo vèrb, mai es pas probable
SELECT V IF (-2 ("<de>"i)) (-1 ("<bon>"i)) (0 ("<veire>"i)) ;

# AJ / V

SELECT AJ (0 ("liure")) (1 De) (2 VBinf) ;
SELECT AJ (0 ("liure")) (-1 ("logicial")) ;

SELECT AJ (-1 Nommois OR Jorns) (0 ("passat")) ;

SELECT AJ (-3 N_AJ + &&AcordSN) (-2 AJ + &&AcordSN) (-1 Conjco) (0 AJ + &&AcordSN) ;	# un territòri immens e voide
SELECT AJ (-4 AJ + &&AcordSN) (-3 CM) (-2 AJ + &&AcordSN) (-1 Conjco) (0 AJ + &&AcordSN) ;	# un territòri desèrt, immense e voide
SELECT AJ (-4 N_AJ + &&AcordSN) (-3 AJ + &&AcordSN) (-2 Conjco) (-1 AV OR PREAV) (0 AJ + &&AcordSN) ;	# un territòri immense e quasi voide
SELECT AJ (-5 AJ + &&AcordSN) (-4 CM) (-3 AJ + &&AcordSN) (-2 Conjco) (-1 AV OR PREAV) (0 AJ + &&AcordSN) ;	# un territòri desèrt, immense e quasi voide
SELECT AJ (-2 AJ + &&AcordSN) (-1 CM) (0 AJ + &&AcordSN) (1 Conjco) (2 AJ + &&AcordSN) ;	# un territòri immense, voide e quasi desèrt
SELECT AJ (-2 AJ + &&AcordSN) (-1 CM) (0 AJ + &&AcordSN) (1 Conjco) (2 AV OR PREAV) (3 AJ + &&AcordSN) ;	# un territòri immense, voide e quasi desèrt

# AJ / AV

SELECT AV IF (-1 Ser + &&AcordSP OR Semblar_Pareisser + &&AcordSP OR Devenir + &&AcordSP) (0 Melhor + MascSg) (1 Que OR PREP) ;
SELECT AV IF (-1 Ser + &&AcordSP OR Semblar_Pareisser + &&AcordSP OR Devenir + &&AcordSP) (0 Peger + MascSg) (1 Que OR PREP) ;
#REMOVE AV IF (NOT -2 Pro + AV OR Tn OR Conjco) (-1 Ser + &&AcordSP OR Semblar_Pareisser + &&AcordSP OR Devenir + &&AcordSP) (0 AJ + &&AcordSP) (NOT 1 N_AJ_PP + &&AcordSP OR DET OR PREP OR AV) ;
#REMOVE AV IF (NOT -3 Pro + AV OR Tn OR Conjco) (-2 Ser + &&AcordSP OR Semblar_Pareisser + &&AcordSP OR Devenir + &&AcordSP) (-1 AV OR PREAV) (0 AJ + &&AcordSP) (NOT 1 N_AJ_PP + &&AcordSP OR DET OR PREP OR AV) ;
SELECT AJ IF (-1 Ser + &&AcordSP OR Semblar_Pareisser + &&AcordSP OR Devenir + &&AcordSP) (0 ("probable") + &&AcordSP) ;

REMOVE AJ + Sg IF (-1C Ser + Pl OR Semblar_Pareisser + Pl OR Devenir + Pl) (0 AV) (NOT 1 N + Masc) ;	# son bon signe
REMOVE AJ + Pl IF (-1C Ser + Sg OR Semblar_Pareisser + Sg OR Devenir + Sg) (0 AV) ;
REMOVE AJ + Sg IF (-2C Ser + Pl OR Semblar_Pareisser + Pl OR Devenir + Pl) (-1C ("pas") OR AV) (0 AV) (NOT 1 N + Masc) ;	# son pas bon signe
REMOVE AJ + Pl IF (-2C Ser + Sg OR Semblar_Pareisser + Sg OR Devenir + Sg) (-1C ("pas") OR AV) (0 AV) ;
REMOVE AJ IF (-1C V LINK NOT 0 VBpp OR Ser OR Semblar_Pareisser OR Devenir) (0 AV) (NOT 1 N) ;
REMOVE AJ IF (-2C V LINK NOT 0 VBpp OR Ser OR Semblar_Pareisser OR Devenir) (-1C AV OR PREAV OR ("fòrça") OR ("hèra") OR ("plan") OR ("ben")) (0 AV) (NOT 1 N) ;

# PR / AV

REMOVE AV IF (-1C N_AJ) (0 PREP) (1C DET) ;	# vint mil legas jos lo mar

# MOTS

REMOVE Mai_bon IF (-1 N + &&AcordSN) (0 Mai_bon + &&AcordSN) ;
REMOVE Mai_bon IF (0 Mai_bon) (1 ("ora") OR ("òra")) ;
SELECT SUB:1 A IF (-1 N + &&AcordSN) (0/* A + &&AcordSN) (0 Mai_bon) ;
SELECT SUB:1 A IF (0 Mai_bon) (1 ("ora") OR ("òra")) ;
SELECT Mai_bon IF (0 Mai_bon) ;

SELECT N IF (-1 DET + MascSg) (0 ("cap a")) ;
REMOVE N IF (0 ("cap a")) ;

SELECT PREP IF (0 ("<pera>"i)) (1C N + FemSg OR unknown) ;
SELECT PREP IF (0 ("<peras>"i)) (1C N + FemPl OR unknown) ;
REMOVE V IF (0 ("<pera>"i)) (0 PREP) ; ;
REMOVE V IF (0 ("<peras>"i)) (0 PREP) ; ;

SELECT (mf) IF (0 ("<ròms>"i)) ;
SELECT (mf) IF (0 ("<ròm>"i)) (-1 DET + Fem_strict);
SELECT (mf) IF (0 ("<ròm>"i)) (-1 AJ + Fem) (-2 DET + Fem_strict);
REMOVE N + (mf) IF (0 ("<ròm>"i)) ;

SELECT Haver IF (0 A) (1C VBpp);	# a cantat
SELECT Ser IF (-1 Ser) (0 ("estat"));	# soi estat
SELECT Ser IF (-2 Ser) (-1 AV) (0 ("estat"));	# soi pas estat
SELECT Ser IF (-3 Ser) (-2 AV) (-1 AV) (0 ("estat"));	# soi pas totjorn estat
REMOVE V IF (0 ("estat")) (-1 DET + MascSg);	# l'estat

SELECT PREP IF (0 A) (1 unknownMajIni) ;

REMOVE V IF (-1C V LINK NOT 0 VBpp) (0 A) ;
REMOVE V IF (-2C V LINK NOT 0 VBpp) (-1C AV OR PREAV) (0 A) ;

REMOVE Pro IF (NOT 1 V OR Pro OR unknown) ;
SELECT DET + &&AcordSN IF (0 ("un") + &&AcordSN) (1 ("«")) (2 N_AJ + &&AcordSN) ;
REMOVE DET IF (0 Tn) (NOT 1 N OR NP OR AJ OR NUM OR unknown OR ("«")) ;

SELECT DET + &&AcordSN IF (0 DET + &&AcordSN) (1 ("«")) (2 N_AJ + &&AcordSN OR NP + &&AcordSN) (3 ("»")) ;
SELECT AJ + &&AcordSN IF (-2 DET + &&AcordSN) (-1 ("«")) (0 AdjPre + &&AcordSN) (1 ("»")) (2 N + &&AcordSN OR NP + &&AcordSN) ;
SELECT N + &&AcordSN IF (-2 DET + &&AcordSN) (-1 ("«")) (0 N_AJ + &&AcordSN) (1 ("»")) ;
SELECT AJ + &&AcordSN + Pl IF (-2 NUM) (-1 ("«")) (0 AdjPre + &&AcordSN + Pl) (1 ("»")) (2 N + &&AcordSN + Pl) ;
SELECT N + Pl IF (-2 NUM) (-1 ("«")) (0 N_AJ + Pl) (1 ("»")) ;
SELECT AJ + &&AcordSN IF (-1 DET + &&AcordSN) (0 AdjPre + &&AcordSN) (1 ("«")) (2 N + &&AcordSN OR NP + &&AcordSN) ;
SELECT N + &&AcordSN IF (-1 DET + &&AcordSN) (0 N + &&AcordSN) (1 ("«")) (2 AJ + &&AcordSN) ;
SELECT AJ + &&AcordSN IF (-3 DET + &&AcordSN) (-2 N + &&AcordSN OR NP + &&AcordSN) (-1 ("«")) (0 AJ + &&AcordSN) ;

REMOVE AJ IF (-1C DET + &&AcordSN) (0 N + &&AcordSN) (1C CM) (NOT 2 AJ + &&AcordSN) (NOT 0 AdjOrd + &&AcordSN) ;

REMOVE Conjadv IF (0 Se) (-1C Enon) ;
REMOVE Conjadv IF (0 Se) (1C VBinf OR VBger) ;        # de se crear
REMOVE Conjadv IF (0 Se) (1 Pro) (2C VBinf OR VBger) ;        # de se lo crear
REMOVE PRON IF (0 Se) (NOT 1 Pro OR V + P3 OR V + VBinf OR V + VBger OR unknownMinIni) ;        # se canti
REMOVE PRON IF (0 Se) (1 Pro) (NOT 2 Pro OR V + P3 OR V + VBinf OR V + VBger OR unknownMinIni) ;	# se li canti
REMOVE PRON IF (0 Se) (1 Pro) (2 Pro) (NOT 3 Pro OR V + P3 OR V + VBinf OR V + VBger OR unknownMinIni) ;	# se li o canti
REMOVE PRON IF (0 Se) (1 Pro) (2 Pro) (3 Pro) (4 V + P3 OR V + VBinf OR V + VBger OR unknownMinIni) ;
REMOVE SUB:1 PRON IF (0/* Se) (NOT 1 Pro OR V + P3 OR V + VBinf OR V + VBger OR unknownMinIni) ;        # o se canti
REMOVE SUB:1 PRON IF (0/* Se) (1 Pro) (NOT 2 Pro OR V + P3 OR V + VBinf OR V + VBger OR unknownMinIni) ;	# o se li canti
REMOVE SUB:1 PRON IF (0/* Se) (1 Pro) (2 Pro) (NOT 3 Pro OR V + P3 OR V + VBinf OR V + VBger OR unknownMinIni) ;	# o se li o canti
REMOVE SUB:1 PRON IF (0/* Se) (1 Pro) (2 Pro) (3 Pro) (4 V + P3 OR V + VBinf OR V + VBger OR unknownMinIni) ;
SELECT Pro IF (0 Se) (1 unknownMinIni) ;
SELECT Pro IF (0 Se) (1 Pro) (2 unknownMinIni) ;
SELECT Pro IF (0 Se) (1 Pro) (2 Pro) (3 unknownMinIni) ;
SELECT Pro IF (0 Se) (1 Pro) (2 Pro) (3 Pro) (4 unknownMinIni) ;
REMOVE PRON IF (-1C V LINK NOT 0 VBpp) (0 Se) ;
REMOVE PRON IF (-2C V LINK NOT 0 VBpp) (-1C AV OR PREAV OR ("pas") LINK NOT 0 Itg OR Rel) (0 Se) ;
REMOVE PRON IF (-3C V LINK NOT 0 VBpp) (-2C AV OR PREAV OR ("pas") LINK NOT 0 Itg OR Rel) (-1 AV LINK NOT 0 Itg) (0 Se) ;
REMOVE PRON IF (-2 VBaux) (-1C VBpp) (0 Se) ;
REMOVE PRON IF (-3 VBaux) (-2C AV OR PREAV OR ("pas") LINK NOT 0 Itg OR Rel) (-1C VBpp) (0 Se) ;
REMOVE PRON IF (-4 VBaux) (-3C AV OR PREAV OR ("pas") LINK NOT 0 Itg OR Rel) (-2 AV LINK NOT 0 Itg OR Rel) (-1C VBpp) (0 Se) ;
SELECT Pro IF (0 Se) (1 En) (2 ("anar")) ;
SELECT Pro IF (0 Se) (1 En) (2 Ser) (3 ("anar") + VBpp) ;
SELECT Pro IF (0 Se) (1 En) (2 Ser) (3 AV) (4 ("anar") + VBpp) ;
SELECT Pro IF (0 Se) (1 En) (2 Ser) (3 AV) (4 AV) (5 ("anar") + VBpp) ;
SELECT Pro IF (0 ("<se'n>"i) OR ("<se’n>"i)) (1 ("anar")) ;
SELECT Pro IF (0 ("<se'n>"i) OR ("<se’n>"i)) (1 Ser) (2 ("anar") + VBpp) ;
SELECT Pro IF (0 ("<se'n>"i) OR ("<se’n>"i)) (1 Ser) (2 AV) (3 ("anar") + VBpp) ;
SELECT Pro IF (0 ("<se'n>"i) OR ("<se’n>"i)) (1 Ser) (2 AV) (3 AV) (4 ("anar") + VBpp) ;
SELECT Pro IF (-1C Rel) (0 Se) (1 Pro OR V + P3) ;
SELECT Pro IF (-2C Rel) (-1 AV) (0 Se) (1 Pro OR V + P3) ;
SELECT Pro IF (-3C Rel) (-2 AV) (-1 AV) (0 Se) (1 Pro OR V + P3) ;
#REMOVE PRON IF (0 Se) (1 ("ne")) ;	# Se n’èram estadas amigas
SELECT Conjadv IF (0 ("<s'i>"i) OR ("<s’i>"i)) (1 ("aver") OR ("auer")) ;
SELECT Conjadv IF (0 Se) (1 ("<n'i>"i) OR ("<n’i>"i)) (2 ("aver") OR ("auer")) ;
SELECT Conjadv IF (0 Se) (1 Pro) (2 Pro) (3 V) ;	# patch
SELECT Conjadv IF (0 Se) (0/* Pro) (1 Pro) (2 V) ;	# patch
SELECT Conjadv IF (0 Se) (1 Pro) (2 Pro) (3 Pro) (4 V) ;	# patch
SELECT Conjadv IF (0 Se) (0/* Pro) (1 Pro) (2 Pro) (3 V) ;	# patch
REMOVE Conjadv IF (0 Se) (0/* Pro) (-1*C N) (NOT -1* V + Pers) ;	# un ministeri s'encargue
SELECT Si + Conjadv IF (0 Si) (-1 ("coma") OR ("com")) (NOT -2 BOS) ;
REMOVE Pro + Ref IF (0 Si) (NOT 1 Pro OR VBinf OR VBger OR V + P3 OR unknownMinIni) ;
REMOVE Pro + Ref IF (0 Si) (1 Pro LINK NOT 0 V) (NOT 2 VBinf OR VBger OR V + P3 OR unknownMinIni) ;
SELECT Pro + Ref IF (0 Si) (1 unknownMinIni) ;
SELECT Pro + Ref IF (0 Si) (1 Pro LINK NOT 0 V) (2 unknownMinIni) ;
REMOVE Tn IF (0 Si) (-1 BOS) ;
REMOVE Tn IF (0 Si) (-1C Conjsub OR Conjadv) ;
REMOVE Tn IF (0 Si) (-1 CM) (1 CM) ;
REMOVE Tn IF (0 Si) (-1 ("coma") OR ("com")) ;
REMOVE AV IF (0 Si) (-1 ("coma") OR ("com")) ;
SELECT Conjadv IF (0 ("coma") OR ("com")) (1 Si) ;
SELECT Conjadv IF (0 Si) (1C Ser + P3 + &&AcordSP) (2 Ser + VBpp + &&AcordSP) ;
SELECT Conjadv IF (0 Si) (1C Ser + P3 + &&AcordSP) (2 AV) (3 Ser + VBpp + &&AcordSP) ;
SELECT Conjadv IF (0 Si) (1C Ser + P3 + &&AcordSP) (2 AV) (3 AV) (4 Ser + VBpp + &&AcordSP) ;
SELECT Pro + Ref IF (0 Si) (1C Ser + P3 + Sg) (2 unknown) (2 (".*[ai]t"r) OR (".*[ai]da"r)) ;
SELECT Pro + Ref IF (0 Si) (1C Ser + P3 + Pl) (2 unknown) (2 (".*[ai]ts"r) OR (".*[ai]das"r)) ;
SELECT Conjadv IF (-1 BOS OR Conjsub OR Conjadv OR ("quitament")) (0 Si) (1C Ser + P3 + &&AcordSP) (NOT 2 VBpp + &&AcordSP OR AV OR PREAV) ;
SELECT Conjadv IF (-2 BOS OR Conjsub OR Conjadv) (-1 AV) (0 Si) (1C Ser + P3 + &&AcordSP) (NOT 2 VBpp + &&AcordSP OR AV OR PREAV) ;
SELECT Conjadv IF (-1 BOS OR Conjsub OR Conjadv OR ("quitament")) (0 Si) (1C Ser + P3 + &&AcordSP) (2 AV OR PREAV) (3 AJ + &&AcordSP LINK NOT 0 VBpp + &&AcordSP) ;	# s'es plan probable
SELECT Conjadv IF (-1 BOS OR Conjsub OR Conjadv) (0 Si) (1C Ser + P3 + &&AcordSP) (2 AV) (3 AV OR PREAV) (4 AJ + &&AcordSP LINK NOT 0 VBpp + &&AcordSP) ;	# s'es pas plan probable
SELECT Conjadv IF (-2 BOS OR Conjsub OR Conjadv) (-1 AV) (0 Si) (1C Ser + P3 + &&AcordSP) (2 AV OR PREAV) (3 AJ + &&AcordSP LINK NOT 0 VBpp + &&AcordSP) ;	# s'es plan probable
SELECT Conjadv IF (-2 BOS OR Conjsub OR Conjadv) (-1 AV) (0 Si) (1C Ser + P3 + &&AcordSP) (2 AV) (3 AV OR PREAV) (4 AJ + &&AcordSP LINK NOT 0 VBpp + &&AcordSP) ;	# s'es pas plan probable
REMOVE AV IF (0 Si) (1C V) ;
SELECT P3 IF (-1C Se + PRON) (NOT 0 Pro) (0 V) ;		# se canti
SELECT P3 IF (-2C Se + PRON) (-1 Pro) (NOT 0 Pro) (0 V) ;	# se li canti
SELECT P3 IF (-3C Se + PRON) (-2 Pro) (-1 Pro) (NOT 0 Pro) (0 V + P3) ;	# se li o canti
SELECT VBpp IF (-2C Se + PRON) (-1C Ser) (1 VBinf) ;		# se son fait significar ("fait" sic)
SELECT VBpp IF (-3C Se + PRON) (-2C Ser) (-1 AV) (1 VBinf) ;	# se son pas fait significar ("fait" sic)
SELECT Conjadv IF (0 Se) (1 Pro) (2 ("plaire") OR ("plàser")) ;
SELECT Conjadv IF (0 Se) (0/* Pro) (1 ("plaire") OR ("plàser")) ;	# se'vs platz
REMOVE Tn IF (0 Se) (1 V) (1 P3) ;
REMOVE Tn IF (0 Se) (1 VBinf) ;
REMOVE Tn IF (0 Se) (1 Pro) ;
REMOVE Pro IF (0 ("<o se>"i)) (NOT 1 V + P3) ;
#SELECT Conjadv IF (-1 ("e")) (0 Se) (1C V + P3) (NOT 1 Ser) (2*C V + Pers) ;
#SELECT Conjadv IF (-1 ("e")) (0 Se) (1 Pro) (2 V + P3) (3*C V + Pers) ;
#SELECT Conjadv IF (-1 ("e")) (0 Se) (1 Pro) (2 Pro) (3 V + P3) (4*C V + Pers) ;
SELECT Pro IF (0 Se) (1C Pro OR V + P3) (-1 BOS) (1 ("anar")) ;
SELECT Pro IF (0 Se) (1C Pro OR V + P3) (-1 BOS) (2 ("anar")) ;
SELECT Conjadv IF (0 Se) (1C V + P3 LINK 0 VNonPron) (-1 BOS OR Conjadv OR Conjsub OR Rel) (2* V + Pers) ;
SELECT Conjadv IF (0 Se) (1 Pro) (2C V + P3 LINK 0 VNonPron) (-1 BOS OR Conjadv OR Conjsub OR Rel) (3* V + Pers) ;
#SELECT Conjadv IF (0 Se) (1C Pro OR V + P3) (-1 BOS) (3* V + Pers) ;
SELECT Conjadv IF (0 Se) (1C Ser + P3 + &&AcordSP) (2 ("possible") + &&AcordSP) ;	# s'es possible
SELECT AJ IF (-2 Se) (-1 Ser + P3 + &&AcordSP) (0 ("possible") + &&AcordSP) ;	# s'es possible
SELECT Conjadv IF (0 Se) (1C Ser + P3 + &&AcordSP) (2 AV) (3 ("possible") + &&AcordSP) ;	# s'es pas possible
SELECT AJ IF (-3 Se) (-2 Ser + P3 + &&AcordSP) (-1 AV) (0 ("possible") + &&AcordSP) ;	# s'es pas possible
SELECT Conjadv IF (0 Se) (1C Ser + P3 + &&AcordSP) (2C AJ) (2 AJ + &&AcordSP) ;	# s'es possible
SELECT Conjadv IF (0 Se) (1C Ser + P3 + &&AcordSP) (2 AV) (3C AJ) (3 AJ + &&AcordSP) ;	# s'es pas possible
SELECT Pro IF (0 Se) (1C Pro OR V + P3) ;	# guess			NE MARCHE PAS DU TOUT

REMOVE P1 + Sg IF (-1 NP + Sg) (0 V + P3 + Sg) ;
REMOVE P1 + Sg IF (-2 DET + MascSg) (-1 N + MascSg) (0 V + P3 + Sg) ;
REMOVE P1 + Sg IF (-2 DET + FemSg) (-1 N + FemSg) (0 V + P3 + Sg) ;
REMOVE P1 + Sg IF (-3 DET + MascSg) (-2 N_AJ + MascSg) (-1 N_AJ + MascSg) (0 V + P3 + Sg) ;
REMOVE P1 + Sg IF (-3 DET + FemSg) (-2 N_AJ + FemSg) (-1 N_AJ + MascSg) (0 V + P3 + Sg) ;
REMOVE P1 + Sg IF (-3C N_AJ + Sg) (-2 PREP) (-1 N) (0 V + P3 + Sg) ;
REMOVE P1 + Sg IF (-4C N_AJ + Sg) (-3 PREP) (-2 N_AJ + &&AcordSN) (-1 N_AJ + &&AcordSN) (0 V + P3 + Sg) ;
REMOVE P1 + Sg IF (-4C N_AJ + Sg) (-3 PREP) (-2 DET + &&AcordSN) (-1 N + &&AcordSN) (0 V + P3 + Sg) ;
REMOVE P1 + Sg IF (-5C N_AJ + Sg) (-4 PREP) (-3 DET + &&AcordSN) (-2 N_AJ + &&AcordSN) (-1 N_AJ + &&AcordSN) (0 V + P3 + Sg) ;

REMOVE PRS IF (-1 BOS) ;
REMOVE PRS IF (-1C Se + Conjadv) ;
REMOVE PRS IF (-2C Se + Conjadv) (-1 Pro OR AV) ;
REMOVE PRS IF (-3C Se + Conjadv) (-2 Pro OR AV) (-1 Pro OR AV) ;
REMOVE PRS IF (-4C Se + Conjadv) (-3 Pro OR AV) (-2 Pro OR AV) (-1 Pro OR AV) ;
SELECT PRI IF (-2C PRI) (-1 Conjco) (0 PRS) (0 PRI) ; # il revoit et corrige
SELECT PRS IF (-2C PRS) (-1 Conjco) (0 PRS) (0 PRI) ;
SELECT PRI IF (2C PRI) (1 Conjco) (0 PRS) (0 PRI) ; # il corrige et revoit
SELECT PRS IF (2C PRS) (1 Conjco) (0 PRS) (0 PRI) ;
REMOVE PRI OR ("sia") IF (-1* ("per que") BARRIER CM) (0 PRS) ;
REMOVE PRI OR ("sia") IF (-1* ("entà que") OR ("tà que") OR ("ende que") BARRIER CM) (0 PRS) ;
REMOVE PRI OR ("sia") IF (*-1 ("après que") OR ("per que") OR ("per tal que") OR ("per fin que") OR ("a fin que") OR ("afin que") OR ("entà que") OR ("tà que") OR ("ende que") OR ("malgrat que") OR ("maugrat que") OR ("encara que") OR ("abans que") OR ("avans que") OR ("après que") OR ("aprèp que") OR ("apuèi que") BARRIER Cnj_Rel_End OR CM) (0 PRS) ;
REMOVE PRI + P1 IF (*-1 Conjsub OR ("après que") OR ("per que") OR ("per tal que") OR ("per fin que") OR ("a fin que") OR ("afin que") OR ("entà que") OR ("tà que") OR ("ende que") OR ("malgrat que") OR ("maugrat que") OR ("encara que") OR ("abans que") OR ("avans que") OR ("après que") OR ("aprèp que") OR ("apuèi que")) (0 PRS + P3) ;	# guess

REMOVE Conjadv IF (NOT 1* V + Pers) (0 PREP) (NOT 0 ("coma")) ;

SELECT PREP IF (0 Dins) (1 DET + &&AcordSN) (2 N_AJ + &&AcordSN) ;
SELECT PREP IF (0 Pendent) (1 DET + &&AcordSN) (2 N_AJ + &&AcordSN) ;
SELECT PREP IF (0 Jos) (1 DET + &&AcordSN) (2 N_AJ + &&AcordSN) ;


REMOVE NP IF (-1 BOS) (0 ("Òc")) ;
REMOVE NP IF (-2 BOS) (-1 (META:/-/r)) (0 ("Òc")) (1 CM) ;
REMOVE NP IF (-1 (META:/[—]/r)) (0 ("Òc")) (1 CM) ;

SELECT N IF (-1 DET + Masc) (NOT -1 Ser) (0 Estat) ;
SELECT VBpp IF (-1 Ser + Sg) (0 Estat + Sg) ;
#SELECT VBpp IF (-1 Ser + Pl) (0 Estat + Pl) ;
SELECT Ser IF (0 Ser + Sg) (1 Ser + VBpp + Sg) ;
SELECT Ser IF (0 Ser + Pl) (1 Ser + VBpp + Pl) ;
SELECT VBpp IF (-2 Ser + Sg) (-1 AV) (0 Estat + Sg) ;
SELECT VBpp IF (-2 Ser + Pl) (-1 AV) (0 Estat + Pl) ;
SELECT Ser IF (0 Ser + Sg) (1 AV) (2 Ser + VBpp + Sg) ;
SELECT Ser IF (0 Ser + Pl) (1 AV) (2 Ser + VBpp + Pl) ;
SELECT N IF (-1 ("vila") OR ("ciutat")) (0 Estat) ;	# vila estat
SELECT N IF (-1 AdjPre + &&AcordSN) (0 Estat + &&AcordSN) ;	# en marrit estat

SELECT Conjco IF (0 Mas_cnjcoo) (-1 CM) ;
SELECT Conjco IF (0 Mas_cnjcoo) (-1 BOS) ;
REMOVE N IF (0 ("mas")) (NOT -1/* DET + MascSg) ;
SELECT Conjco IF (0 ("mas")) (NOT -1/* DET + MascSg) (1C V) ;
REMOVE DET IF (0 ("mas")) (1 AV OR Conjadv) ;

REMOVE N IF (-1C V) (0 Pel) ;
REMOVE N IF (0 Pel) (1 unknown) ;

#deu -> dever / de +lo
LIST Deu = "deu" ;
SELECT V IF (0 ("<deu>"i)) (1 SENT OR Pro) ;
SELECT V IF (0 ("<deu>"i)) (1 VocIni) ;
REMOVE V IF (0 ("<deu>"i)) (NOT 1 VBinf OR AV) ;

# de las + adj
SELECT DET IF (0 ("<la>"i) OR ("<las>"i)) (-1 ("de")) (1 AJ + Fem) ;

#pera(s) -> pera / per +la(s)
REMOVE N IF (0 ("<pera>"i)) (0/* PREP + DET) (1 N + FemSg);
REMOVE N IF (0 ("<peras>"i)) (0/* PREP + DET) (1 N + FemPl);

# la, las (det)
SELECT DET IF (0 ("<la>"i)) (1C N_AJ + FemSg) ;
SELECT DET IF (0 ("<las>"i)) (1C N_AJ + FemPl) ;	# atencion : las casas (np.pro vblex)
SELECT DET IF (0 ("<la>"i)) (1 ("«")) (2C N_AJ + FemSg) ;
SELECT DET IF (0 ("<las>"i)) (1 ("«")) (2C N_AJ + FemPl) ;
SELECT DET IF (0 ("<la>"i)) (1 ("«")) (2 N_AJ + FemSg) (3 N_AJ + FemSg) ;
SELECT DET IF (0 ("<las>"i)) (1 ("«")) (2 N_AJ + FemPl) (3 N_AJ + FemSg) ;
SELECT DET IF (0 ("<la>"i)) (1 ("«")) (2 N_AJ + FemSg) (3 ("»")) (4 N_AJ + FemSg) ;
SELECT DET IF (0 ("<las>"i)) (1 ("«")) (2 N_AJ + FemPl) (3 ("»")) (4 N_AJ + FemSg) ;
SELECT DET IF (0 ("<las>"i)) (1 unknownMinIni) ;
SELECT DET IF (0 ("<las>"i)) (1 NUM) ;

#pel/peu nom o article contractat
REMOVE N IF (1 N + MascSg) (0 ("<peu>"i) OR ("<pel>"i)) (NOT -1 DET + Sg) (NOT -1 Artcontrsg) ;
REMOVE N IF (1 N + MascPl) (0 ("<peus>"i) OR ("<pels>"i)) (NOT -1 DET + Pl) (NOT -1 Artcontrpl) ;
REMOVE N IF (1 NP + MascSg) (0 ("<peu>"i) OR ("<pel>"i)) (NOT -1 DET + Sg) (NOT -1 Artcontrsg) ;
REMOVE N IF (1 NP + MascPl) (0 ("<peus>"i) OR ("<pels>"i)) (NOT -1 DET + Pl) (NOT -1 Artcontrpl) ;
REMOVE N IF (1 AdjPre + MascSg) (0 ("<peu>"i) OR ("<pel>"i)) (NOT -1 DET + Sg) (NOT -1 Artcontrsg) ;
REMOVE N IF (1 AdjPre + MascPl) (0 ("<peus>"i) OR ("<pels>"i)) (NOT -1 DET + Pl) (NOT -1 Artcontrpl) ;
REMOVE N IF (1 NumOrd OR NUM) (0 ("<peus>"i) OR ("<pels>"i)) (NOT -1 DET + Pl) (NOT -1 Artcontrpl) ;
REMOVE N IF (0 ("<Peus>") OR ("<Pels>")) (NOT 1 AJ) ;
REMOVE N IF (0 ("<Peu>") OR ("<Pel>")) (NOT 1 AJ) ;
REMOVE N IF (-1 SENT) (0 ("<peus>"i) OR ("<pels>"i)) (NOT 1 SENT OR ("e") OR AJ) ;

# de còps, a còps
SELECT AV IF (-1 CM OR BOS OR Conjco OR Conjsub OR Conjadv OR PREP) (0 ("de còps") OR ("a còps")) ;
SELECT AV IF (NOT -1 N_AJ) (1 CM OR EOS) (0 ("de còps") OR ("a còps")) ;
SELECT AV IF (1C V) (0 ("de còps") OR ("a còps")) ;
REMOVE PREP IF (NOT -1 N_AJ) (0 ("de còps") OR ("a còps")) ;

#punt de vista
SELECT SUB:1 Nf IF (-1 ("punt") OR ("ponch")) (0 PREP) (0 ("<de vista>"i)) ;
SELECT N IF (0 ("punt") OR ("ponch")) (1 ("<de vista>"i)) ;
SELECT N IF (0 ("punt") OR ("ponch")) (1 De) (2 ("vista") OR ("sortida") OR ("gessuda") OR ("salhida") OR ("arribada")) ;

#mes mois
REMOVE AV IF (0 ("mes")) (-1 DET) (-1 MascSg) ;
REMOVE AV IF (0 ("mes")) (-1/* PREP + DET) ;

#qui cnjadv o rel
REMOVE Itg IF (0 ("qui")) (-1C N_AJ) ;

REMOVE Conjadv IF (0 ("qui")) (NOT -1 AJ OR V OR AV) ;

REMOVE Itg IF (0 ("qui") OR ("que")) (-1C Tn OR ("jo")) ;	# jo qui’n diserèi

#Lo jorn de la setmana es un nom s'es precedit d'un determinant
REMOVE AV IF (-1/* DET) (0 Jorns) ;
REMOVE AV IF (-1 De) (0 Jorns) ;
REMOVE AV IF (0 Jorns) (1 NUM) (2 Nommois) ;

#préner temps
REMOVE Pl IF (-1 ("prendre") or ("prene") or ("préner")) (0 ("temps")) ;
REMOVE Pl IF (-2 ("prendre") or ("prene") or ("préner")) (-1 ("de")) (0 ("temps")) ;

#mercés
REMOVE Pl IF (0 ("mercés")) ((NOT -1 DET + Pl) OR (NOT -2 DET + Pl)) ;

#en tot
SELECT PREP IF (0 ("en tot")) (1 VBger) ;

SELECT AJ IF (0 (<"prèste">)) (1 ("de") or ("a"));
SELECT AJ IF (0 (<"prèste">)) (-1 ("de")) (-2 N);
SELECT AJ IF (0 (<"prèste">)) (-1 ("de")) (-2 AV or PREAV) (-3 N);
SELECT AJ IF (0 (<"prèste">)) (-1 N);
SELECT AJ IF (0 (<"prèste">)) (-1 AV or PREAV) (-2 N);

#çò
REMOVE Enon IF (0 ("çò")) (NOT 1 Vdire or ("tornar") or Vmod or Haver or Pro) ;
REMOVE Enon IF (0 ("çò")) (1 ("tornar") or Vmod or Haver) (NOT 2 Vdire) ;
REMOVE Enon IF (0 ("çò")) (1 Pro) (NOT 2 Vdire or ("tornar") or Vmod or Haver);
REMOVE Enon IF (0 ("çò")) (1 Pro) (2 ("tornar") or Vmod or Haver) (NOT 3 Vdire);

SELECT V IF (0 Vdire) (-1 ("çò"));


REMOVE V IF (0 ("<rason>"i)) (-1 Haver);
REMOVE V IF (0 ("<rason>"i)) (-1 AV) (-2 Haver);
REMOVE V IF (0 ("<rason>"i)) (-2 PREAV) (-2 AV) (-3 Haver);

REMOVE V IF (0 ("<punt>"i));
REMOVE V IF (0 ("<punts>"i));

#patch per las errors de vocabulari
REMOVE V IF (0 ("<matin>"i));
REMOVE N IF (0 ("<nos>"i)) (NOT -1 DET + Masc OR NUM);
REMOVE V IF (0 ("<encara>"i));
REMOVE V IF (0 ("<monde>"i) or ("<mond>"i));
REMOVE V IF (0 ("<ongan>"i));
REMOVE V IF (0 ("<mau>"i)); #gascon seulement
REMOVE Ple IF (0 ("<plea>"i) OR ("<pleas>"i));
REMOVE AJ IF (0 ("<man>"i) OR ("<mans>"i));
REMOVE AJ IF (0 ("<sala>"i)) (-1 DET + FemSg OR AJ + FemSg);
REMOVE AJ IF (0 ("<salas>"i)) (-1 DET + FemPl OR AJ + FemPl OR NUM);
REMOVE AJ IF (0 ("<mèca>"i));
REMOVE AJ IF (0 ("<mècas>"i));
REMOVE AJ IF (0 ("<mècha>"i));
REMOVE AJ IF (0 ("<mèchas>"i));
REMOVE AJ IF (0 ("<causa>"i));
REMOVE AJ IF (0 ("<causas>"i));
REMOVE AJ IF (0 ("<convèrsa>"i));
REMOVE AJ IF (0 ("<convèrsas>"i));
REMOVE AJ IF (0 ("<sèrva>"i));
REMOVE AJ IF (0 ("<sèrvas>"i));
REMOVE AJ IF (0 ("<prima>"i)) (-1 DET + FemSg);
REMOVE AJ IF (0 ("<discutida>"i)) (-1 DET + FemSg OR AJ + FemSg);
REMOVE AJ IF (0 ("<discutidas>"i)) (-1 DET + FemPl OR AJ + FemPl OR NUM);
REMOVE AJ IF (0 ("<traça>"i));
REMOVE AJ IF (0 ("<traças>"i));
REMOVE AJ IF (0 ("<ondada>"i)) (-1 DET + FemSg OR AJ + FemSg);
REMOVE AJ IF (0 ("<ondadas>"i)) (-1 DET + FemPl OR AJ + FemPl OR NUM);
REMOVE AJ IF (0 ("<temptativa>"i));
REMOVE AJ IF (0 ("<temptativas>"i));
REMOVE AJ IF (0 ("<flama>"i)) (-1 DET + FemSg OR AJ + FemSg);
REMOVE AJ IF (0 ("<flamas>"i)) (-1 DET + FemPl OR AJ + FemPl OR NUM);
REMOVE AJ IF (0 ("<moleta>"i));
REMOVE AJ IF (0 ("<moletas>"i));
REMOVE AJ IF (0 ("<menina>"i));
REMOVE AJ IF (0 ("<meninas>"i));
REMOVE N IF (0 ("<espia>"i));

REMOVE AJ IF (0 ("morisc")) (0 V);

REMOVE Brau IF (0 ("brave"));

REMOVE ("ga") IF (0 ("gas")) ;

REMOVE V IF (0 ("<gaug>"i)) (-1 DET + MascSg or AJ + MascSg);

REMOVE AV IF (0 ("<entorn>"i)) (-1 DET + MascSg OR AJ + MascSg);

REMOVE N IF (0 ("assegurat") OR ("iniciat") OR ("preferit")) (-1 ("a"));

REMOVE N IF (0 ("dant")) ((-1 ("en")) OR (-2 ("en")) OR (-3 ("en")));

REMOVE V IF (0 ("dètz")) (1 unknown);

REMOVE N IF (0 ("<van>"i)) (NOT -1 DET + MascSg);

REMOVE N IF (0 ("<ara>"i)) (NOT -1 DET + FemSg);

#lengadocian sonque
REMOVE N IF (0 ("<fan>"i)) (NOT -1C DET + Sg OR AJ + Sg) ;
REMOVE N IF (0 ("<fan>"i)) (-1C AJ + Sg) (NOT -2C DET + Sg) ;

REMOVE V IF (0 ("<fòra>"i)) ;
REMOVE V IF (0 ("<aval>"i)) ;
REMOVE V IF (0 ("<entre>"i)) (NOT -1 ("que")) ;
REMOVE V IF (0 ("<un>"i) OR ("<una>"i) or ("<unas>"i)) ;
REMOVE V IF (0 ("<les>"i)) ;

REMOVE V IF (0 ("<manca>"i)) (-1 ("<la>"i)) (1 ("de")) ;
REMOVE Conjadv IF (0 ("<manca>"i)) (NOT -1 NUM OR ("<un>"i) OR ("<lo>"i)) ;
REMOVE Conjadv IF (0 ("<manca>"i)) (1 ("<un>"i) OR ("<lo>"i)) (NOT 2 ("<quart>"i))  ;

REMOVE V IF (0 ("<amassa>"i)) (-1 V) ;

SELECT V IF (0 ("<val>"i)) (1 ("<melhor>"i) OR ("<miélher>"i) OR ("<mélher>"i)) ;

REMOVE N IF (0 ("<portariá>"i)) (NOT -1 DET + FemSg) ;

REMOVE V IF (0 ("<cambra>"i)) (-1 DET + FemSg) ;
REMOVE V IF (0 ("<cambras>"i)) (-1 DET + FemPl) ;

REMOVE V IF (0 ("<idèa>"i) or ("<idea>"i)) (-1 DET + FemSg OR AJ + FemSg) ;

REMOVE V IF (0 ("<viu>"i)) (-1 N + MascSg) ;
REMOVE V IF (0 ("<viu>"i)) (-1 Ser) ;

REMOVE V IF (0 N) (0 ("<permanenta>"i) OR ("<politica>"i)) ;


SELECT V IF (0 ("<còsta>"i)) (1 ("<car>"i)) ;
SELECT V IF (0 ("<còsta>"i)) (1 NUM) (2 ("èuro") OR ("euro") OR ("franc") OR ("dollar") OR ("dòlar")) ;
SELECT V IF (0 ("<còsta>"i)) (1 NUM) (2 NUM) (3 ("èuro") OR ("euro") OR ("franc") OR ("dollar") OR ("dòlar")) ;
SELECT V IF (0 ("<còsta>"i)) (1 AV) (2 ("<car>"i)) ;
SELECT V IF (0 ("<còsta>"i)) (1 AV OR PREAV) (1 AV) (2 ("<car>"i)) ;

REMOVE AV IF (0 ("<fons>"i)) (-1 DET) ;

REMOVE AV IF (0 ("<jos>"i)) (1 N OR DET) ;

REMOVE ("ovale") IF (0 ("oval") OR ("ovau")) ;

SELECT N IF (0 ("<gents>"i)) (-1 DET + FemPl) ;
SELECT N IF (0 ("<gents>"i)) (-1 AJ + FemPl) (-2 DET + FemPl) ;

SELECT NUM IF (0 ("<nòu>"i) OR ("<nau>"i)) (1 ("mes")) ;
SELECT NUM IF (0 ("<nòu>"i) OR ("<nau>"i)) (1 N + Pl_strict) ;
SELECT NUM IF (0 ("<nòu>"i) OR ("<nau>"i)) (1 N + Fem_strict) ;
SELECT NUM IF (0 ("<nòu>"i) OR ("<nau>"i)) (-1 ("per")) ;

REMOVE N IF (0 ("<cort>"i)) (-1 DET + FemSg) ;

SELECT N IF (0 ("fin")) (-1 DET + FemSg) ;

REMOVE Conjco IF (0 ("ne")) (1 V) ; #A affiner plus tard

REMOVE PREP IF (0 ("<manca>"i)) (-1 DET + FemSg OR AJ + FemSg);
REMOVE PREP IF (0 ("<manca>"i)) (1 ("de"));

REMOVE N IF (0 ("<luènh>"i)) (NOT -1 DET + MascSg OR AJ + MascSg) ;

REMOVE N IF (0 ("<de>"i)) (NOT 1 ("de")) ;

REMOVE ("fraisse") IF (0 ("frais")) ;


REMOVE V IF (0 ("<augan>"i) OR ("<lenga>"i) OR ("<lengas>"i) OR ("<monde>"i) OR ("<haut">i) OR ("<hauta>"i) OR ("<hauts>"i) OR ("<hautas>"i) OR ("<paraula>"i) OR ("<paraulas>"i) OR ("<ara>"i) OR ("<aiga>"i) OR ("<aigas>"i) OR ("<vaca>"i) OR ("<vacas>"i) OR ("<Joan>") OR ("<pèira>"i) OR ("<pèiras>"i) OR ("<nòva>"i) OR ("<nòvas>"i) OR ("<sable>"i) OR ("<sables>"i) OR ("<granat>"i) OR ("<granats>"i) OR ("<granada>"i) OR ("<granadas>"i) OR ("<alengat>"i) OR ("<alengada>"i) OR ("<alengats>"i) OR ("<alengadas>"i) OR ("<polit>"i) OR ("<polida>"i) OR ("<polits>"i) OR ("<polidas>"i) OR ("<solide>"i) OR ("<solides>"i) OR ("<ausèra>"i) OR ("<ausèras>"i) OR ("<senat>"i) OR ("<senada>"i) OR ("<China>") OR ("<teula>"i) OR ("<teulas>"i) OR ("<hereda>"i) OR ("<heredas>"i) OR ("<linha>"i) OR ("<linhas>"i) OR ("<arromerat>"i) OR ("<arromerada>"i) OR ("<arromerats>"i) OR ("<arromeradas>"i) OR ("<sorda>"i) OR ("<sordas>"i) OR ("<i>"i) OR ("<escarpa>"i) OR ("<escarpas>"i) OR ("<vesia>"i) OR ("<vesias>"i) OR ("<lheitèra>"i) OR ("<lheitèras>"i) OR ("<hèsta>"i) OR ("<hèstas>"i) OR ("<fèsta>"i) OR ("<fèstas>"i) OR ("<amor>"i) OR ("<amors>"i) OR ("<pèrla>"i) OR ("<pèrlas>"i) OR ("<istòria>"i) OR ("<istòrias>"i) OR ("<cementèri>"i) OR ("<cementèris>"i) OR ("<camisa>"i) OR ("<camisas>"i) OR ("<istorian>"i) OR ("<istorians>"i) OR ("<boca>"i) OR ("<bocas>"i) OR ("<zòna>"i) OR ("<zònas>"i) OR ("<imatge>"i) OR ("<imatges>"i) OR ("<andada>"i) OR ("<andadas>"i) OR ("<frasa>"i) OR ("<frasas>"i) OR ("<taure>"i) OR ("<taures>"i) OR ("<tèrra>"i) OR ("<tèrras>"i) OR ("<moqueta>"i) OR ("<moquetas>"i) OR ("<renda>"i) OR ("<rendas>"i) OR ("<nòvi>"i) OR ("<nòvia>"i) OR ("<nòvias>"i) OR ("<tala>"i) OR ("<talas>"i) OR ("<biais>"i) OR ("<biaisses>"i) OR ("<membre>"i) OR ("<membres>"i) OR ("<fèsta>"i) OR ("<fèstas>"i) OR ("<aisit>"i) OR ("<aisida>"i) OR ("<aisits>"i) OR ("<aisidas>"i) OR ("<gargamèla>"i) OR ("<gargamèlas>"i) OR ("<estable>"i) OR ("<establa>"i) OR ("<estables>"i) OR ("<establas>"i) OR ("<tipe>"i) OR ("<tipes>"i) OR ("<temporada>"i) OR ("<temporadas>"i) OR ("<viste>"i) OR ("<eissit>"i) OR ("<eissida>"i) OR ("<eissits>"i) OR ("<eissidas>"i) OR ("<jaça>"i) OR ("<jaças>"i) OR ("<dotze>"i) OR ("<carrat>"i) OR ("<carrada>"i) OR ("<carrats>"i) OR ("<carradas>"i) OR ("<mot>"i) OR ("<volontat>"i) OR ("<volontats>"i) OR ("<pagina>"i) OR ("<paginas>"i) OR ("<mètge>"i) OR ("<mètges>"i) OR ("<Canada>") OR ("<pèça>"i) OR ("<pèças>"i) OR ("<facultat>"i) OR ("<facultats>"i) OR ("<singlar>"i) OR ("<òsca>"i) OR ("<Espace>") OR ("<cendre>"i) OR ("<obratge>"i) OR ("<obratges>"i) OR ("<politica>"i) OR ("<politicas>"i) OR ("<preséncia>"i) OR ("<preséncias>"i) OR ("<vitamina>"i) OR ("<vitaminas>"i)) ;

REMOVE V IF (0 ("<tara>"i)) (1 N + FemSg OR AJ + FemSg OR NP + FemSg) ; #gascon seulement

REMOVE V IF (0 ("<escotisson>"i)) (-1 DET + FemSg OR AJ + FemSg) ;

REMOVE P2 IF (0 ("<vistas>"i)) ;
REMOVE P3 IF (0 ("<vista>"i)) ;

SELECT N IF (0 ("<Senat>")) ;

SELECT V IF (0 ("<veire>"i)) (-1 ("(")) ;

SELECT VBpp IF (0 ("<aguda>"i) OR ("<agudas>"i)) (-1 Haver) ;
SELECT VBpp IF (0 ("<aguda>"i) OR ("<agudas>"i)) (-1 AV) (-2 Haver) ;

REMOVE N IF (0 ("<Vaduda>")) (1 ("a"));
REMOVE V IF (0 ("<punt>"i));
REMOVE V IF (0 ("<punts>"i));
REMOVE N IF (0 ("<quina>"i)) (1 N + FemSg);
REMOVE N IF (0 ("<quinas>"i)) (1 N + FemPl);
REMOVE N IF (0 ("<quina>"i)) (1 AJ + FemSg) (2 N + FemSg);
REMOVE N IF (0 ("<quinas>"i)) (1 AJ + FemPl) (2 N + FemPl);
REMOVE N IF (0 ("<quina>"i)) (1 PREAV) (2 AJ + FemSg) (3 N + FemSg);
REMOVE N IF (0 ("<quinas>"i)) (1 PREAV) (2 AJ + FemPl) (3 N + FemPl);
REMOVE N IF (NOT -1 DET + FemSg) (0 ("<quina>"i)) (1 Ser + Sg) ;
REMOVE N IF (NOT -1 DET + FemPl) (0 ("<quinas>"i)) (1 Ser + Pl) ;
REMOVE N IF (NOT -1 DET + FemSg) (0 ("<quina>"i)) (1 Vmod + Sg) (2 Ser + VBinf) ;
REMOVE N IF (NOT -1 DET + FemPl) (0 ("<quinas>"i)) (1 Vmod + Pl) (2 Ser + VBinf) ;
REMOVE V IF (0 ("<cas>"i)) (-1 DET + Masc);
REMOVE V IF (0 ("<escolan>"i)) (-1 DET + Masc);
REMOVE V IF (0 ("<brave>"i)) (1 N + MascSg);
REMOVE V IF (0 ("<braves>"i)) (1 N + MascPl);
REMOVE V IF (0 ("<lei>"i)) (-1 DET + FemSg);
REMOVE V IF (0 ("<lei>"i)) (-1 AJ + FemSg) (-2 DET + FemSg);
SELECT N IF (0 ("<lei>"i)) (-1 PREAV) (-2 AJ + FemSg) (-3 DET + FemSg);
REMOVE V IF (0 ("<sas>"i)) (1 N + FemPl);
REMOVE V IF (0 ("<sas>"i)) (1 AJ + FemPl) (2 N + FemPl);
REMOVE V IF (0 ("<sas>"i)) (1 PREAV) (2 AJ + FemPl) (3 N + FemPl);

REMOVE N IF (0 ("<pels>"i)) (NOT -1 DET + MascPl OR AJ + MascPl) ;
REMOVE N IF (0 ("<pels>"i)) (NOT -2 DET + MascPl) (-1 AJ + MascPl) ;

REMOVE N IF (0 ("<pel>"i)) (NOT -1 DET + MascSg OR AJ + MascSg) ;
REMOVE N IF (0 ("<pel>"i)) (NOT -2 DET + MascSg) (-1 AJ + MascSg) ;

REMOVE DET IF (0 ("<tau>"i)) (1 N + MascSg) (NOT 2 Vconj) ;
REMOVE DET IF (0 ("<taus>"i)) (1 N + MascPl) (NOT 2 Vconj) ;

SELECT DET IF (0 ("<aquel>"i) OR ("<aqueth>"i)) (1 N + MascSg OR NP + MascSg);
SELECT DET IF (0 ("<aquel>"i) OR ("<aqueth>"i)) (1 AJ + MascSg) (2 N + MascSg OR NP + MascSg);
SELECT DET IF (0 ("<aquel>"i) OR ("<aqueth>"i)) (1 ("«")) (2 N + MascSg OR NP + MascSg);
SELECT DET IF (0 ("<aqueles>"i) OR ("<aqueths>"i) OR ("aquels"i)) (1 N + MascPl OR NP + MascPl);
SELECT DET IF (0 ("<aqueles>"i) OR ("<aqueths>"i) OR ("aquels"i)) (1 AJ + MascPl) (2 N + MascPl OR NP + MascPl);
SELECT DET IF (0 ("<aqueles>"i) OR ("<aqueths>"i) OR ("aquels"i)) (1 ("«")) (2 N + MascPl OR NP + MascPl);
SELECT DET IF (0 ("<aquela>"i) OR ("<aquera>"i)) (1 N + FemSg OR NP + FemSg);
SELECT DET IF (0 ("<aquela>"i) OR ("<aquera>"i)) (1 AJ + FemSg) (2 N + FemSg OR NP + FemSg);
SELECT DET IF (0 ("<aquela>"i) OR ("<aquera>"i)) (1 ("«")) (2 N + FemSg OR NP + FemSg);
SELECT DET IF (0 ("<aquelas>"i) OR ("<aqueras>"i)) (1 N + FemPl OR NP + FemPl);
SELECT DET IF (0 ("<aquelas>"i) OR ("<aqueras>"i)) (1 AJ + FemPl) (2 N + FemPl OR NP + FemPl);
SELECT DET IF (0 ("<aquelas>"i) OR ("<aqueras>"i)) (1 ("«")) (2 N + FemPl OR NP + FemPl);
SELECT DET IF (0 ("aquel"i) OR ("aqueth"i)) (1 unknown);
SELECT DET IF (0 ("aquel"i) OR ("aqueth"i)) (1 ("«")) (2 unknown);

SELECT AV (0 ("<au darrèr>"i)) ;

SELECT N IF (0 ("par")) (1 ("de")) ;

REMOVE ("èster") + (vbser) IF (0 ("èsser") + (vbser)) ;
REMOVE ("èster") + (vblex) IF (0 ("èsser") + (vblex)) ;
REMOVE ("hèr") + (vbhaver) IF (0 ("har") + (vbhaver)) ;
REMOVE ("hèr") + (vblex) IF (0 ("har") + (vblex)) ;

SELECT VBpp IF (-1 ("còp")) (-2 ("un")) ;


# N + SG OR N + PL (gascon subretot)

SELECT Pl_strict IF (-1 ("<i a>"i)) (0C N) (0 N + Sg_strict) (NOT 1 AJ_PP + Sg_strict) (NOT 2 AJ_PP + Sg_strict) ;	# i a votz
SELECT Pl_strict IF (-2 ("<i a>"i)) (-1 AV) (0C N) (0 N + Sg_strict) (NOT 1 AJ_PP + Sg_strict) (NOT 2 AJ_PP + Sg_strict) ;
SELECT Pl_strict IF (-3 ("<i a>"i)) (-2 AV) (1 AV) (0C N) (0 N + Sg_strict) (NOT 1 AJ_PP + Sg_strict) (NOT 2 AJ_PP + Sg_strict) ;
SELECT Pl_strict IF (-2 ("i")) (-1 Aver) (0C N) (0 N + Sg_strict) (NOT 1 AJ_PP + Sg_strict) (NOT 2 AJ_PP + Sg_strict) ;	# i a votz
SELECT Pl_strict IF (-3 ("i")) (-2 Aver) (-1 AV) (0C N) (0 N + Sg_strict) (NOT 1 AJ_PP + Sg_strict) (NOT 2 AJ_PP + Sg_strict) ;
SELECT Pl_strict IF (-4 ("i")) (-3 Aver) (-2 AV) (1 AV) (0C N) (0 N + Sg_strict) (NOT 1 AJ_PP + Sg_strict) (NOT 2 AJ_PP + Sg_strict) ;

SELECT Pl_strict IF (-1C BOS OR Conjsub OR Conjadv OR Rel OR Que) (0C N) (0 N + Sg_strict) (1C V LINK NOT 0 VBpp) (1 V + P3 + Pl) ;	# cors començan
SELECT Pl_strict IF (-2C BOS OR Conjsub OR Conjadv OR Rel OR Que) (-1 AV) (0C N) (0 N + Sg_strict) (1C V LINK NOT 0 VBpp) (1 V + P3 + Pl) ;


REMOVE ("còrse") + N IF (0 ("còrse") + N) (0 ("còrs") + N) (1 De) (2 Ant OR Cog) ;
REMOVE ("còrse") + N IF (0 ("còrse") + N) (0 ("còrs") + N) (1 De) (2 Dignitat OR Grade OR Enfant OR Familha) ;
REMOVE ("còrse") + N IF (0 ("còrse") + N) (0 ("còrs") + N) (1 De) (2 DET) (3 Dignitat OR Grade OR Enfant OR Familha) ;
REMOVE ("còrse") + N IF (0 ("còrse") + N) (0 ("còrs") + N) (1 De) (2 Animal_non_bestiar OR Bestiar) ;
REMOVE ("còrse") + N IF (0 ("còrse") + N) (0 ("còrs") + N) (1 De) (2 DET) (3 Animal_non_bestiar OR Bestiar) ;
REMOVE ("còrse") + N IF (0 ("còrse") + N) (0 ("còrs") + N) (1 De) (2 Gentilici + MajIni) ;
REMOVE ("còrse") + N IF (0 ("còrse") + N) (0 ("còrs") + N) (1 De) (2 DET) (3 Gentilici + MajIni) ;
REMOVE ("còrs") + N ;


#de completar : desambiguizacion present imperfait
#Ne fonctionne pas SELECT PRI IF (0 PRI) (0 PII) (NOT 1* PII BARRIER FinFr) (NOT 1* IFI BARRIER FinFr) (NOT -1* PII BARRIER FinFr) (NOT -1* IFI BARRIER FinFr) ;

# VBpp / IFI
REMOVE IFI IF (-2C VBpp) (-1 Conjco) (0 IFI) (0 VBpp) ;	# èi pas jamés legit ni ausit
SELECT IFI IF (-2C IFI) (-1 Conjco) (0 IFI) (0 VBpp) ;
REMOVE IFI IF (2C VBpp) (1 Conjco) (0 IFI) (0 VBpp) ;
SELECT IFI IF (2C IFI) (1 Conjco) (0 IFI) (0 VBpp) ;
REMOVE IFI IF (-3C VBpp) (-2 Conjco) (-1 AV OR PREAV) (0 IFI) (0 VBpp) ;
SELECT IFI IF (-3C IFI) (-2 Conjco) (-1 AV) (0 IFI) (0 VBpp) ;
REMOVE IFI IF (3C VBpp) (2 AV) (1 Conjco) (0 IFI) (0 VBpp) ;
SELECT IFI IF (3C IFI) (2 AV) (1 Conjco) (0 IFI) (0 VBpp) ;

# PRI / PII, IFI
SELECT PRI IF (-2C PRI) (-1 Conjco) (0 PII OR IFI) (0 PRI) ;
SELECT PII OR IFI IF (-2C PII OR IFI) (-1 Conjco) (0 PII OR IFI) (0 PRI) ;
SELECT PRI IF (2C PRI) (1 Conjco) (0 PII OR IFI) (0 PRI) ;
SELECT PII OR IFI IF (2C PII OR IFI) (1 Conjco) (0 PII OR IFI) (0 PRI) ;
SELECT PRI IF (-3C PRI) (-2 Conjco) (-1 AV OR Pro) (0 PII OR IFI) (0 PRI) ;
SELECT PII OR IFI IF (-3C PII OR IFI) (-2 Conjco) (-1 AV OR Pro) (0 PII OR IFI) (0 PRI) ;
SELECT PRI IF (3C PRI) (2 AV OR Pro) (1 Conjco) (0 PII OR IFI) (0 PRI) ;
SELECT PII OR IFI IF (3C PII OR IFI) (2 AV OR Pro) (1 Conjco) (0 PII OR IFI) (0 PRI) ;
REMOVE PII OR IFI IF (0 PRI) (1* ("uèi") OR ("uei") OR ("ué") OR ("auèi") OR ("aué") OR ("uèi lo dia") OR ("aué en dia") OR ("uèi lo jorn") OR ("ara") OR ("adara") OR ("actualament")) ;
REMOVE PII OR IFI IF (0 PRI) (-1* ("uèi") OR ("uei") OR ("ué") OR ("auèi") OR ("aué") OR ("uèi lo dia") OR ("aué en dia") OR ("uèi lo jorn") OR ("ara") OR ("adara") OR ("actualament")) ;
REMOVE PRI IF (0 PII) (1C* PIS) (NOT 1* PRI) (NOT -1* PRI) ;
REMOVE PRI IF (0 PII) (-1C* PIS) (NOT 1* PRI) (NOT -1* PRI) ;
REMOVE PII OR IFI IF (0 PRI LINK NOT 0 Haver) (1C* PRI LINK NOT 0 Haver) ;
REMOVE PII OR IFI IF (0 PRI LINK NOT 0 Haver) (-1C* PRI LINK NOT 0 Haver) ;
REMOVE PRI IF (0 PII LINK NOT 0 Haver) (1C* PII LINK NOT 0 Haver) ;
REMOVE PRI IF (0 PII LINK NOT 0 Haver) (-1C* PII LINK NOT 0 Haver) ;
REMOVE PRI IF (0 IFI LINK NOT 0 Haver) (1C* IFI LINK NOT 0 Haver) ;
REMOVE PRI IF (0 IFI LINK NOT 0 Haver) (-1C* IFI LINK NOT 0 Haver) ;

REMOVE IFI + P2 IF (-1 N_AJ + Sg) (0 PRI + P3 + Sg) ;	# Aquera corruda estarís e estarís
REMOVE IFI + P2 IF (-2 N_AJ + Sg) (-1 AV OR Enon OR Pro) (0 PRI + P3 + Sg) ;	# Aquera corruda nos estarís e estarís
REMOVE IFI + P2 IF (-3 N_AJ + Sg) (-2 AV OR Enon OR Pro) (-1 AV OR Pro) (0 PRI + P3 + Sg) ;
REMOVE IFI + P2 IF (-4 N_AJ + Sg) (-3 AV OR Enon OR Pro) (-2 AV OR Pro) (-1 AV OR Pro) (0 PRI + P3 + Sg) ;

# PRI / PRS
SELECT PRI IF (-2C PRI) (-1 Conjco) (0 PRS) (0 PRI) ;
SELECT PRS IF (-2C PRS) (-1 Conjco) (0 PRS) (0 PRI) ;
SELECT PRI IF (2C PRI) (1 Conjco) (0 PRS) (0 PRI) ;
SELECT PRS IF (2C PRS) (1 Conjco) (0 PRS) (0 PRI) ;
SELECT PRI IF (-3C PRI) (-2 Conjco) (-1 AV OR Pro) (0 PRS) (0 PRI) ;
SELECT PRS IF (-3C PRS) (-2 Conjco) (-1 AV OR Pro) (0 PRS) (0 PRI) ;
SELECT PRI IF (3C PRI) (2 AV OR Pro) (1 Conjco) (0 PRS) (0 PRI) ;
SELECT PRS IF (3C PRS) (2 AV OR Pro) (1 Conjco) (0 PRS) (0 PRI) ;
REMOVE PRS IF (0 PRI) (NOT -1* Que OR Conjadv) ;
#REMOVE PRS IF (0 PRI) (NOT -1* Que OR (".*que"r) + Conjadv OR ("quan") + Conjadv OR ("quand") + Conjadv) ;

LIST PrsNeg = "caler" "faler" "pensar" "opinar" "creire" "créder" "créser" "creir" "voler" "desirar" "delerar" "demandar" "demanar" "exigir" ; # vèrbs que exigissin PRS après negacion
REMOVE PRI IF (-3* PrsNeg LINK 1 ("pas")) (0 PRS) ;

# PII / IFI
LIST Marca_IFI = ("ièr") ("ger") ("avant-ièr") ("davant-ger") ;
REMOVE PII (0 IFI) (-1*C Marca_IFI) ;
REMOVE PII (0 IFI) (1*C Marca_IFI) ;
REMOVE IFI (0 PII) (-1*C PII) ;
REMOVE IFI (0 PII) (1*C PII) ;
REMOVE IFI (0 PII) (<-1*C PII) ;
REMOVE IFI (0 PII) (>1*C PII) ;

SELECT AJ + &&AcordSN IF (-2C PREP) (-1 N + &&AcordSN) (0 Adjpos + &&AcordSN) ;	# d'escrichs seus
SELECT AJ + &&AcordSN IF (-2C/1 PREP) (-1 N + &&AcordSN) (0 Adjpos + &&AcordSN) ;
REMOVE AJ IF (0 Adjpos) (-1 ("le") OR ("lo") OR ("eth")) ;
REMOVE AJ IF (0 Adjpos) (0 DETpos + MascSg) (1 N + MascSg OR AJ + MascSg) ;
REMOVE AJ IF (0 Adjpos) (0 DETpos + FemSg) (1 N + FemSg OR AJ + FemSg) ;
REMOVE AJ IF (0 Adjpos) (0 DETpos + MascPl) (1 N + MascPl OR AJ + MascPl) ;
REMOVE AJ IF (0 Adjpos) (0 DETpos + FemPl) (1 N + FemPl OR AJ + FemPl) ;
REMOVE AJ IF (0 Adjpos) (0 DETpos) (1 unknown) ;

LIST preppos = "a noste" "a nòste" "a vòste" "a lor" "a loa" "de noste" "de nòste" "de vòste" "de lor" "de loa" "per noste" "per nòste" "per vòste" "per lor" "per loa" "tà noste" "tà nòste" "tà vòste" "tà lor" "tà loa" "entà noste" "entà nòste" "entà vòste" "entà lor" "entà loa" "cap a noste" "cap a nòste" "cap a vòste" "cap a lor" "cap a loa" "cap tà noste" "cap tà nòste" "cap tà vòste" "cap tà lor" "cap tà loa" "de cap tà noste" "de cap tà nòste" "de cap tà vòste" "de cap tà lor" "de cap tà loa" "de cap a noste" "de cap a nòste" "de cap a vòste" "de cap a lor" "de cap a loa" ;

# Fonciona pas ; provisòriament remplaçat per la linha çai-jos REMOVE SUB:1 PREP + DET IF (0 preppos) (NOT 1 N + MascSg OR AJ + MascSg) ;
SELECT AV IF (0 preppos) (NOT 1 N + MascSg OR AJ + MascSg) ;
# Fonciona pas ; provisòriament remplaçat per la linha çai-sus REMOVE SUB:1 PREP + AJ IF (0 preppos) (NOT 1 N + MascSg OR AJ + MascSg) ; ;
REMOVE AV IF (0 preppos) (1 N + MascSg OR AJ + MascSg) ;
REMOVE AV IF (0 ("a lor") OR ("de lor") OR ("per lor") OR ("tà lor") OR ("entà lor") OR ("de cap tà lor") OR ("de cap a lor") OR ("cap tà lor") OR ("cap a lor")) (1 V OR Pro) ;
SELECT AV IF (0 ("a lor") OR ("de lor") OR ("per lor") OR ("tà lor") OR ("entà lor") OR ("de cap tà lor") OR ("de cap a lor") OR ("cap tà lor") OR ("cap a lor")) (NOT 1 V OR Pro) ;
# Fonciona pas ; provisòriament remplaçat per la linha çai-sus REMOVE SUB:1 PREP + PRON IF (0 ("a lor") OR ("de lor") OR ("per lor") OR ("tà lor") OR ("entà lor") OR ("de cap tà lor") OR ("de cap a lor") OR ("cap tà lor") OR ("cap a lor")) (NOT 1 V OR Pro) ;

REMOVE IJ IF (0 ("qu'es aquò") OR ("qu'ei aquò")) (1 ("que") OR ("qui")) ;
REMOVE IJ IF (0 ("qu'es aquò") OR ("qu'ei aquò")) (NOT 1* ("?")) ;
SELECT IJ IF (0 ("qu'es aquò") OR ("qu'ei aquò")) (1* ("?")) ;

REMOVE V IF (0 ("<cas>"i)) (-1 DET + Masc OR ("en")) ;

REMOVE V IF (0 ("pas cap de")) (-1 V) ;
REMOVE V IF (0 ("pas cap de")) (-1 AV) (-2 V) ;
REMOVE V IF (0 ("pas cap de")) (-1 AV) (-2 PREAV) (-3 V) ;

REMOVE N + MascSg IF (0 ("<tenor>"i)) (-1 DET + FemSg OR AJ + FemSg) ;
REMOVE N + MascPl IF (0 ("<tenors>"i)) (-1 DET + FemPl OR AJ + FemPl) ;
REMOVE N + FemSg IF (0 ("<tenor>"i)) (NOT -1 DET + FemSg OR AJ + FemSg) ;
REMOVE N + FemPl IF (0 ("<tenors>"i)) (NOT -1 DET + FemPl OR AJ + FemPl) ;


REMOVE NP IF (0 N) (-1 BOS) (NOT 1 NP) (NOT 1 unknownMajIni);