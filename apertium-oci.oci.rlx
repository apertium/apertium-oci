# Problemes especialment complexos de la desambiguació
#	- son: pos o vbser o nom
#	- a: vbhaver o prep
#	- an: vbhaver o nom
#	- se: prn.pro.ref o cnjadv
#	- es: det (aran) o vbser

DELIMITERS = "<.>" "<!>" "<?>" "<...>" "<¶>" "<:>";
SOFT-DELIMITERS = "<,>" "<;>";
SUBREADINGS = LTR ; # Alternate, left-to-right (main reading on the left)

LIST BOS = >>> sent ;
LIST EOS = <<< sent ;

#Categorias
LIST V = vblex vbser vbhaver vbaux vbmod ;
LIST Ser = vbser ;
LIST Haver = vbhaver ;
LIST Vmod = vbmod ("voler") ("poder") ("caler") ("faler") ("aver# de") ("auer# de") ("dever") ("déuer") ("dever") ("soler") ("sòler") ("saber") ;
LIST Conjco = cnjcoo ;
LIST Conjsub = cnjsub ;
LIST Conjadv = cnjadv ;
LIST Enon = enon ;
LIST Rel = rel ;
LIST N = n ;
LIST NP = np ;
LIST AJ = adj ;
LIST N_AJ = n adj ;
LIST DET = det ;
LIST NUM = num ;
LIST PREP = pr ;
LIST PRON = prn ;
LIST PERS = pers ;
LIST AV = adv ;
LIST AVexcl = (adv excl) ;
LIST PREAV = preadv ;
LIST Excl = "!" ;
LIST PRONPers = (prn p1) (prn p2) (prn p3); 
LIST IJ = ij ;
LIST PREDET = predet ;
LIST Pos = pos ;
LIST SENT = sent ;

#Jos=categorias
LIST Tn = tn ;
LIST VBger = ger ;
LIST VBimp = imp ;
LIST Pro = pro ;
LIST Ref = ref ;
LIST PRencl = enc ;
LIST VBinf = inf ;
LIST VBpp = pp ;
LIST Npl = (n pl);
LIST AJpl = (adj pl);
LIST Ns = (n s);
LIST AJs = (adj s);
LIST Nm = (n m);
LIST AJm = (adj m);
LIST Nf = (n f);
LIST AJf = (adj f);
LIST Vconj = pri prs pii pis imp fti ifi cni ;
LIST Itg = itg ;
LIST DETdef = (det def);
LIST DETind = (det ind);
LIST DETpos = (det pos);

SET Ant = (np ant) ;
SET Cog = (np cog) ;
SET Ant_Cog = Ant OR Cog ;
SET Top = (np top) ;
SET Al = (al) ;
SET Acr = (acr) ;
SET AVG = AV - Enon ;

#Listas
SET intrprop = Conjco OR Itg ; #cnjcoo cnjsub rel itg "," ";" sent adv;
LIST motsdetpl = (det pl) (pr pl);
LIST motsdetsg = (det sg) (pr sg);
LIST motsdetf = (det f) (pr f);
LIST motsdetm = (det m) (pr m);

LIST Masc = m mf ;
LIST Fem = f mf ;
LIST Masc_strict = m ;
LIST Fem_strict = f ;

LIST Sg = sg sp;
LIST Pl = pl sp;
LIST Sg_strict = sg ;
LIST Pl_strict = pl ;

SET MascSg = (m sg) OR (m sp) OR (mf sg) OR (mf sp) ;
SET MascPl = (m pl) OR (m sp) OR (mf pl) OR (mf sp) ;
SET FemSg = (f sg) OR (f sp) OR (mf sg) OR (mf sp) ;
SET FemPl = (f pl) OR (f sp) OR (mf pl) OR (mf sp) ;

SET AcordSN = MascSg OR MascPl OR FemSg OR FemPl ;
SET AcordSP = Sg OR Pl ;

LIST P1 = p1 ;
LIST P2 = p2 ;
LIST P3 = p3 ;
LIST Pers = p1 p2 p3 ;

SET Sg1 = (p1 sg) OR (p1 m sg) OR (p1 f sg) OR (p1 mf sg) ;
SET Sg2 = (p2 sg) OR (p2 m sg) OR (p2 f sg) OR (p2 mf sg) ;
SET Sg3 = (p3 sg) OR (p3 m sg) OR (p3 f sg) OR (p3 mf sg) ;
SET Pl1 = (p1 pl) OR (p1 m pl) OR (p1 f pl) OR (p1 mf pl) ;
SET Pl2 = (p2 pl) OR (p2 m pl) OR (p2 f pl) OR (p2 mf pl) ;
SET Pl3 = (p3 pl) OR (p3 m pl) OR (p3 f pl) OR (p3 mf pl) ;
LIST VSg1 = (vblex p1 sg) (vbser p1 sg) (vbhaver p1 sg) (vbmod p1 sg) ;
LIST VSg2 = (vblex p2 sg) (vbser p2 sg) (vbhaver p2 sg) (vbmod p2 sg) ;
LIST VSg3 = (vblex p3 sg) (vbser p3 sg) (vbhaver p3 sg) (vbmod p3 sg) ;
LIST VPl1 = (vblex p1 pl) (vbser p1 pl) (vbhaver p1 pl) (vbmod p1 pl) ;
LIST VPl2 = (vblex p2 pl) (vbser p2 pl) (vbhaver p2 pl) (vbmod p2 pl) ;
LIST VPl3 = (vblex p3 pl) (vbser p3 pl) (vbhaver p3 pl) (vbmod p3 pl) ;

SET AcordSV = Sg1 OR Sg2 OR Sg3 OR Pl1 OR Pl2 OR Pl3 ;

SET CM = (cm) OR (lpar) OR (rpar) OR ("<;>") ;
LIST Excl = "!" ;

#Mots
LIST A = "a";
LIST En = "en";
LIST De = "de";
LIST En_pron = ("en" prn);
LIST Dins = "dins";
LIST Un = "un" ;
LIST An = "an" ;
LIST Eth = "<eth>i" ;
LIST Nostre = "nòstre" "nòste" ;
LIST Vostre = "vòstre" "vòste" ;
LIST Pas = "pas" ;
LIST Cap = "cap" ;
LIST Mai = "mai" "mes" ;
LIST Pus = "pus" ;
LIST Pel = "pel" "peu" ;
LIST Deu = "deu" ;
LIST Que = "que" ;
LIST Se = "se" ;
LIST Las = "las" ;
LIST Mas = "mas" ;
LIST Estat = "estat" ;
LIST Volar = "volar" ;
LIST Voler = "voler" ;
List Artcontrpl = "<als>" "<aus>" "<aths>" "<as>" "<dels>" "<deus>" "<dals>" "<deths>" "<des>" "<suls>" "<suus>" "<taus>" "<taths>" "<entaus>" "<entaths>" "<entàs>" "<pels>" "<peus>" "<peths>" "<preus>" "<vèls>" "<jols>" "<enquiaths>" "<ens>" "<enes>" "<endeus>" "<dambeus>" ;
List Artcontrsg = "<al>" "<au>" "<ath>" "<del>" "<deu>" "<dal>" "<deth>" "<sul>" "<suu>" "<tau>" "<tath>" "<entau>" "<entath>" "<pel>" "<peu>" "<peth>" "<preu>" "<vèl>" "<jol>" "<enquiath>" "<en>" "<ene>" "<endeu>" "<dambeu>" ;
LIST Jorns = "diluns" "dimars" "dimècres" "dimèrcs" "dijòus" "dijaus" "divés" "divendres" "dissabte" "dimenge" ;

List Nummois = "1" "1èr" "1ièr" "2" "3" "4" "5" "6" "7" "8" "9" "10" "11" "12" "13" "14" "15" "16" "17" "18" "19" "20" "21" "22" "23" "24" "25" "26" "27" "28" "29" "30" "31" "<purmèr>" "<prumèr>" "<prumièr>" "<primièr>" "<primèr>" "<dos>" "<dus>" "<tres>" "<quatre>" "<quate>" "<cinc>" "<sièis>" "<sèis>" "<sies>" "<siés>" "<siès>" "<sheis>" "<sèt>" "<uèit>" "<ueit>" "<uòch>" "<uèch>" "<nòu>" "<nau>" "<dètz>" "<onze>" "<dotze>" "<tretze>" "<catòrze>" "<catorze>" "<quatòrze>" "<quatorze>" "<quinze>" "<setze>" "<dètz-e-sèt>" "<dètz-e-uèit>" "<dètz-e-ueit>" "<dètz-e-uèch>" "<dètz-e-uòch>" "<dètz-e-nòu>" "<dètz-e-nau>" "<vint>" "<vingt>" "<vint-e-un>" "<vingt-e-un>" "<vint-e-dos>" "<vint-e-dus>" "<vingt-e-dos>" "<vingt-e-dus>"  "<vint-e-tres>" "<vingt-e-tres>" "<vint-e-quatre>" "<vingt-e-quatre>" "<vint-e-quate>" "<vingt-e-quate>" "<vint-e-cinc>" "<vingt-e-cinc>" "<vint-e-sèis>" "<vingt-e-sèis>" "<vint-e-sièis>" "<vingt-e-sièis>" "<vint-e-sies>" "<vingt-e-sies>" "<vint-e-siès>" "<vingt-e-siès>" "<vint-e-siés>" "<vingt-e-siés>" "<vint-e-sheis>" "<vingt-e-sheis>" "<vint-e-sèt>" "<vingt-e-sèt>" "<vint-e-uèit>" "<vingt-e-uèit>" "<vint-e-ueit>" "<vingt-e-ueit>" "<vint-e-uèch>" "<vingt-e-uèch>" "<vint-e-uòch>" "<vingt-e-uòch>" "<vint-e-nòu>" "<vingt-e-nòu>" "<vint-e-nau>" "<vingt-e-nau>" "<trenta>" "<trenta-e-un>" "<trenta-un>" "<dètz e uèch>" "<dètz e uòch>" "<dètz e nòu>" "<dètz e nau>" "<vingt>" "<vint e un>" "<vingt e un>" "<vint e dos>" "<vint e dus>" "<vingt e dos>" "<vingt e dus>"  "<vint e tres>" "<vingt e tres>" "<vint e quatre>" "<vingt e quatre>" "<vint e quate>" "<vingt e quate>" "<vint e cinc>" "<vingt e cinc>" "<vint e sèis>" "<vingt e sèis>" "<vint e sièis>" "<vingt e sièis>" "<vint e sies>" "<vingt e sies>" "<vint e siès>" "<vingt e siès>" "<vint e siés>" "<vingt e siés>" "<vint e sheis>" "<vingt e sheis>" "<vint e sèt>" "<vingt e sèt>" "<vint e uèit>" "<vingt e uèit>" "<vint e ueit>" "<vingt e ueit>" "<vint e uèch>" "<vingt e uèch>" "<vint e uòch>" "<vingt e uòch>" "<vint e nòu>" "<vingt e nòu>" "<vint e nau>" "<vingt e nau>" "<trenta>" "<trenta e un>" "<trenta un>" ;

# adjectifs qui souvent vont devant le nom
#SET AdjPre = ("ancien") OR ("vieil") OR ("nouveau") OR ("grand") OR ("petit") OR ("majeur") OR ("bon") OR ("mal") OR ("mauvais") OR ("pauvre") OR      ("haut") OR ("bas") OR ("seul") OR ("célèbre") OR ("vrai") OR ("faux") OR ("beau") OR ("sale") OR ("large") OR ("long") OR ("saint") OR ("sacré") OR ("faible") OR ("multiple") OR ("cher") OR ("gros") ;
SET AdjPre = ("ancian") OR ("nòu") OR ("nau") OR ("novèl") OR ("navèth") OR ("grand") OR ("petit") OR ("pichon") OR ("pichòt") OR ("bon") OR ("mal") OR ("naut") OR ("haut") OR ("bas") OR ("baish") ;


LIST Excl = "!" ;

LIST unknown = ("\\*.*"r) ;
LIST unknownMajIni = ("\\*[A-ZÀÁÈÉíÒÓÚÜÇ].*"r) ;
LIST MajIni = ("\\<[A-ZÀÁÄÂÈÉËÊÍÏÎÒÓÖÔÚÜÛÇ].*\\>"r) ;
LIST Majusc = ("\\<[A-ZÉÈÊ][A-ZÂÉÈÊÎÔÛ]*>"r) ;
LIST MinIni = ("\\<[a-zàáäâèéëêíïîòóöôúüûç].*\\>"r) ;
LIST siecles_nom_romains = ("[IVX][IVX]*"r) ;

SET Dignite = ("pape") OR ("patriarche") OR ("évêque") OR ("archevêque") OR ("saint") OR ("saint") OR ("apôtre") OR ("empereur") OR ("roi") OR ("tsar") OR ("vice-roi") OR ("régent") OR ("prince") OR ("infant") OR ("dauphin") OR ("comte") OR ("comtesse") OR ("vicomte") OR ("vicomtesse") OR ("duc") OR ("duchesse") OR ("grand-duc") OR ("grande-duchesse") OR ("archiduc") OR ("archiduchesse") OR ("marquis") OR ("baron") ;



SECTION

REMOVE AV IF (0 ("que")) (NOT 0 Enon) ;	# patch
REMOVE Tn IF (0 ("qui")) ;	# patch
REMOVE Tn IF (0 ("qual")) ;	# patch
REMOVE (mf) IF (0 ("qual")) ;	# patch
REMOVE N IF (0 ("<a>"i)) (NOT 1 (")")) ;		# patch
SELECT PREP IF (0 ("<per>"i)) ;		# patch
SELECT PREP IF (0 ("<pel>"i)) (1 N + MascSg) ;		# patch
SELECT PREP IF (0 ("<pel>"i)) (1 NP + MascSg) ;		# patch
SELECT PREP IF (0 ("<de>"i)) ;		# patch
REMOVE N IF (0 ("<coma>"i)) ;		# patch
REMOVE N IF (0 ("<arren>"i)) ;		# patch
REMOVE V IF (0 ("<arren>"i)) ;		# patch
REMOVE N IF (0 ("<ren>"i)) (1 De) ;		# patch
REMOVE N IF (0 ("<e>"i)) ;		# patch
REMOVE N IF (0 ("<o>"i)) ;		# patch
REMOVE N IF (0 ("<la>"i)) ;		# patch
REMOVE N IF (0 ("<si>"i)) ;		# patch
REMOVE N + ("tau") IF (0 ("tau")) ;		# patch
REMOVE ("taus") IF (-2 DET + MascPl) (-1 N + MascPl) (0 ("taus")) (1 ("com")) ;		# los fèits taus com s’èran passats
REMOVE N IF (NOT -1 DET + MascSg) (0 ("<com>"i)) ;		# patch
SELECT VBinf IF (-1C PREP OR V) (0 ("<far>"i)) ;		# patch
SELECT VBinf IF (-2C PREP OR V) (-1 Pro OR AV) (0 ("<far>"i)) ;		# patch
SELECT VBinf IF (-3C PREP OR V) (-2 Pro OR AV) (-1 Pro OR AV) (0 ("<far>"i)) ;		# patch
SELECT VBinf IF (NOT 0 DET + MascSg) (0 ("<far>"i)) ;		# patch
SELECT V IF (-1 ("<se>"i)) (NOT 0 DET) ;		# se practica # patch
SELECT PRON IF (0 ("<se>"i)) (1 Ser + &&AcordSP) (2 VBpp + &&AcordSP) ;		# se son formats # patch
SELECT Ser + &&AcordSP IF (-1 ("<se>"i)) (0 Ser + &&AcordSP) (1 VBpp + &&AcordSP) ;		# patch
SELECT VBpp + &&AcordSP IF (-2 ("<se>"i)) (-1 Ser + &&AcordSP) (0 VBpp + &&AcordSP) ;		# patch
SELECT PRON IF (0 ("<se>"i)) (1 Ser + &&AcordSP) (2 AV) (3 VBpp + &&AcordSP) ;		# patch
SELECT Ser + &&AcordSP IF (-1 ("<se>"i)) (0 Ser + &&AcordSP) (1 AV) (2 VBpp + &&AcordSP) ;		# patch
SELECT VBpp + &&AcordSP IF (-3 ("<se>"i)) (-2 Ser + &&AcordSP) (-1 AV) (0 VBpp + &&AcordSP) ;		# patch
SELECT PRON IF (0 ("<se>"i)) (1 Ser + &&AcordSP) (2 AV) (3 AV) (4 VBpp + &&AcordSP) ;		# patch
SELECT Ser + &&AcordSP IF (-1 ("<se>"i)) (0 Ser + &&AcordSP) (1 AV) (2 AV) (3 VBpp + &&AcordSP) ;		# patch
SELECT VBpp + &&AcordSP IF (-4 ("<se>"i)) (-3 Ser + &&AcordSP) (-2 AV) (-1 AV) (0 VBpp + &&AcordSP) ;		# patch
SELECT V IF (0 ("<son>"i)) (1 ("<pas>"i)) ;		# patch
SELECT N IF (-1 DET + MascSg) (0 ("<pas>"i)) ;		# un pas # patch
SELECT DET + MascSg IF (0 DET + MascSg) (1 ("<pas>"i)) ;		# un pas # patch
SELECT N IF (-2 DET + MascSg) (-1 AJ + MascSg) (0 ("<pas>"i)) ;		# un important pas # patch
SELECT AJ + MascSg IF (-1 DET + MascSg) (0 AJ + MascSg) (1 ("<pas>"i)) ;		# un important pas # patch
SELECT AV IF (-1 V) (0 ("<pas>"i)) ;		# patch
SELECT V IF (1 ("<pas>"i)) ;		# patch
SELECT ("d'unes") ;	# patch
SELECT PREAV IF (0 ("<plan>"i)) (1C AJ OR AV) ;		# patch
REMOVE N IF (-1C V) (0 ("<plan>"i)) ;		# patch
SELECT PREAV IF (-1 Ser + &&AcordSP) (0 ("<plan>"i)) (1 AJ + &&AcordSP) ;		# patch
SELECT PREAV IF (-2 Ser + &&AcordSP) (-1 AV) (0 ("<plan>"i)) (1 AJ + &&AcordSP) ;		# patch
SELECT AJ IF (-1C N + &&AcordSP) (0 ("<plan>"i) + &&AcordSP) ;		# patch
SELECT AV IF (0 ("<mai>"i)) (1 De) ;		# patch
REMOVE N IF (-1C PREP) (0 ("<veire>"i)) ;		# patch
SELECT PREP IF (-1 N OR AJ) (0 ("<de mai>"i)) ;		# patch
REMOVE N IF (NOT -1 ("mes") OR ("jorn") OR ("jornada") OR ("fèsta") OR ("hèsta")) (0 ("<de mai>"i)) ;		# patch
REMOVE N IF (NOT -1 DET + FemSg) (0 ("<èra>"i)) ;		# patch
REMOVE ("sèir") IF (0 ("èsser")) ;	# patch 
REMOVE ("poirir") IF (0 ("poder")) ;	# patch 
REMOVE ("sabar") IF (0 ("saber")) ;	# patch 
SELECT PREAV IF (0 ("tant")) (1 AJ OR AV) (2 ("coma")) ;
SELECT AJ OR AV IF (-1 ("tant")) (0 AJ OR AV) (1 ("coma")) ;
SELECT Conjadv IF (-2 ("tant")) (-1 AJ OR AV) (0 ("coma")) ;
SELECT PREP IF (0 ("coma")) (1 ("en")) ;
REMOVE N IF (NOT -1 DET) (0 ("<son>"i)) ;	# patch
REMOVE Sg IF (NOT -1 DET) (0 ("<son>"i)) (1C Pl_strict) ;	# son conegudas
REMOVE Sg IF (NOT -1 DET) (0 ("<son>"i)) (1 AV OR PREAV) (2C Pl_strict) ;	# son plan conegudas

SELECT N IF (-1 DET + MascSg) (0 ("<cap>"i)) ;
SELECT N IF (-1 DET + MascSg) (0 ("<cap de>"i) OR ("<cap d'>"i) OR ("<cap d’>"i)) ;
SELECT PRON IF (-1 EOS OR Conjsub OR Conjadv) (0 Cap) ;
SELECT PRON IF (-2 EOS OR Conjsub) (-1 AV OR Conjadv) (0 Cap) ;
SELECT PRON IF (-1 Pas) (0 Cap) ;	# ai pas cap
SELECT PRON IF (-2 Pas) (-1 VBpp) (0 Cap) ;	# ai agut pas cap
SELECT PRON IF (-3 Pas) (-2 AV) (-1 VBpp) (0 Cap) ;	# ai agut pas totjorn cap
SELECT PRON IF (-3 Vmod) (-2 Pas) (-1 VBinf) (0 Cap) ;	# vòli pas manjar cap
SELECT PRON IF (-4 Vmod) (-3 Pas) (-2 AV OR Pro) (-1 VBinf) (0 Cap) ;	# vòli pas ne manjar cap
SELECT PRON IF (-5 Vmod) (-4 Pas) (-3 AV OR Pro) (-2 AV OR Pro) (-1 VBinf) (0 Cap) ;	# vòli pas li'n dire cap
SELECT N IF (0 Cap) (1 NP OR unknownMajIni) ;	# cap Canaveral
SELECT N + (m) IF (0 Cap) (1 NP OR unknownMajIni) ;	# cap Canaveral
SELECT N + (mf) IF (NOT -1 BOS) (0 Cap) (0/* De) (1 Estat OR ("ministèri") OR ("comission") OR ("partit") OR ("union") OR ("politica") OR ("entrepresa") OR ("enterpresa")) ;
SELECT N + (mf) IF (NOT -1 BOS) (0 Cap) (0/* De) (1 Al) ;
SELECT N + (mf) IF (NOT -1 BOS) (0 Cap) (0/* De) (1 Ant_Cog) ;
SELECT N + (mf) IF (NOT -1 BOS) (0 Cap) (0/* De) (1 DET) (2 Estat OR ("govèrn") OR ("conselh") OR ("ministèri") OR ("comission") OR ("partit") OR ("union") OR ("sindicat") OR ("politica") OR ("entrepresa") OR ("enterpresa")) ;
SELECT N + (mf) IF (0 Cap) (1 ("<del>"i) OR ("<deu">i)) (2 Estat OR ("govèrn") OR ("conselh") OR ("ministèri") OR ("comission") OR ("partit") OR ("union") OR ("sindicat") OR ("politica") OR ("entrepresa") OR ("enterpresa")) ;
REMOVE AV IF (-1C PREP) (0 Cap) (1C EOS OR CM OR Conjsub OR Conjadv OR Conjco) ;

SELECT AV IF (-1 Pas) (0 Mai OR Pus) ;	# ai pas pus
SELECT AV IF (-2 Pas) (-1 VBpp) (0 Mai OR Pus) ;	# ai agut pas pus
SELECT AV IF (-3 Pas) (-2 AV) (-1 VBpp) (0 Mai OR Pus) ;	# ai agut pas totjorn pus
SELECT AV IF (-2 ("non")) (-1 V) (0 Mai OR Pus) ;	# non pòden mes
SELECT AV IF (-3 ("non")) (-2 Pro) (-1 V) (0 Mai OR Pus) ;	# non li pòden mes
SELECT AV IF (-4 ("non")) (-3 Pro) (-2 Pro) (-1 V) (0 Mai OR Pus) ;	# non li o pòden mes
SELECT AV IF (-3 ("non")) (-2 Haver) (-1 VBpp) (0 Mai OR Pus) ;	# non an podut mes
SELECT AV IF (-4 ("non")) (-3 Pro) (-2 Haver) (-1 VBpp) (0 Mai OR Pus) ;	# non li an podut mes
SELECT AV IF (-5 ("non")) (-4 Pro) (-3 Pro) (-2 Haver) (-1 VBpp) (0 Mai OR Pus) ;	# non li o an podut mes
SELECT AV IF (-3 Vmod) (-2 Pas) (-1 VBinf) (0 Mai OR Pus) ;	# vòli pas manjar pus
SELECT AV IF (-4 Vmod) (-3 Pas) (-2 AV OR Pro) (-1 VBinf) (0 Mai OR Pus) ;	# vòli pas ne manjar pus
SELECT AV IF (-5 Vmod) (-4 Pas) (-3 AV OR Pro) (-2 AV OR Pro) (-1 VBinf) (0 Mai OR Pus) ;	# vòli pas li'n dire pus
SELECT Conjco IF (-1 EOS) (0 Mai) ;
SELECT Conjco IF (-1 CM) (0 Mai) (NOT 1 AJ) ;

#Un pronom proclitic est totjorn davant un vèrb o un autre pronom
REMOVE Pro IF (NOT 1 V OR Pro);
REMOVE DET IF (1C V OR Pro) (NOT 1 VBpp) ;
SELECT V OR Pro IF (-1C Pro) (NOT -1/* V) ;	# i a un ; i aviá un

SELECT PREP (0 ("a")) (1C Pro) ;	# a lo parlar
SELECT PREP (0 ("a")) (1C Top OR Ant OR Cog OR Al) ;	# a Niça

SELECT ("be") + Enon IF (-1 BOS) ;
SELECT ("que") + Enon IF (-1 BOS) ;
REMOVE ("e") + Enon IF (NOT 1* ("?")) ;
REMOVE ("be") + Enon IF (NOT 1* ("!")) ;
REMOVE ("que") + Enon IF (-1C DET) ;
REMOVE ("que") + Enon IF (-1 ("solide")) ;
SELECT ("que") + Conjsub IF (-1 ("mei")) ;
SELECT ("que") + Conjsub IF (-2 ("mei")) (-1 AJ OR AJ) ;
REMOVE ("que") + Enon IF (NOT -1* V + Pers LINK NOT 0 VBimp) (2* ("?") OR ("!")) ;
REMOVE ("que") + Enon IF (-1C V + Pers OR VBinf OR VBger) ;
REMOVE ("que") + Enon IF (-1 AV) (-2C V + Pers OR VBinf OR VBger) ;
REMOVE ("que") + Enon IF (-1C N_AJ OR VBpp OR NP OR unknownMajIni) (NOT 1 Pro) (2*C V + Pers OR VBinf OR VBger) ;	# los amics que son bons (enon) ; los amics que son bons que son bons (que1 = rel, que 2 = enon)
REMOVE ("que") + Enon IF (-1C N_AJ OR VBpp OR NP OR unknownMajIni) (1 Pro) (NOT 2 Pro) (3*C V + Pers OR VBinf OR VBger) ;
REMOVE ("que") + Enon IF (-1C N_AJ OR VBpp OR NP OR unknownMajIni) (1 Pro) (2 Pro) (4*C V + Pers OR VBinf OR VBger) ;
REMOVE ("que") + Enon IF (-2C N_AJ OR VBpp OR NP OR unknownMajIni) (-1 CM) (NOT 2 Pro) (3*C V + Pers OR VBinf OR VBger) ;
REMOVE ("que") + Enon IF (-2C N_AJ OR VBpp OR NP OR unknownMajIni) (-1 CM) (2 Pro) (NOT 3 Pro) (4*C V + Pers OR VBinf OR VBger) ;
REMOVE ("que") + Enon IF (-2C N_AJ OR VBpp OR NP OR unknownMajIni) (-1 CM) (2 Pro) (3 Pro) (5*C V + Pers OR VBinf OR VBger) ;
SELECT ("non") + Enon IF (1C Pro OR V + Pers LINK NOT 0 VBimp) ;
SELECT SUB:1 ("non") + Enon IF (1C Pro OR V + Pers LINK NOT 0 VBimp) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon BARRIER V) (1C Pro OR V + Pers LINK NOT 0 VBimp) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon BARRIER V) (0 ("ne") OR ("non")) (1 V + Pers LINK NOT 0 VBimp) (2 ("pas") OR ("pas nat")) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon BARRIER V) (0 ("ne") OR ("non")) (1 Pro) (2 V + Pers LINK NOT 0 VBimp) (3 ("pas") OR ("pas nat")) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon BARRIER V) (0 ("ne") OR ("non")) (1 Pro) (2 Pro) (3 V + Pers LINK NOT 0 VBimp) (4 ("pas") OR ("pas nat")) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon BARRIER V) (0 ("be")) (1 V + Pers LINK NOT 0 VBimp) (2* ("!")) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon BARRIER V) (0 ("be")) (1 Pro) (2 V + Pers LINK NOT 0 VBimp) (3* ("!")) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon BARRIER V) (0 ("be")) (1 Pro) (2 Pro) (3 V + Pers LINK NOT 0 VBimp) (4* ("!")) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon BARRIER V) (0 ("e")) (1 V + Pers LINK NOT 0 VBimp) (2* ("?")) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon BARRIER V) (0 ("e")) (1 Pro) (2 V + Pers LINK NOT 0 VBimp) (3* ("?")) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon BARRIER V) (0 ("e")) (1 Pro) (2 Pro) (3 V + Pers LINK NOT 0 VBimp) (4* ("?")) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon OR V) (0 ("que")) (1 V + Pers LINK NOT 0 VBimp) (NOT 2* ("?") OR ("!")) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon OR V) (0 ("que")) (1 Pro) (2 V + Pers LINK NOT 0 VBimp) (NOT 3* ("?") OR ("!")) ;
SELECT Enon IF (NOT -1* Conjadv OR Conjsub OR Rel OR Itg OR Enon OR V) (0 ("que")) (1 Pro) (2 Pro) (3 V + Pers LINK NOT 0 VBimp) (NOT 4* ("?") OR ("!")) ;
REMOVE Enon IF (-1C Enon) ;
REMOVE Enon IF (-1 Enon) ;

SELECT IJ IF (-1 BOS) (0 N) (1 CM) (1* ("!")) ;
SELECT IJ IF (-1 BOS OR CM) (1 ("!")) ;
SELECT IJ IF (-1 BOS OR CM) (0 ("gràcies") OR ("de res")) ;			# COPY-PASTE
REMOVE IJ IF (NOT -1 CM OR BOS) (NOT 1 CM OR EOS) (NOT 1* ("!")) ;
REMOVE IJ IF (NOT -1 CM OR BOS) (NOT 1 CM OR EOS) (0 ("a")) ;
REMOVE IJ IF (NOT -1 CM OR BOS) (0 ("plan")) ;
REMOVE IJ IF (NOT -1 CM OR BOS) (0 ("las")) ;
REMOVE AJ (0 ("las")) (1 V OR Pro) ;
SELECT Pro (0 ("las")) (1C V OR Pro) ;

SELECT AVexcl IF (-1 BOS) (0 AVexcl) (1 ("!")) ;
SELECT AVexcl IF (-2 BOS) (-1 Conjco) (0 AVexcl) (1 ("!")) ;
REMOVE AVexcl ;

SELECT Itg IF (-1 BOS) (0C Itg OR Rel OR Conjsub OR Conjadv) ;	# Qui s'adresse
SELECT Itg IF (-2 BOS) (-1 PREP) (0C Itg OR Rel OR Conjsub OR Conjadv) ;	# A qui s'adresse
SELECT Itg IF (-2 BOS) (-1 Conjco) (0C Itg OR Rel OR Conjsub OR Conjadv) ;	# Mais qui s'adresse
SELECT Itg IF (-3 BOS) (-1 Conjco) (-1 PREP) (0C Itg OR Rel OR Conjsub OR Conjadv) ;	# Mais a qui s'adresse
SELECT Itg IF (-1C V LINK NOT 0 VBpp) (0C Itg OR Rel) ;	# je me demande qui
SELECT Itg IF (-2C V LINK NOT 0 VBpp) (-1 PREP) (0C Itg OR Rel) ;	# je demande avec qui
SELECT Itg IF (-2C V LINK NOT 0 VBpp) (-1 AV) (0C Itg OR Rel) ;	# je ne demande pas qui
SELECT Itg IF (-3C V LINK NOT 0 VBpp) (-2 AV) (-1 PREP) (0C Itg OR Rel) ;	# je ne demande pas avec qui
REMOVE AV + Itg ;

SELECT AV IF (0 ("fòrça")) (1 ("present")) ;	# son fòrça presents
SELECT AV IF (-1C Ser OR ("<son>"i)) (0 ("fòrça")) (1C AJ) ;	# son fòrça presents
SELECT AJ IF (-1C Ser) (0 ("present")) ;
SELECT AJ IF (-2C Ser) (-1 AV) (0 ("present")) ;

REMOVE N IF (NOT -1 DET + Masc) (0 ("nos")) (1 Vconj OR VBinf OR VBger) ;

REMOVE Tn IF (NOT -1 Tn) (0 ("vos")) (1 Vconj) ;

# voler e volar (p.ex. vòli)
SELECT Voler IF (0 Voler) (0 Volar) (1/* VBinf) ;
SELECT Voler IF (0 Voler) (0 Volar) (1 VBinf) ;
SELECT Voler IF (0 Voler) (0 Volar) (-1 (prn pro)) (NOT -1 DET OR PREP);
SELECT Volar IF (0 Voler) (0 Volar) (1 ("a") OR ("cap a")) ;
SELECT Volar IF (0 Voler) (0 Volar) (1 AV) (2 ("a") OR ("cap a")) ;
SELECT Voler IF (0 Voler) (0 Volar) (1 ("que")) ;
SELECT Voler IF (0 Voler) (0 Volar) (1 AV) (2 ("que")) ;
SELECT Voler IF (0 Voler) (0 Volar) (-1 ("què")) (NOT -2 ("en"));

#En es pas un pronom s'es abans un gerondiu (amb possibilitat de pronoms entre los dos)
REMOVE En_pron IF (1* VBger BARRIER (*) - Pro) ;

#Una conjonccion o un pronom relatiu se podon pas trobar en debuta de frasa
#REMOVE Conjco IF (-1 BOS OR SENT);		# en realitat, òc
SELECT Conjco IF (-1 BOS OR SENT) (0 ("<E>")) (NOT 1 CM) (NOT 1* ("?")) ;	
SELECT Conjco IF (-1 BOS OR SENT) (0 ("<E>")) (NOT 1 CM OR Pro OR V + Pers) ;	
REMOVE Conjsub IF (-1 BOS OR SENT);
REMOVE Rel IF (-1 BOS OR SENT);
REMOVE Rel IF (NOT -1 CM OR N OR NP OR AJ OR VBpp OR PRON OR DET);
REMOVE Rel IF (NOT -2 N OR AJ OR VBpp OR PRON OR DET) (-1 CM) ;
SELECT Rel IF (-1C DET) ;

#Un imperatiu seguis pas una conjonccion, un relatiu o un pronom personal
REMOVE VBimp IF (-1C Enon OR Conjco OR Conjsub OR Rel OR Pers);

REMOVE VBimp IF (NOT 1* Excl) ;
REMOVE VBimp IF (0 P3) ;

#Un nom pot pas seguir qu'un vèrbe, un adjectiu, un determinant, un numeral, una prepausicion o un pronom (levat los personals)
#(en titolars periodístics, però, es comença sovint per un nom)
# non : Patxi Zabaleta, actualament cap del partit
REMOVE N IF (NOT -1 BOS OR CM OR V OR AJ OR DET OR NUM OR PREP OR PRON - PRONPers) (NOT -1/* ("de")) (NOT -2 CM) ;

#Un predeterminant es pas seguit que per un determinant
REMOVE PREDET IF (NOT 1 DET);

#Los pronoms possessius son totjorn seguits per un nom, un adjectiu, un advèrb o un numeral
REMOVE DETpos IF (NOT 1 N OR AJ OR AV OR NUM OR NP OR unknown);

# L'enonciatiu es totjorn seguit d'un vèrb o d'un proclitic
REMOVE Enon IF (NOT 1 V OR Pro);

#Una prepausicion es totjorn seguida d'un nom, pronom, adverb, numeral, infinitiu, determinant o adjectiu
REMOVE PREP IF (NOT 1 N OR PRON OR AV OR NUM OR NP OR VBinf OR DET OR AJ) (NOT 0/* PREP + DET) (NOT 0/* PREP + N) ;

#Es pas un vèrbe se, dempuèi lo darrièr vèrbe conjugat, avèm pas agut de novèla proposicion
#REMOVE Vconj IF (NOT -1* intrprop BARRIER Vconj) ;
	# funciona pas: “Es lo primièr còp que vesi aquò”
REMOVE Vconj IF (-1C PREP) (NOT -1 ("<de mai>"i)) ;
REMOVE Vconj IF (-2C PREP) (-1 DET + &&AcordSN) (0 N + &&AcordSN) ;	# per la planta.
SELECT VBinf IF (-1 ("de")) (0C V) ;
SELECT VBinf IF (-1 ("a") + PREP) (0C V) ;
SELECT VBger IF (-1 ("en") + PREP) (0C V) ;
SELECT VBinf IF (-2 ("de")) (-1 Pro) (0C V) ;
SELECT VBinf IF (-2 ("a") + PREP) (-1 Pro) (0C V) ;
SELECT VBger IF (-2 ("en") + PREP) (-1 Pro) (0C V) ;
SELECT VBinf IF (-3 ("de")) (-1 Pro) (-1 Pro) (0C V) ;
SELECT VBinf IF (-3 ("a") + PREP) (-2 Pro) (-1 Pro) (0C V) ;
SELECT VBger IF (-3 ("en") + PREP) (-2 Pro) (-1 Pro) (0C V) ;
REMOVE VBger IF (0 VBinf) (NOT -1 SENT OR ("en")) ;

#Un determinant es pas plural se lo nom/adjectiu que seguis es singular (o masculin feminin...)
REMOVE motsdetpl IF (1C Ns OR AJs);
REMOVE motsdetsg IF (1C Npl OR AJpl);
REMOVE motsdetf IF (1C Nm OR AJm);
REMOVE motsdetm IF (1C Nf OR AJf);

# distincio entre MascPl i FemPl (típicament en terminacions en -es)
SELECT MascPl IF (-1C MascPl) (0 N + MascPl) (NOT 0 ("pel")) ;
SELECT FemPl IF (-1C FemPl) (0 N + FemPl) ;
SELECT MascPl IF (-1C MascPl) (0 AJ + MascPl) ;
SELECT FemPl IF (-1C FemPl) (0 AJ + FemPl) ;
SELECT MascPl IF (1C MascPl) (0 N + MascPl) (NOT 0 ("pel")) ;
SELECT FemPl IF (1C FemPl) (0 N + FemPl) ;
SELECT MascPl IF (1C MascPl) (0 AJ + MascPl) ;
SELECT FemPl IF (1C FemPl) (0 AJ + FemPl) ;
SELECT MascPl IF (-2C MascPl) (-1 AV OR PREAV) (0 AJ + MascPl) ;
SELECT FemPl IF (-2C FemPl) (-1 AV OR PREAV) (0 AJ + FemPl) ;
SELECT MascPl IF (2C MascPl) (1 AV OR PREAV) (0 AJ + MascPl) ;
SELECT FemPl IF (2C FemPl) (1 AV OR PREAV) (0 AJ + FemPl) ;

# AN (+ partipici)

SELECT V IF (0 An + MascSg) (1 VBpp + MascSg) ;
  ## aqueste mes an fach
SELECT V IF (0 An + MascSg) (1 Pas) (2 VBpp + MascSg) ;
SELECT V IF (0 An + MascSg) (1C AV) (2 VBpp + MascSg) ;

# DET

SELECT DETind + &&AcordSN IF (0 DETind + &&AcordSN) (1 N + &&AcordSN) ;	# un enfant
SELECT DETind + &&AcordSN IF (0 DETind + &&AcordSN) (1 AJ + &&AcordSN) ;	# un jaune
SELECT N_AJ + &&AcordSN IF (-1 DETind + &&AcordSN) (0 N_AJ + &&AcordSN) ;
SELECT DET IF (0 DETind) (1C V) ;
SELECT DET IF (0 DETind) (1 unknown) ;	# pedaç, especialment quan falta molt vocabulari (endevinem que és un DET i no una forma del V unir)
REMOVE DET IF (0 Eth) (1 DET);
REMOVE DET IF (0 Eth) (1 Pas);

SELECT DET + &&AcordSN IF (0 DET + &&AcordSN) (1 N_AJ + &&AcordSN) (2 N_AJ + &&AcordSN) (1C N_AJ) (2C N_AJ) ;
SELECT N_AJ + &&AcordSN IF (-1 DET + &&AcordSN) (0 N_AJ + &&AcordSN) (1 N_AJ + &&AcordSN) (0C N_AJ) (1C N_AJ) ;
SELECT N_AJ + &&AcordSN IF (-2 DET + &&AcordSN) (-1 N_AJ + &&AcordSN) (0 N_AJ + &&AcordSN) (-1C N_AJ) (0C N_AJ) ;

REMOVE PRON IF (0 DET + Pos) (1 unknown) ;

# NUM

SELECT NUM IF (-1 ("numéro")) (0 Un); 
REMOVE NUM IF (NOT -1 ("numéro")) (0 Un); 

# PREAV

REMOVE PREAV IF (NOT 1 AJ OR AV) ;
SELECT PREAV IF (0 ("fòrça")) (1C AJ) ;
REMOVE AV IF (0 PREAV) (0 AV) (1C AJ OR AV) ;
REMOVE PREAV IF (0 PREAV) (0 AV) (1C V) ;
REMOVE PREAV IF (0 PREAV) (0 AV) (NOT 1 AJ OR AV) ;
SELECT PREAV IF (-1 N + &&AcordSN) (NOT -1 Vconj) (0 AV) (1 AJ + &&AcordSN) ;
SELECT PREAV IF (-1 AJ + &&AcordSN) (NOT -1 Vconj) (0 AV) (1 AJ + &&AcordSN) ;

# ADJ
REMOVE AJ IF (-1 ("en")) (NOT 1 Conjco OR N) ;

# ADJ POS

REMOVE AJ + Pos IF (NOT -1 Ser) (0 AJ + Pos) ;

# N

SELECT N IF (-1C PREP) (1 EOS) ;	# ambe fòrça.
SELECT N IF (-1C PREP) (1C PREP) (NOT 0 ("tròp")) ;	# discors de fin d'annada

# N / AJ

SELECT NP + &&AcordSN IF(-2 DET + &&AcordSN) (-1 AdjPre + &&AcordSN) (0 NP + &&AcordSN) (NOT -1 ("nau")) ;
SELECT N + &&AcordSN IF(-2 DET + &&AcordSN) (-1 AdjPre + &&AcordSN) (0 N + &&AcordSN) (NOT -1 ("nau")) ;
SELECT AJ + &&AcordSN IF(-1 DET + &&AcordSN) (0 AdjPre + &&AcordSN) (1 NP + &&AcordSN) (NOT 0 ("nau")) ;
SELECT AJ + &&AcordSN IF(-1 DET + &&AcordSN) (0 AdjPre + &&AcordSN) (1 N + &&AcordSN) (NOT 0 ("nau")) ;

SELECT NP + &&AcordSN IF(-1 DET + &&AcordSN) (0 NP + &&AcordSN) (1 AJ + &&AcordSN) ; 
SELECT N + &&AcordSN IF(-1 DET + &&AcordSN) (0 N + &&AcordSN) (1 AJ + &&AcordSN) ; 

SELECT NP + &&AcordSN IF(-2 DET + &&AcordSN) (-1C AJ + &&AcordSN) (0 NP + &&AcordSN) ; 
SELECT N + &&AcordSN IF(-2 DET + &&AcordSN) (-1C AJ + &&AcordSN) (0 N + &&AcordSN) ; 

# N / V

REMOVE N IF (-1C PRON) (0 V) ;		# qui sap
REMOVE V + Pers IF (-1C V + Pers) ;	# voletz ve pariar
REMOVE V + Pers IF (1C V + Pers) ;	# voletz ve pariar

# HAVER

SELECT Haver IF (0 Haver) (1C VBpp) ;	# a cantat
SELECT Haver IF (0 Haver) (1 Haver + VBpp) ;	# a cantat
SELECT Haver IF (0 Haver) (1 AV) (2 VBpp) ;	# a pas cantat
SELECT Haver IF (0 Haver) (1 AV) (2 AV) (3 VBpp) ;	# a pas totjorn cantat
SELECT Haver IF (-1 Haver) (0 Haver + VBpp) ;	# a agut
SELECT Haver IF (-2 Haver) (-1 AV) (0 Haver + VBpp) ;	# a pas agut
SELECT Haver IF (-3 Haver) (-2 AV) (-1 AV) (0 Haver + VBpp) ;	# a pas totjorn agut

# Ser

SELECT Ser IF (0 Ser + &&AcordSP) (1C VBpp + &&AcordSP) ;	# soi estat
SELECT Ser IF (-1 Pro + P1 + Sg) (0 Ser + P1 + Sg) (1 VBpp + Sg) ;	# me soi banhat
SELECT Ser IF (-1 Pro + P2 + Sg) (0 Ser + P2 + Sg) (1 VBpp + Sg) ;	# t'ès banhat
SELECT Ser IF (-1 Pro + P1 + Pl) (0 Ser + P1 + Pl) (1 VBpp + Pl) ;	# nos sèm banhats
SELECT Ser IF (-1 Pro + P2 + Pl) (0 Ser + P2 + Pl) (1 VBpp + Pl) ;	# vos sètz banhats
SELECT Ser IF (-1 Pro + P3 + Ref) (0 Ser + P3 + Sg) (1 VBpp + Sg) ;	# s'es banhat
SELECT Ser IF (-1 Pro + P3 + Ref) (0 Ser + P3 + Pl) (1 VBpp + Pl) ;	# se son banhats
SELECT Ser IF (0 Ser + &&AcordSP) (1 AV) (2 VBpp + &&AcordSP) ;	# soi pas estat
SELECT Ser IF (0 Ser + &&AcordSP) (1 AV) (2 AV) (3 VBpp + &&AcordSP) ;	# soi pas totjorn estat
SELECT Ser IF (-1 Ser + &&AcordSP) (0 Ser + VBpp + &&AcordSP) (1 VBpp + &&AcordSP) ;	# soi estat apelat
SELECT Ser IF (-2 Ser + &&AcordSP) (-1 AV) (0 Ser + VBpp + &&AcordSP) (1 VBpp + &&AcordSP) ;	# soi pas estat apelat
SELECT Ser IF (-1 Ser + &&AcordSP) (0 Ser + VBpp + &&AcordSP) (-1 AV) (2 VBpp + &&AcordSP) ;	# soi estat immediatament apelat
SELECT Ser IF (-2 Ser + &&AcordSP) (-1 AV) (0 Ser + VBpp + &&AcordSP) (1 AV) (2 VBpp + &&AcordSP) ;	# soi pas estat immediatament apelat
SELECT VBpp IF (-2 Ser + &&AcordSP) (-1 Ser + VBpp + &&AcordSP) (0 VBpp + &&AcordSP) ;	# soi estat apelat
SELECT VBpp IF (-3 Ser + &&AcordSP) (-2 AV) (-1 Ser + VBpp + &&AcordSP) (0 VBpp + &&AcordSP) ;	# soi pas estat apelat
SELECT VBpp IF (-3 Ser + &&AcordSP) (-2 Ser + VBpp + &&AcordSP) (-1 AV) (0 VBpp + &&AcordSP) ;	# soi estat immediatament apelat
SELECT VBpp IF (-4 Ser + &&AcordSP) (-3 AV) (-2 Ser + VBpp + &&AcordSP) (-1 AV) (0 VBpp + &&AcordSP) ;	# soi pas estat immediatament apelat

# VBpp

SELECT VBpp IF (0 AJ) (1 ("par")) ;
REMOVE Vconj IF (-1C Haver + Vconj) (0 VBpp) ;	# ajan avut
REMOVE Vconj IF (-1C Ser + Vconj + &&AcordSP) (0 VBpp + &&AcordSP) ;
REMOVE Vconj IF (-2C Haver + Vconj) (-1 AV) (0 VBpp) ;	# ajan pas avut
REMOVE Vconj IF (-2C Ser + Vconj + &&AcordSP) (-1 AV) (0 VBpp + &&AcordSP) ;
REMOVE Vconj IF (-3C Haver + Vconj) (-2 AV) (-1 AV) (0 VBpp) ;	# ajan pas totjorn avut
REMOVE Vconj IF (-3C Ser + Vconj + &&AcordSP) (-2 AV) (-1 AV) (0 VBpp + &&AcordSP) ;

# VBinf

SELECT VBinf IF (0 AJ) (1 ("par")) ;
SELECT AV IF (-1 Vmod) (0 ("<tornar>"i)) (1 VBinf) ;	# pòdi tornar manjar
SELECT VBinf IF (-1 Vmod) (0 VBinf) ;	# pòdi manjar
SELECT Vmod IF (0 Vmod) (1C VBinf) ;	# pòdi manjar
SELECT VBinf IF (-2 Vmod) (-1 AV OR Pro) (0 VBinf) ;	# pòdi pas manjar
SELECT Vmod IF (0 Vmod) (1 AV OR Pro) (2C VBinf) ;	# pòdi pas manjar
SELECT VBinf IF (-3 Vmod) (-2 AV OR Pro) (-1 AV OR Pro) (0 VBinf) ;	# pòdi pas manjar
SELECT Vmod IF (0 Vmod) (1 AV OR Pro) (2 AV OR Pro) (3C VBinf) ;	# pòdi pas manjar

# VBmod

SELECT Vmod IF (0 ("caler")) (1 Que) ;
SELECT Vmod IF (0 ("caler")) (1 AV) (2 Que) ;
SELECT Vmod IF (0 ("caler")) (1 AV) (2 AV) (3 Que) ;
SELECT Vmod IF (0 ("caler")) (-1/* Pro) ;
SELECT Vmod IF (0 ("caler")) (-1 Itg) ;
SELECT Vmod IF (0 ("caler")) (-1 Enon) ;
SELECT Vmod IF (0 ("caler")) (-1 BOS) ;
SELECT Vmod IF (0 ("caler")) (-2 BOS) (1 AV) ;
REMOVE Vmod IF (NOT 1 VBinf OR AV OR Pro) ;
REMOVE Vmod IF (1 AV) (NOT 2 VBinf OR AV OR Pro) ;
REMOVE Vmod IF (1 AV) (1 AV) (NOT 3 VBinf OR AV OR Pro) ;
REMOVE Vmod IF (1 AV) (2 Pro) (NOT 3 VBinf OR Pro) ;
REMOVE Vmod IF (1 Pro) (NOT 2 VBinf OR Pro) ;
REMOVE Vmod IF (1 Pro) (2 Pro) (NOT 2 VBinf) ;

#Vb conjugat après enonciatiu
SELECT Vconj IF (-1C Enon) (NOT 0 Pro) ;

# MOTS

SELECT Haver IF (0 A) (1C VBpp);	# a cantat
SELECT Ser IF (-1 Ser) (0 ("estat"));	# soi estat
SELECT Ser IF (-2 Ser) (-1 AV) (0 ("estat"));	# soi pas estat
SELECT Ser IF (-3 Ser) (-2 AV) (-1 AV) (0 ("estat"));	# soi pas totjorn estat

SELECT Conjsub IF (-1C V) (0 Que) ;	# vòli que
SELECT Conjsub IF (-2C V) (-1 AV) (0 Que) ;	# vòli pas que
SELECT Conjsub IF (-3C V) (-2 AV) (-1 AV) (0 Que) ;	# vòli pas totjorn que
SELECT Conjsub IF (-2C Ser) (-1 AJ OR ("vertat")) (0 Que) ;	# es vertat que
SELECT Conjsub IF (-3C Ser) (-2 AV) (-1 AJ OR ("vertat")) (0 Que) ;	# es pas vertat que
SELECT Conjsub IF (-4C Ser) (-3 AV) (-2 AV OR PREAV) (-1 AJ OR ("vertat")) (0 Que) ;	# es pas totjorn vertat que
SELECT AV IF (0 ("mai") OR ("mei") OR ("pus") OR ("mens")) (1 AJ OR VBpp OR AV) (2 Que) ;	# plus rapide que moi
SELECT AJ OR VBpp OR AV IF (-1 ("mai") OR ("mei") OR ("pus") OR ("mens")) (0 AJ OR VBpp OR AV) (1 Que) ;	# plus rapide que moi
SELECT AJ OR AV IF (-1 ("mai") OR ("mei") OR ("pus") OR ("mens")) (0 AJ OR VBpp OR AV) (1 Que) ;	# plus rapide que moi
SELECT Conjsub IF (-2 ("mai") OR ("mei") OR ("pus") OR ("mens")) (-1 AJ OR VBpp OR AV) (0 Que) ;	# plus rapide que moi
SELECT Rel IF (-1 ("çò")) (0 Que) ;
REMOVE Conjsub IF (-1 CM) (0 Que) ;
REMOVE Conjsub IF (-1 DET) (0 Que) ;
REMOVE Conjsub IF (-1C N) (0 Que) ;
REMOVE Conjsub IF (-2C N) (-1 AJ) (0 Que) ;
REMOVE Conjsub IF (-3 N) (-2 AV OR PREAV) (-1 AJ) (0 Que) ;
REMOVE AVG IF (NOT -1 ("pas") OR ("solament")) (0 Que) ;

REMOVE PRON IF (0 Se) (NOT 1 Pro OR V + P3 OR V + VBinf OR V + VBger) ;	# se canti
#REMOVE PRON IF (0 Se) (1 ("ne")) ;	# Se n’èram estadas amigas
SELECT Conjadv IF (0 ("<s'i>"i) OR ("<s’i>"i)) (1 ("aver") OR ("auer")) ;
SELECT Conjadv IF (0 Se) (1 ("<n'i>"i) OR ("<n’i>"i)) (2 ("aver") OR ("auer")) ;
SELECT Conjadv IF (0 Se) (1 Pro) (2 Pro) (3 V) ;	# patch
SELECT Conjadv IF (0 Se) (0/* Pro) (1 Pro) (2 V) ;	# patch
SELECT Conjadv IF (0 Se) (1 Pro) (2 Pro) (3 Pro) (4 V) ;	# patch
SELECT Conjadv IF (0 Se) (0/* Pro) (1 Pro) (2 Pro) (3 V) ;	# patch
SELECT PRON IF (0 Se) (1C Pro OR V + P3) ;	# patch			NE MARCHE PAS DU TOUT

SELECT PREP IF (0 Dins) (1 DET) ;

REMOVE Pro IF (NOT 1 V OR Pro) ;
REMOVE DET IF (0 Tn) (NOT 1 N OR AJ) ;

SELECT N IF (0 ("<Estat>")) ;
SELECT N IF (-1 DET + Masc) (NOT -1 Ser) (0 Estat) ;
SELECT VBpp IF (-1 Ser + Sg) (0 Estat + Sg) ;
#SELECT VBpp IF (-1 Ser + Pl) (0 Estat + Pl) ;
SELECT Ser IF (0 Ser + Sg) (1 Ser + VBpp + Sg) ;
SELECT Ser IF (0 Ser + Pl) (1 Ser + VBpp + Pl) ;
SELECT VBpp IF (-2 Ser + Sg) (-1 AV) (0 Estat + Sg) ;
SELECT VBpp IF (-2 Ser + Pl) (-1 AV) (0 Estat + Pl) ;
SELECT Ser IF (0 Ser + Sg) (1 AV) (2 Ser + VBpp + Sg) ;
SELECT Ser IF (0 Ser + Pl) (1 AV) (2 Ser + VBpp + Pl) ;
SELECT N IF (-1 ("vila") OR ("ciutat")) (0 Estat) ;	# vila estat
SELECT N IF (-1 ("<[a-zàáèéíòóú]>.*"r)) (0 Estat) ;	# "Estat" (con mayúscula) va precedido de una palabra con minúscula inicial

REMOVE AJ IF (0 Las) (1 N + FemPl) ;	# las pomas

SELECT Conjco IF (0 Mas) (-1 CM) ;

REMOVE N IF (-1C V) (0 Pel) ;

# NP

SELECT NP IF (NOT -1 BOS) ;

SELECT Conjco (-1 BOS) (0 ("Mas")) ;

REMOVE Cog IF (-1 DETdef) (0 Cog) ;
REMOVE Cog IF (-1 DETind) (0 Cog) ;
REMOVE Cog IF (-1 En) (0 Cog) ;
REMOVE Ant IF (-1 DETdef) (0 Ant) ;
REMOVE Ant IF (-1 DETind) (0 Ant) ;
REMOVE Ant IF (-1 En) (0 Ant) ;

SELECT NP IF (0 N OR NP) (1 NP) (0 (META:/-/r)) (NOT 0 ("bas") OR ("haut")) ;   # Pierre-Michel
SELECT Ant IF (0 Ant) (1C Ant) (0 (META:/-/r)) ;                                # Jean-René
SELECT Ant IF (-1C Ant) (0 Ant) (-1 (META:/-/r)) ;
SELECT Cog IF (0 Cog) (1C Cog) (0 (META:/-/r)) ;
SELECT Cog IF (-1C Cog) (0 Cog) (-1 (META:/-/r)) ;
SELECT Cog IF (0 Cog OR Ant) (-1C Ant) (NOT 1 Cog) ;

SELECT Ant IF (0 MascSg) (1 (<"Ièr">)) ;
SELECT AJ IF (-1 Ant OR MajIni OR unknownMajIni) (0 ("<Ièr>")) ;
SELECT Top IF (-2 Ant) (-1 De) ;                                        # Louis de Lorraine
SELECT Top IF (-3 Ant) (-2 siecles_nom_romains OR ("<Ièr>")) (-1 De) ;  # Louis II de Lorraine
SELECT Ant IF (1 De) (2 Top) ;                                          # Michel de Lorraine
SELECT Ant IF (1 siecles_nom_romains OR ("<Ièr>")) (2 De) (3 Top) ;     # Michel II de Lorraine
SELECT Top IF (-2 ("vila") OR ("estat") OR ("region") OR ("catedrala") OR ("glèisa") OR ("aeropòrt") OR ("pòrt")) (-1 De) ;
SELECT Top IF (-2 ("concili") OR ("parlament") OR ("constitucion") OR ("tractat") OR ("declaracion")) (-1 De) ;
SELECT Top IF (-2 ("universitat")) (-1 De) ;                             # université de Paris VII
SELECT Ant IF (1 siecles_nom_romains OR ("<Ièr>")) ;                    # Michel II
SELECT Top IF (1C Top) (0 (META:/-/r)) ;
SELECT Top IF (-1C Top) (-1 (META:/-/r)) ;

SELECT Ant_Cog IF (0 Cog OR Ant) (1C Cog) ;
SELECT Ant IF (0C Ant OR Cog) (1 Ant) (0 (META:/-/r)) ;                         # Charles-Michel
SELECT Cog IF (0C Ant OR Cog) (1 Cog) (0 (META:/-/r)) ;
SELECT Ant IF (NOT -1 Ant) (0C Ant OR Cog) (1 Cog) (NOT 0 (META:/-/r)) ;        # Albin Michel; Claude Étienne Michel
SELECT Masc_strict IF (-2 DETdef + MascSg) (-1 N_AJ + MascSg) (0C Ant) ; # l'empereur Claude
SELECT Fem_strict IF (-2 DETdef + FemSg) (-1 N_AJ + FemSg) (0C Ant) ;    # la belle Claude
SELECT Masc_strict IF (0 Ant + Masc_strict) (1C Ant + Masc_strict) ;
SELECT Fem_strict IF (0 Ant + Fem_strict) (1C Ant + Fem_strict) ;
SELECT Masc_strict IF (-1C Ant + Masc_strict) (0 Ant + Masc_strict) ;
SELECT Fem_strict IF (-1C Ant + Fem_strict) (0 Ant + Fem_strict) ;

SELECT Ant IF (0 ("René") OR ("Renée") OR ("Marc") OR ("Pierre") OR ("Beau")) (1 Ant OR NP OR unknownMajIni) ;
SELECT Masc_strict IF (0 ("Camille")) (1 ("Pissarro")) ;
SELECT Cog IF (-1 ("Édouard")) (0 ("Philippe")) ;
SELECT Ant IF (0 ("Édouard")) (1 ("Philippe")) ;
SELECT Ant IF (0 ("Luther")) (1 Cog OR unknownMajIni) ;
SELECT Cog IF (0 ("Luther")) (NOT 1 Cog OR unknownMajIni) ;

SELECT Fem IF (0 ("Simone")) ;

SELECT Masc_strict IF (0 ("Antigone")) (1 ("le")) (2 ("borgne")) ;
SELECT Masc_strict IF (0 ("Antigone")) (1 ("\\<[IXV]>"r)) ;
SELECT Fem_strict IF (0 ("Antigone")) ;
SELECT Fem_strict IF (0 ("Andromaque")) ;

SELECT Masc_strict IF (0 ("Cassandre")) (1* ("Macédoine") OR ("Roxanne") OR ("Alexandre") OR ("Antipater") OR ("Ptolémée") OR ("roi") + Masc OR ("diadoque")) ;
SELECT Masc_strict IF (0 ("Cassandre")) (-1* ("Macédoine") OR ("Roxanne") OR ("Alexandre") OR ("Antipater") OR ("Ptolémée") OR ("roi") + Masc OR ("diadoque")) ;
SELECT Fem_strict IF (0 ("Cassandre")) ;

SELECT Ant + Masc_strict IF (0 Ant) (1 DETdef + Sg + Masc) (2 N_AJ + Sg + Masc + MajIni) ;
SELECT Ant + Fem_strict IF (0 Ant) (1 DETdef + Sg + Fem) (2 N_AJ + Sg + Fem + MajIni) ;
SELECT Ant + Masc_strict IF (0 Ant) (1 DETdef + Sg + Masc) (2 unknownMajIni) ;
SELECT Ant + Masc_strict IF (0 Ant) (1 siecles_nom_romains OR ("<Ièr>")) ;              # Constance II

REMOVE Ant IF (-1 ("banca")) (NOT 1 Cog OR Ant) ;

SELECT Top IF (-2C Ant) (-1 ("<de>")) (0C Cog OR Ant OR Top) ;
SELECT Ant IF (0C Cog OR Ant OR Top) (1 ("<de>")) (2C Top) ;    # Maurice de Saxe
REMOVE Top IF (0 Cog OR Ant OR Top) (1 unknownMajIni) (NOT -1 ("de")) ;
SELECT Ant IF (NOT -1 Cog OR Ant) (0C Cog OR Ant) (1 unknownMajIni) ; # Léon Verguet
REMOVE (cog) IF (0C NP) (0 (cog)) (0 (top)) (NOT 1 (ant) OR (cog)) (-1 BOS); # Orihuela, Vilallonga

SELECT Ant IF (-1 ("dieu") OR ("déesse")) ;

SELECT Ant IF (-1 (";") OR (":")) (1 Ant OR Cog OR unknownMajIni) ;

SELECT Top IF (-2 ("ville") OR ("aéroport") OR ("port") OR ("royaume") OR ("principauté") OR ("grand-duché") OR ("duché") OR ("marquisat") OR ("comté") OR ("baronnie") OR ("seigneurie") OR ("archevêché") OR ("évêché")) (-1 ("de")) (0 Cog OR Ant) ;
SELECT Top IF (-2 Dignite) (-1 ("de")) (0 Top) ;

REMOVE Al IF (-1 Ant OR Cog) (0 Ant OR Cog) ;
REMOVE Top IF (-1 Ant OR Cog) (0 Ant OR Cog) ;
REMOVE Al IF (0 Ant OR Cog) (1 Ant OR Cog) ;


#deu -> dever / de +lo
LIST Deu = "deu" ;
SELECT V IF (0 ("<deu>")) (1 SENT OR Pro) ;
REMOVE V IF (0 ("<deu>")) (NOT 1 VBinf OR AV) ;

# de las + adj
SELECT DET IF (0 ("<la>"i) OR ("<las>"i)) (-1 ("de")) (1 AJ + Fem) ;

# la, las (det)
SELECT DET IF (0 ("<la>"i)) (1C N_AJ + FemSg) ;
SELECT DET IF (0 ("<las>"i)) (1C N_AJ + FemPl) ;	# atencion : las casas (np.pro vblex)

#pel/peu nom o article contractat
REMOVE N IF (1 Nm + Sg) (0 ("<peu>"i) OR ("<pel>"i)) (NOT -1 DET + Sg) (NOT -1 Artcontrsg) ;
REMOVE N IF (1 Nm + Pl) (0 ("<peus>"i) OR ("<pels>"i)) (NOT -1 DET + Pl) (NOT -1 Artcontrpl) ;


#punt de vista
SELECT SUB:1 Nf IF (0 PREP) (-1 ("punt") OR ("ponch")) (0 ("<de vista>")) ;

#mes de mai
SELECT SUB:1 Nm IF (0 PREP) (-1 ("mes")) (0 ("<de mai>")) ;
SELECT SUB:1 Nm IF (0 PREP) (-1 Nummois) (0 ("<de mai>")) ;

#mes mois
REMOVE AV IF (0 ("mes")) (-1 DET) (-1 MascSg) ;
REMOVE AV IF (0 ("mes")) (-1/* PREP + DET) ;

#qui cnjadv o rel
REMOVE Conjadv IF (0 ("qui")) (NOT -1 AJ OR V OR AV) ;

#Lo jorn de la setmana es un nom s'es precedit d'un determinant
REMOVE AV IF (-1 DET) (0 Jorns) ;
